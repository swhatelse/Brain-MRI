#+TAGS: noexport(n) software(s) Alexis(a) Florence(f) deprecated(d) EM(e) HMM(h) MMST(m) R(r) C(c) Bug(b)

#+Title: Journal
#+AUTHOR:      Steven QUINITO MASNADA
#+BABEL: :tangle yes :noweb yes

* TODO Objectives [1/6]
  - [ ] Create R package from Stephane Despreaux source code
  - [-] A first running version
    - [X] C++ code as .so
      Using Rcpp to export and expose functions / classes to R.
    - [X] Split c++ source
    - [ ] Write test cases
    - [ ] Neighbourhood system
    - [ ] Computation of the lower bounds
    - [ ] Computation of the log densities
    - [ ] Conditional compilation of openmp version
    - [ ] Simplify the use of the software
      - [ ] Automated initialization from a data only
      - [ ] Ability to provide hand made data for the different step
        of the algorithm.
  - [-] Optimization [1/6]
    - [ ] Code refactoring
    - [ ] Code audit:
      - profiling \to Gprof
      - instrumenting \to PAPI or Likwid
    - [X] Is BOAST suited? Can we mix it with StarPU?
      Yes, but BOAST not suited for c++.
    - [ ] How to organize data in memory (row vs column) eg. [MRI x
      Observations] vs [Observations x MRI]
    - [ ] Use fixed size matrices/vectors
    - [ ] Use the right to type at the right place
  - [ ] Parallelization [0/5]
    - [ ] Find how to parallelize efficiently Markov fields computation
      - [ ] Take a look at Stable/independent set \to Markov fields
        decomposition 
    - [ ] CPU version
    - [ ] GPU version
    - [ ] Cluster
    - [ ] Tools to ease this task
      - [ ] Is StarPU suited?
  - [X] Move =HMM_MMST.org= to Alexis's Gibbs project.
  - [-] Structure the repository using subrepo / submodule.
    - [X] Move repos outside the repo where the journal is
    - [ ] Use submodule
* Repository
  #+begin_src sh :results output :exports both
    # Gibbs MMST
    git clone https://stevenqm@scm.gforge.inria.fr/authscm/stevenqm/git/mmsdarticle/mmsdarticle.git
    git clone https://stevenqm@scm.gforge.inria.fr/authscm/stevenqm/git/mmsdarticle/article.git
    git clone https://stevenqm@scm.gforge.inria.fr/authscm/stevenqm/git/mmsdarticle/code.git

    git clone https://gitlab.inria.fr/arnaud/MMST_with_Markov_Random_Field.git

    git svn clone --username stevenqm https://scm.gforge.inria.fr/authscm/stevenqm/svn/ginria/ -s
    git svn clone --username stevenqm https://scm.gforge.inria.fr/authscm/stevenqm/svn/spacem3/ -s 
  #+end_src
* Tips
** Org mode
   - To format a text to fit 80 charac / line \to fill-paragraph or fill-region
* September
** 2017-09-05
*** Tumor detection process                                        :software:
    1. ROI localization
      a. Build the reference model of healthy subjects:
        - Find data cluster according to their distribution (multiple
        scale t-distributions) using the EM algorithm 
        - Aggregate these distributions into a mixture model
      b. Distriminate abnormal voxels:
        - By using reference model to compute likelyhood score for each
          voxels 
        - Determine a threshold to distinguish healthy from pathological
	  - Compute the different anomaly level thresholds using slope
            heuristic
	  - Compute threshold of only 2 components (healthy /
            pathological) and keep the closest to one of the threshold
            computed previously.
    2. Build a anomaly model:
       - same as in 1.a on abnormal voxels
    3. Fingerprint model \to Supervised learning to characterize the
       different tumor types:
       - Compute the proportion of each anomaly clusters in the tumors
       - Take into account their sizes.
    4. Remove healthy isolated voxels considered as abnormal.
       - Refined segmentation \to erosion-dilatation kernel to remove
         isolated voxels.
       - Refined fingerprint model \to redo 3. using refined segmentation
** 2017-09-11
*** EM algorithm explanation                                  :deprecated:EM:
    _*Update:* The EM algorithm has been studied and described with more detail_
    _in [[file:Notes.org][Notes.org]] and in [[file:HMM_MMST.org][HMM_MMST.org]]._

    In this case, the models used are t-distributions and the EM
    algorithm try to find the following parameters:
    - \mu \to mean of the distribution
    - D \to Covariance matrix \to orientation
    - A \to shape and volume
    - \nu \to degrees of freedom
    
    There are two steps:
    - Expectation \to compute posterior probabilities \to find latent variables
    - Maximization \to update parameter model by maximizing the log likelyhood
      \to find parameter values
            
* October
** 2017-10-20
*** Meeting
    - For parallelization take a look at independent set \to grid/graph
      partitioning, conditional independence + GPU + MRF
    - Ideally, the order for which we compute the label
      distribution (q_{z_n}) at each site should be randomized. This
      imply a different graph dependency at each iteration.
    - \beta \to Numerical optimization involves of sum above all the voxels
      \to costly \to take a look at stochastic gradient.
* November
** 2017-11-06
   - Considering the code, it seems a project is implemented by method
     (e.g baysian, HMM, etc...) maybe it should be better if
     everything is gathered in one project \to same code base.

   - At first we will start with a 2D neighbourhood because on rat MRI
     the resolution on the z-axis is low (only 5 vs 256). Indeed each slice
     of the z-axis is far form each others and in this case
     considering the neighbours in the z-axis seems not important
     because they are very far compared to the one on the x or
     y-axis. When moving to human MRI 3D neighbourhood will be necessary.
** 2017-11-13
*** TODO Meeting
**** DONE Algorithms
     Release a first implementation to see how it performs with
     possible code optimization and then we can think about maybe
     modifying the EM algorithm itself maybe with some approximations,
     etc...
**** DONE Code organization
     Use as a basis the Bayesian version, but without the bayesian part
     and include the HMM part to have quickly a version to test.
     Once implemented we will see if we include this to SpaceM^3 or to
     Stephane Despréaux package.
**** TODO Git repo organization
     - [ ] A git based work-flow
       https://hal.inria.fr/hal-01112795/file/SIGOPS_paper.pdf
** 2017-11-16
*** R call C/C++                                                        :R:C:
**** Dplyr example
     Dplyr use c++ so I just took it as an example just to check the compiler directives (include paths, etc...):
     #+begin_src R :results output :session :exports both
     install.packages("dplyr")
     #+end_src

     #+RESULTS:
     #+begin_example
     Installation du package dans ‘/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4’
     (car ‘lib’ n'est pas spécifié)
     essai de l'URL 'https://pbil.univ-lyon1.fr/CRAN/src/contrib/dplyr_0.7.4.tar.gz'
     Content type 'application/x-gzip' length 808054 bytes (789 KB)
     ==================================================
     downloaded 789 KB

     * installing *source* package ‘dplyr’ ...
     ** package ‘dplyr’ correctement décompressé et sommes MD5 vérifiées
     ** libs
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c address.cpp -o address.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c api.cpp -o api.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c arrange.cpp -o arrange.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c between.cpp -o between.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c bind.cpp -o bind.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c combine_variables.cpp -o combine_variables.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c distinct.cpp -o distinct.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c encoding.cpp -o encoding.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c filter.cpp -o filter.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c group_by.cpp -o group_by.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c group_indices.cpp -o group_indices.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid.cpp -o hybrid.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_count.cpp -o hybrid_count.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_debug.cpp -o hybrid_debug.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_in.cpp -o hybrid_in.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_minmax.cpp -o hybrid_minmax.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_nth.cpp -o hybrid_nth.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_offset.cpp -o hybrid_offset.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_simple.cpp -o hybrid_simple.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_window.cpp -o hybrid_window.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c init.cpp -o init.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c join.cpp -o join.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c join_exports.cpp -o join_exports.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c mutate.cpp -o mutate.o
     gcc -std=gnu99 -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c rlang-export.c -o rlang-export.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c select.cpp -o select.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c set.cpp -o set.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c slice.cpp -o slice.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c summarise.cpp -o summarise.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c test.cpp -o test.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c utils.cpp -o utils.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c window.cpp -o window.o
     g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o dplyr.so RcppExports.o address.o api.o arrange.o between.o bind.o combine_variables.o distinct.o encoding.o filter.o group_by.o group_indices.o hybrid.o hybrid_count.o hybrid_debug.o hybrid_in.o hybrid_minmax.o hybrid_nth.o hybrid_offset.o hybrid_simple.o hybrid_window.o init.o join.o join_exports.o mutate.o rlang-export.o select.o set.o slice.o summarise.o test.o utils.o window.o -L/usr/lib/R/lib -lR
     installing to /home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/dplyr/libs
     ** R
     ** data
     *** moving datasets to lazyload DB
     ** inst
     ** preparing package for lazy loading
     ** help
     *** installing help indices
     *** copying figures
     ** building package indices
     ** installing vignettes
     ** testing if installed package can be loaded
     * DONE (dplyr)

     Les packages source téléchargés sont dans
             ‘/tmp/Rtmp1i7F52/downloaded_packages’
#+end_example
**** C source
***** Main
     #+BEGIN_SRC c :tangle ../../../other/R/C/src/core/main.c
       #include<stdio.h>
       #include<stdlib.h>

       #include"vectorAdd.h"

       #define LENGTH 8

       int main(int argc, char** argv){
           int a[LENGTH] = {1,2,3,4,5,6,7,8};
           int b[LENGTH] = {1,2,3,4,5,6,7,8};

           int c[LENGTH] = {0,0,0,0,0,0,0,0};

           vectorAdd(a,b,c,LENGTH);

           for(int i = 0; i < LENGTH; i++){
               printf("%d ", c[i]);
           }
           
           printf("\n");
           
           return EXIT_SUCCESS;
       }
     #+END_SRC
***** Header 
     #+BEGIN_SRC c :tangle ../../../other/R/C/src/core/vectorAdd.h
       void vectorAdd(const int* a, const int *b, int *c, const int length);
     #+END_SRC
***** function
     #+BEGIN_SRC c :tangle ../../../other/R/C/src/core/vectorAdd.cpp
       #include"vectorAdd.h"

       void vectorAdd(const int* a, const int *b, int *c, const int length){
           for(int i = 0; i < length; i++){
               c[i] = a[i] + b[i];
           }
       }
     #+END_SRC
***** Makefile
     #+BEGIN_SRC makefile :tangle ../../../other/R/C/src/core/Makefile
       CC=g++
       CFLAGS=-O3
       # INCLUDES=-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include -I/usr/share/R/include/
       INCLUDES=
       LIBS=-L/usr/lib/R/lib -lR

       vectorAdd.o: vectorAdd.cpp
       $(CC) $(CFLAGS) $(INCLUDES) -fPIC -c $^

       libvectoradd.so: vectorAdd.o
       $(CC) $(CFLAGS) -shared -o $@ $^ $(LIBS)

       main: main.c
       $(CC) $(CFLAGS) -o $@ $^ -L. -lvectoradd

       all: vectorAdd.o libvectoradd.so main

       clean:
       rm -f vectorAdd.o libvectoradd.so main

     #+END_SRC
***** Compile and run
      #+begin_src sh :results output :exports both
        cd ../../../other/R/C/src/core/
        make all
        export LD_LIBRARY_PATH=$PWD:$LD_LIBRARY_PATH
        ./main
      #+end_src
**** C wrapper
***** Manual
      Not sure R data structures stores elements are stored
      contiguously in memory and because I don't want to rely and R
      type, in the following example I use vector as a intermediary
      type to convert R variable type to C arrays. It is a little ugly
      maybe there exist a better way. Maybe using armadillo type could
      be the way to do...
      #+BEGIN_SRC c :tangle ../../../other/R/C/src/r_wrapper/wrapper.cpp
        // Extension to convert std::vector to SEXP
//        #include<RcppCommon.h>
//        namespace Rcpp{
//            namespace traits{
//                template <typename T> SEXP wrap(const std::vector<T> & obj);
//            }
//        }

        #include<Rcpp.h>
//        namespace Rcpp{
//            namespace traits{
//                template <typename T> SEXP wrap(const std::vector<T> & obj){
//                    const int RTYPE = Rcpp::traits::r_sexptype_traits<T>::rtype ;                    
//                    return Rcpp::Vector< RTYPE >(obj.begin(), obj.end());
//                };                
//            }
//        }
      
      #+END_SRC

      #+BEGIN_SRC c :tangle ../../../other/R/C/src/r_wrapper/wrapper.cpp
              
        #include<vector>
        #include"../core/vectorAdd.h"

        using namespace Rcpp;

        extern "C" SEXP addVectorWrapper(SEXP a, SEXP b, SEXP c, SEXP length){
            std::vector<int> a_ = Rcpp::as< std::vector<int> > (a);
            std::vector<int> b_ = Rcpp::as< std::vector<int> > (b);
            std::vector<int> c_ = Rcpp::as< std::vector<int> > (c);
            Rcpp::traits::input_parameter< int >::type length_(length);

            int* _a = &a_[0];
            int* _b = &b_[0];
            int* _c = &c_[0];
            std::vector<int> foo;
            vectorAdd(_a, _b, _c, length_);
            return Rcpp::wrap(c_);            
            // return R_NilValue;
        }
      #+END_SRC
***** Automatic
**** C shared library for R
     #+begin_src sh :results output :exports both
       cd /home/mistis/squinito/Dev/other/R/C/src/r_wrapper
       PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
       PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
       R CMD SHLIB ../core/vectorAdd.cpp wrapper.cpp
     #+end_src

**** R calling C
     #+begin_src R :results output :session :exports both
       library("Rcpp")
       setwd("/home/mistis/squinito/Dev/other/R/C/src/core")
       a = matrix(c(1,2,3,4),nrow=4,ncol=1)
       b = matrix(c(1,2,3,4),nrow=4,ncol=1)
       c = matrix(c(0,0,0,0),nrow=4,ncol=1)
       x <- dyn.load("vectorAdd.so")
       .Call("addVectorWrapper", a, b, c, 4)
       c
     #+end_src

     #+RESULTS:
     : 2
     : [1] 2 4 6 8
     :      [,1]
     : [1,]    0
     : [2,]    0
     : [3,]    0
     : [4,]    0


**** Rcpp
     - To crate a package using the specified c/c++ source files:
       #+begin_src R :results output :session :exports both
         Rcpp.package.skeleton(example_code=FALSE, cpp_files=c("src/vectorAdd.c", "src/vectorAdd.h"))
       #+end_src
       The package is create in different directory that the on
       specified. It is silly because it copies files instead of just
       turning the specified directory into a package.

     - Add c/c++ file references to RccExports.{R/cpp}
       #+begin_src R :results output :session :exports both
         compileAttributes(pkgdir="anRpackage/")
       #+end_src
**** Guideline
     - Never use abort or exit or any stuff that can call them because
       they kill the R process.
**** Expose classes
     #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/A.hpp
       #ifndef A_HPP
       #define A_HPP
       #include<Rcpp.h>

       using namespace Rcpp;

       class A{
       public:
           int x;

           A(int x);
           int foo();
       };      
       #endif
     #+END_SRC

     #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/A.cpp
       #include"A.hpp"

       A::A(int x): x(x) {}
       int A::foo(){ return x * x; }
     #+END_SRC

     #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/B.hpp
       #ifndef B_HPP
       #define B_HPP

       #include<Rcpp.h>
       #include"A.hpp"

       using namespace Rcpp;

       class B{
       public:
           A a;
           B(int x);
       };

       #endif
     #+END_SRC

     #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/B.cpp
       #include"B.hpp"

       B::B(int x): a(x){ } 
     #+END_SRC

     #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/RcppWrapper.cpp
       #include"A.hpp"
       #include"B.hpp"
       RCPP_EXPOSED_CLASS(A);
       RCPP_EXPOSED_CLASS(B);
       RCPP_MODULE(mod) {
           class_<A>( "A" )
               // Constructors :
               // .constructor( "default" )
               .constructor< int >( "sets x" )
               // Fields :
               .field( "x", &A::x, "Value of x")
               
               // Methods :
               .method( "foo", &A::foo, "access of the private field 'clusters'")
               ;
           class_<B>( "B" )
               // Constructors :
               // .constructor( "default" )
               .constructor< int >( "sets a" )
               // Fields :
               .field( "a", &B::a, "Value of a")
               
               // Methods :
               ;
       }      
     #+END_SRC

     #+begin_src sh :results output :exports both
       cd /home/mistis/squinito/Dev/other/R/C/expose_class/src
       PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
       PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
       R CMD SHLIB A.cpp B.cpp RcppWrapper.cpp -o libtest.so
     #+end_src

     #+RESULTS:
     : g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o libtest.so A.o B.o RcppWrapper.o -L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/usr/lib/R/lib -lR

     #+begin_src R :results output :session :exports both
       library(Rcpp)
       setwd("/home/mistis/squinito/Dev/other/R/C/expose_class/src/")
       lib <- dyn.load("classes.so")
       mymodule <- Rcpp::Module("mod",lib)

       B <- mymodule$B
       b <- new( B, 4 )
       a <- b$a
       a$x
       a$foo()
     #+end_src

     #+RESULTS:
     : [1] 4
     : [1] 16

**** Export list
      When using a =std::list= or =std::vector= of a non-primitive
      c++ type in a public field of a class or in a method parameter
      Rcpp doesn't know how to convert the type. However if it is the
      return type of a method, it doesn't complain.
     #+BEGIN_SRC c++ :tangle /tmp/list.cpp
       #include<Rcpp.h>
             
       class A{
       public:
           int x;
           A(){}
           A(int x):x(x){}
       };

       class B{
       private:
           std::list< A > a_list;
       public:
           A a;
           B():a(10){ a_list.push_back(a); a_list.push_back(a);}
           void foo(std::list< A > l){}
           std::list< A > get_list(){return a_list;}
           void set_list(const std::list< int > l){}
       };

       RCPP_EXPOSED_CLASS(A);
       RCPP_EXPOSED_CLASS(B);

       RCPP_MODULE(mod) {
           using namespace Rcpp;
           class_<A>("A")
               .constructor()
               .constructor<int>()
               .field("x", &A::x, "blabla")
               ;
           class_<B>("B")
               .constructor()
               .field("a", &B::a, "blablabla")
               //.field("a_list", &B::a_list, "blablabla")
               .property("get_list", &B::get_list, "")
               //.method("foo", &B::foo, "blabla")
               ;
           class_< std::list< A > >("list")
               .constructor()
               .method("pop_back", &std::list< A >::pop_back, "")
               ;
       }
     #+END_SRC

     #+BEGIN_SRC makefile
       main: list.cpp
               PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
               PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
               R CMD SHLIB $^ -o liblist.so     
       clean:
               rm -f *.so *.o
     #+END_SRC

     #+begin_src sh :results output :exports both
       cd /tmp
       PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
       PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
       R CMD SHLIB list.cpp -o liblist.so

     #+end_src

     #+RESULTS:
     : g++  -I/usr/share/R/include -DNDEBUG -I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include     -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c list.cpp -o list.o
     : g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o liblist.so list.o -L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/usr/lib/R/lib -lR

     #+begin_src R :results output :exports both
       library(Rcpp)
       setwd("/tmp")
       lib <- dyn.load("list.so")
       mymod <- Rcpp::Module("mod", lib)
       B <- mymod$B
       b <- new(B)
       list <- b$get_list()
       list
     #+end_src

     #+RESULTS:
     : [[1]]
     : C++ object <0x1f4d890> of class 'A' <0x2a0d350>
     : 
     : [[2]]
     : C++ object <0x27ceac0> of class 'A' <0x2a0d350>
     : 

      In fact the problem is not =std::list/vector/whatever= but what it
      contains if we want to use it like this we need to tell R how to
      convert A.
     #+BEGIN_SRC c++ :tangle /tmp/RcppWrapper.cpp
       //#include<RcppCommon.h>

       class A{
       public:
           int x;
           A():x(10){}
           // A(const A& a):x(a.x){}
           // ~A(){}
           // A(SEXPREC *x){}
           //operator SEXP(){ return R_NilValue;}
       };

       /* namespace Rcpp{
           // R to C++
           template<> SEXP wrap(const A&);
           // C++ to R
           // template <> class Exporter< std::vector<A> >;
       } */

       #include<Rcpp.h>       

       RCPP_EXPOSED_CLASS(A);
       RCPP_EXPOSED_WRAP(A);
       RCPP_EXPOSED_AS(A);

       /* namespace Rcpp{
           // R to C++
           SEXP wrap(const A& obj){
               return R_NilValue;
           }
       } */

       extern "C" SEXP foo(SEXP x){
           std::list< A > x_ = Rcpp::as< std::list< A > > (x);
           return Rcpp::wrap(x_);
           //return R_NilValue;
       }
     #+END_SRC

      #+begin_src sh :results output :exports both
        cd /tmp
        PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
        PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
        R CMD SHLIB RcppWrapper.cpp

      #+end_src

      #+RESULTS:

      #+begin_src R :results output :session :exports both
      
      #+end_src
** 2017-11-20
   How much more computation will we do if we add borders with virtual
   voxels to avoid if conditions?
    #+BEGIN_SRC ruby
      h = 256
      w = 256
      n_h = 1
      n_w = 1

      ######### Naive approach #########
      naive = 0

      # Borders
      sum = 0
      (0...(w - 2 * n_w)).each do
        (0...(n_h)).each do |j|
          sum += (2 * n_w + 1) * (n_h + 1 + j) - 2
        end
      end

      naive += 4 * sum

      # Corners
      sum = 0
      (0...(n_w)).each do |i|
        (0...(n_h)).each do |j|
          sum += (n_w + 1 + i) * (n_h + 1 + j) - 2
        end
      end

      naive += 4 * sum

      naive += (w - 2 * n_w) * (h - 2 * n_h) * ((2 * n_h + 1) * (2 * n_w + 1) - 2)

      ######### Virtual border approach #########
      virt = h * w * ((2 * n_h + 1) * (2 * n_w + 1) - 2)
      virt

      virt.to_f / naive.to_f
   #+END_SRC

    #+RESULTS:
    : 1.0067327358432598

   Small computation overhead \to less than 1% more 

** 2017-11-30
*** DONE Questions [9/9]
    - [X] Why does =Gamma_Law= have an attribute mean? (rate / shape)
      The gamma law describes the distribution of the weights knowing
      the labels and there no mean used in the formulas. Where is it
      usefull and why? 
      It isn't a parameter of the gamma law it is just stored for
      convenience because the expectation of the gamma law is needed.
    - [X] In the computation of the gamma rate parameter of the
      posterior, is gamma_rate not supposed to be a vector of size
      NB_CLUSTERS? In the formula we \delta_km. Same questions
      for ~\delta \to =NB_MRI_DIMENSION= \times =N=.
      Separation by cluster \to for each cluster there is a vector of
      size =NB_MRI_DIMENSION=
    - [X] In =Gibbs_Law::update_outer_fields= why is the outer field set
      to the mean of the probabilities? 
      This way \alpha behaves like \pi like in the classical case. This gives
      a the multinomial case.
      Maybe using -log(mean)
    - [X] In =Gamma_Law::log_density=: rate is only a vector \to why same
      rate for each voxels and clusters?
      Because it the general case (Gibbs) > < variational. In the
      Gibbs distribution each voxels have the same rates and
      parameters. As opposed to the variational case, where each
      voxels have their own parameters and thus their own gamma law.
    - [X] What does follow a multinomial distribution? 
      P(Z) which is a Gibbs distribution is approximated by the
      posterior of the classes (q(z_n)), a multinomial law . Each z_n
      follow its own multinomial law.
    - [X] In the Model class, clustering is the belonging to a class
      for each voxels and depends to the probability distribution
      P(Z). It is only initialized, in the Model constructor but never
      updated. The update of the lower bound takes into account the
      clustering in =Model::update_lower_bound=, as =clustering= is not
      update the lower bound is based on the initial distribution
      of Z. The update is missing right?
      Yes it is missing the update of the =lower_bound= will be done at
      the end of the M-Step.
    - [X] Why is the =lower_bound= updated just after the E_step and not
      the M step?  Because probabilities P(Z) have to be computed just
      after approximating the Gibbs distribution without modifying the
      parameters (index coherency).
    - [X] What is the log density for a cluster? Is it not supposed to
      be P(Z)?  It is an MST law.
    - [X] In each iteration of EM, just after the variational
      approximation, in =Model::update_lower_bound= the lower is updated
      taken into account the =lower_bound= of the clusters the this one
      is never updated. I guess this part is missing.
      Yes it is.
*** Call structure
    - =Model::initialization=: Initialize Q_zn and the labels for each pixels.
    - =Model::em=
      - =Variational::update=
        - =Gamma_Law::variational_update=: Compute posterior rate,
          shape, mean, outer field, local field
          - =Gamma_Law::variational_update_shape=: Compute \gamma for the posterior
          - =Gamma_Law::variational_update_rate=: Compute \delta for the posterior
          - =Gamma_Law::variational_update_mean=: Compute \mu for the posterior
            Divide vs [pow mult]
        - =Multinomial_Law::variational_update=:
          - =Multinomial_Law::variational_update_probabilities=: Compute
            the posterior of the labels (q_z)
      - =Model::update_lower_bound= 
        - =Gibbs_Law::log_density= 
      - =Cluster::update_M_step= 
        - =Gamma_Law::update=
          - =Gamma_Law::update_shape=: Compute \gamma
          - =Gamma_Law::update_mean=: Compute the expectation of the
            distribution
        - =Gaussian_Law::update=
          - =Gaussian_Law::update_mean=: Compute \mu
          - =Gaussian_Law::update_orthogonal=: Compute D
            - =Armijo_C=
            - =gradf_C=
            - =RetractionQR_C=
            - =objectFunction_C=
            - =RetractionQR_C=
          - =Gaussian_Law::update_diagonal=: Compute A
      - =Gibbs_Law::update=
        - =Gibbs_Law::update_outer_fields=
        - =Gibbs_Law::update_local_fields=: Does not compute \beta for now
* 2018
** January
*** 2018-01-09
**** About the matrix shapes                                            :Bug:
     There are some inconsistencies between the classical and
     variational approach in the way data are stored into matrices,
     causing some errors that force us to do some transpositions. For
     example in variational the MRI dimension is stored in row but in
     column in the classical approach. Or an other example with the
     =rate= and the =shape= of the =Gamma_Law= class, shape \to vec \to [MRI x 1] vs
     rate \to [OBSERVATIONS x MRI].
***** Causing errors                                                    :Bug:
      - =Gamma_Law::update_mean= : =Gamma::rate= has a shape [MRI x 1] in
        the classical approach but has a shape [Observations x MRI] in
        variational.
        For now as generally everything is organized as [Observations
        x ...] =Gamma::rate= should be like this [1 x MRI] and as a
        consequence =Gamma::shape= should be a row vector.
***** Where the matrix/vector shapes matters
     - =Gamma_Law.cpp=
       - =f_temp=
         Doesn't care about the shape of =shape= but cares about =rate=
       - =update_shape=
         Doesn't care about the shape of =shape= but cares about =rate=
       - =update_mean= 
         Cares about the shape of =shape= and =rate=.
         shape[1 x MRI] rate[Observations x MRI] or 
         shape[MRI x 1] rate[MRI x Observations]
       - =log_density=
         Cares about the shape of =x=, =shape= and =rate=.
         Solution \to Transpose shape or use a row vector, rate \to [1 x MRI] and
         transpose x:
         #+BEGIN_SRC c++
           accu(shape % log(rate.row(0)) // classical : [MRI x 1] % [1 x 1] or variational : [MRI x 1] % [1 x MRI] -> [1 x MRI] % [1 x MRI]
                - lgamma(shape)          // [MRI x 1]                                                              -> [1 x MRI]
                + (shape - 1) % log(x)   // [MRI x 1] % [MRI x 1]                                                  -> [1 x MRI] % [1 x MRI]
                - rate.row(0) % x);      // classical : [1 x 1] % [MRI x 1] or variational : [1 x MRI] % [MRI x 1] -> [1 x MRI] % [1 x MRI]
         #+END_SRC
         But for now we can ignore it.
       - =variational_update_rate=
         Doesn't care about the shape of =shape= but cares about rate.
         Here there is nothing to do:
         #+BEGIN_SRC c
           rate.row( n ) = trans(gamma_rate + 0.5 *
                                                   diagvec(
                                                           diagmat( gaussian_diagonal ) *                       // [MRI x MRI]
                                                           gaussian_orthogonal.t( ) *                           // [MRI x MRI]
                                                           trans( data_values.row( n ) - gaussian_mean.t( ) ) * // [1 x MRI] - [1 x MRI] \to [MRI x 1]
                                                           ( data_values.row( n ) - gaussian_mean.t( ) ) *      // [1 x MRI] - [1 x MRI] \to [1 x MRI]
                                                           gaussian_orthogonal                                  // [MRI x MRI]
                                                   )
                           );
         #+END_SRC
       - =variational_update_mean=
         Cares about the shape of =shape=, =rate= and mean.
         Nothing to do.
       - =variational_log_density=
         Cares about the shape of =shape= and =rate=.
         Nothing to do.
         #+BEGIN_SRC c
           double res += accu( 
                              shape.t() % log(rate.row(n))      // [1 x MRI] % [1 x MRI]
                              - lgamma(shape.t())               // [1 x MRI]
                              + (shape.t() - 1) % log(x.row(n)) // [1 x MRI] % [1 x MRI] 
                              - rate.row(n) % x.row(n)          // [1 x MRI] % [1 x MRI] 
                             );
         #+END_SRC
     - =Variational.cpp=
       - =update=
         Cares about =shape= and =rate=.
         Organizing =Gamma_Law::rate= as [MRI x 1] or converting =shape=
         and =diagonal= to a row vector would resolve the problem.
     - =Gaussian_Law.cpp=
       - =update_orthogonal=
         Cares about the shape of mean. It is transposed here but if
         the =data_values= as a shape [MRI x observations] or mean is a
         row vector we don't need to transpose it.
       - =update_diagonal=
         Same as orthogonal.

*** DONE 2018-01-12
    - [X] What is the shape of =Gibbs_Law::outer_fields=?
      \alpha \in \real^{K} with K being the number of clusters.
*** 2018-01-15
    - [ ] In =Gamma_Law::update_shape= =temp_rate= isn't used anywhere,
      why?
    - [X] Segmentation error caused by [[file:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/Gamma_Law.cpp::106]]
      #+BEGIN_SRC c++
        arma::vec Gamma_x( 1 , fill::zeros ) ;
        Gamma_x( 0 ) = x ;
        Gamma_x = digamma( Rcpp::NumericVector( Gamma_x.begin( ) , Gamma_x.end( ) ) ) ;
      #+END_SRC
      To manipulate R objects/functions from C++ the C++ code need to
      be launched from R. Because an R session need to be
      open. Otherwise we get segfault when trying to create a simple R
      variable type.

*** 2018-01-16
**** Meeting Guillaume BARAT NVIDIA
***** Our work
      - Brain MRI for tumors detection
      - Image clustering \to Hidden Markov Random Field.
        EM algorithm \to Iterative algo to Maximize the likelihood.
        Not feasible to compute normalizing constant of the posterior
        distribution \to Variational approximation \to lots of
        dependencies between observations in the same iterations.
        
***** Questions
      - [ ] Hidden Markov Random Fields / Potts model on GPU?
        Variational Approach \to dependencies between voxels in an iteration.
      - [X] Any tools about graph processing on GPU?
        cuGraph
      - [ ] Thread divergence \to cooperative groups in Volta or Cuda 9?
*** 2018-01-18
**** Openblas compilation flags
     #+begin_src sh :results output :exports both
       COMMON_OPT="-O2 -march=native -mtune=native -mavx -mavx2 -msse -msse2 -msse3 -msse4 -ftree-loop-vectorize -ftree-slp-vectorize" make
     #+end_src
*** 2018-01-19
**** Meeting                                                :Alexis:Florence:
     - Test the correctness of the code entire code:
       We can first try to set beta = 0
       which means that the locality part is not taken into account
       and compare it with Stephane Despréaux's package.
     - Neighbourhood:
       Consider only voxels inside a tumor \to irregular shape.
       Maybe take a look at SpaceM^3 to see how it done.
*** 2018-01-22
**** Neighbourhood system in SpaceM^3
     Neighbour index and weight stored in a same class
     =Weighted_Neighbor=.
     In the case of an image, a neighbour lay in rectangular window
     and has a non-zero weight.
     The neighbours for each observation are stored in file .nei
     containing per observations the index, the number of neighbours,
     the list of neighbours and the optional weight associated.
*** 2018-01-24
**** Thinking about neighbourhood system.    
     We want the program to work only on data of interest(voxels
     belonging the brain for healthy subjects or voxels belonging to
     tumors for data form pathological subjects).
     Two possibilities:
     - Work on the entire data set with indirection (using a directory
       of indexes) to jump data of interest.
     - Work on a reduced data set (only data of interest) \to imply to
       copy the data, work on the reduced set, and write back to the
       corresponding data. This is the chosen solution for now.
*** 2018-01-25
**** TODO File format [0/1]
     - [ ] Take a look at HDF5
*** 2018-01-26
    =new()= does not work alone is a .R file \to need to specify the class
    as a prefix as MyClass$new(...)
    #+begin_src R :results output :session :exports both
      library("Rcpp")
      library("optparse")

      setwd("/home/mistis/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R")

      lib <- dyn.load("libRHmmMmst.so")
      mod <- Rcpp::Module("model_module",lib)
      Model <- mod$Model

      data <- vector(
          mode = "list"
        , length = 5
      )
      names(x = data) <- c("observations", "observation_number", "dimension_number", "neighbourhood", "neighbour_count")


      data$observations= as.matrix(read.csv("img/color_test/test1_reduced.csv", sep=",", quote="\""))

      nghd <- as.matrix(read.table("img/color_test/test1_reduced.csv", sep=",", quote="\"", header=TRUE))
      data$neighbour_count = nghd[,1]
      data$neighbourhood = nghd[,-1]

      cluster_count = 2

      model <- new(Class = Model, "MMST", data$observations, cluster_count, data$neighbourhood, data$neighbour_count)

      model
    #+end_src

    #+RESULTS:
    : C++ object <0x32356b0> of class 'Model' <0x12cb200>
*** 2018-01-30
**** TODO Cleaning git history[3/4]
      - [ ] Group unit tests
      - [X] Group matrix/vector shape modifications
        - [X] Split =Vector/matrix shapes correction= \to =684933f8e05908ee5c7fcbaeca45f7d01cc9afac=
          To extract modifs to main.cpp
        - [X] =Corrected comments about matrix/vector shapes=
        - [X] =Corrected variable definitions=
        - [X] =Corrected glossary= ?
        - [X] =Gamma::shape is now a row vector and we are consistent the=
          =way we store the data in Gamma::rate=
        - [X] =Add comment about vector and matrices shapes=          
        - [X] =Added comments= \to =Gibbs_Law.hpp=
        #+BEGIN_EXAMPLE
        pick b1c5112 Makefile for unit tests
        pick 7bf5fa8 Added Gamma_Law unit test
        pick 26df439 Added Gaussian_Law unit tests
        reword 1bf9df5 Added comments
        fixup db0f195 Added comment about vector and matrice shapes
        fixup 13e413e Gamma::shape is now a row vector and we are consistent the way we store the data in Gamma::rate (Col = Observation, Row = MRI)
        fixup 6c1e7e7 Corrected glossary
        fixup 05f3b08 Corrected variable definitions
        fixup f78cf85 Corrected comments about matrix/vector shapes
        fixup dd1e8fe Vector/matrix shapes correction
        fixup 67ada40 Added comment
        fixup 958e4ed Added comment
        pick cb3cd95 Added utils such as neighourhood building, need to be moved in the git history
        pick 75580d7 Corrected boolean statement in Model::initialization
        pick b1f6e41 Added configuration info
        pick ab12154 Running fully from c++ for monitoring
        pick c487bef std::list attributes are now public
        pick 12dc0ac Outsourced the neighbourhood creation function
        reword ae3d6db Corrected shape of the Gibbs outer field in main.cpp
        fixup 10e20ea Corrected Gamma_Law::mean shape
        pick 429f23f Added new initialization constructors
        pick 0128142 Using custom digamma function
        pick e5570f9 Added comments
        pick d91adab Simplified makefile
        pick 24099ad Updated file
        pick b3c5158 Added gprof compilation flag
        pick 52d8823 Added examples cases and README

        #+END_EXAMPLE        
      - [X] Group new constructors
      - [X] Group lonely comments
        #+BEGIN_EXAMPLE
reword d94cfbf Added comments to Multinomial_Law
fixup 18eb70e Added comments
fixup 1771450 Added comment
fixup e608442 Added comments
fixup efc1362 Comments Gamma_Law
pick f520978 Corrected log density + added unit tests
pick b7c9fa8 Reformated code
pick 48a8d82 Corrected error
pick b5f9518 Corrected diagram
pick 1b5d65a Reformated code and added comments
pick 4e99d97 Makefile for unit tests
pick 0346b23 Added Gamma_Law unit test
pick ef449de Added Gaussian_Law unit tests
pick 875af86 Corrected errors caused by the way data were stored into vectors/matrices and incorrectly used
pick 8c72127 Added utils such as neighourhood building, need to be moved in the git history
pick dcfb3e6 Corrected boolean statement in Model::initialization
pick f42cc5e Added configuration info
pick 2d30784 Running fully from c++ for monitoring
pick 70fcd88 std::list attributes are now public
pick 464468c Outsourced the neighbourhood creation function
pick 0e7d60b Added new initialization constructors
pick 9da32c9 Using custom digamma function
pick 7ae57f0 Added comments
pick 9109e03 Simplified makefile
pick 5a61cc2 Updated file
pick e2d7060 Added gprof compilation flag
pick 9766543 Added examples cases and README
        #+END_EXAMPLE
**** Computation errors
     Infinite or nan values produced in the code \to check:
     - degree of freedom are positve
     - the diagonal matrix A_k is positive
     - that the value taken by the functions in the domain of definition
* Emacs Setup 							   :noexport:
  This document has local variables in its postembule, which should
  allow Org-mode to work seamlessly without any setup. If you're
  uncomfortable using such variables, you can safely ignore them at
  startup. Exporting may require that you copy them in your .emacs.

# Local Variables:
# eval:    (require 'org-install)
# eval:    (org-babel-do-load-languages 'org-babel-load-languages '( (sh . t) (R . t) (perl . t) (ditaa . t) ))
# eval:    (setq org-confirm-babel-evaluate nil)
# eval:    (unless (boundp 'org-latex-classes) (setq org-latex-classes nil))
# eval:    (add-to-list 'org-latex-classes '("memoir" "\\documentclass[smallextended]{memoir} \n \[NO-DEFAULT-PACKAGES]\n \[EXTRA]\n  \\usepackage{graphicx}\n  \\usepackage{hyperref}" ("\\chapter{%s}" . "\\chapter*{%s}") ("\\section{%s}" . "\\section*{%s}") ("\\subsection{%s}" . "\\subsection*{%s}")                       ("\\subsubsection{%s}" . "\\subsubsection*{%s}")                       ("\\paragraph{%s}" . "\\paragraph*{%s}")                       ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
# eval:    (add-to-list 'org-latex-classes '("acm-proc-article-sp" "\\documentclass{acm_proc_article-sp}\n \[NO-DEFAULT-PACKAGES]\n \[EXTRA]\n"  ("\\section{%s}" . "\\section*{%s}") ("\\subsection{%s}" . "\\subsection*{%s}")                       ("\\subsubsection{%s}" . "\\subsubsection*{%s}")                       ("\\paragraph{%s}" . "\\paragraph*{%s}")                       ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
# eval:    (setq org-alphabetical-lists t)
# eval:    (setq org-src-fontify-natively t)
# eval:   (setq org-export-babel-evaluate nil)
# eval:   (setq ispell-local-dictionary "english")
# eval:   (eval (flyspell-mode t))
# eval:    (setq org-latex-listings 'minted)
# eval:    (setq org-latex-minted-options '(("bgcolor" "white") ("style" "tango") ("numbers" "left") ("numbersep" "5pt")))
# End:
