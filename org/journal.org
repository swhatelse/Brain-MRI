#+TAGS: noexport(n) software(s) Alexis(a) Florence(f) deprecated(d) EM(e) HMM(h) MMST(m) R(r) C(c) Bug(b) Optimization(o) Profiling(P) Performance Meeting Tips(t) Memory

#+Title: Journal
#+AUTHOR:      Steven QUINITO MASNADA
#+BABEL: :tangle yes :noweb yes

* TODO Objectives [2/7]
  - [ ] Create R package from Stephane Despreaux source code
  - [-] A first running version
    - [X] C++ code as .so
      Using Rcpp to export and expose functions / classes to R.
    - [X] Split c++ source
    - [ ] Write test cases
    - [X] Neighbourhood system
    - [ ] Computation of the lower bounds
    - [ ] Computation of the log densities
    - [ ] Conditional compilation of openmp version
    - [-] Simplify the use of the software
      - [X] Automated initialization from a data only
      - [ ] Ability to provide hand made data for the different step
        of the algorithm.
  - [-] Optimization [1/6]
    - [ ] Code refactoring
    - [ ] Code audit:
      - profiling \to Gprof
      - instrumenting \to PAPI or Likwid
    - [X] Is BOAST suited? Can we mix it with StarPU?
      Yes, but BOAST not suited for c++.
    - [ ] How to organize data in memory (row vs column) eg. [MRI x
      Observations] vs [Observations x MRI]
    - [ ] Use fixed size matrices/vectors
    - [ ] Use the right to type at the right place
  - [ ] Parallelization [0/5]
    - [ ] Find how to parallelize efficiently Markov fields computation
      - [ ] Take a look at Stable/independent set \to Markov fields
        decomposition 
    - [ ] CPU version
    - [ ] GPU version
    - [ ] Cluster
    - [ ] Tools to ease this task
      - [ ] Is StarPU suited?
  - [X] Move =HMM_MMST.org= to Alexis's Gibbs project.
  - [-] Structure the repository using subrepo / submodule.
    - [X] Move repos outside the repo where the journal is
    - [ ] Use submodule
  - [X] SED presentation

* Workspace setup
  #+BEGIN_SRC julia
    Pkg.add("YAML")
  #+END_SRC
* Repository
  #+begin_src sh :results output :exports both
    # Gibbs MMST
    git clone https://stevenqm@scm.gforge.inria.fr/authscm/stevenqm/git/mmsdarticle/mmsdarticle.git
    git clone https://stevenqm@scm.gforge.inria.fr/authscm/stevenqm/git/mmsdarticle/article.git
    git clone https://stevenqm@scm.gforge.inria.fr/authscm/stevenqm/git/mmsdarticle/code.git

    git clone https://gitlab.inria.fr/arnaud/MMST_with_Markov_Random_Field.git

    git svn clone --username stevenqm https://scm.gforge.inria.fr/authscm/stevenqm/svn/ginria/ -s
    git svn clone --username stevenqm https://scm.gforge.inria.fr/authscm/stevenqm/svn/spacem3/ -s 
  #+end_src
* Tips
** Org mode
   - To format a text to fit 80 charac / line \to fill-paragraph or
     fill-region
* 2017
** September
*** 2017-09-05
**** Tumor detection process                                       :software:
     1. ROI localization
       a. Build the reference model of healthy subjects:
         - Find data cluster according to their distribution (multiple
         scale t-distributions) using the EM algorithm 
         - Aggregate these distributions into a mixture model
       b. Distriminate abnormal voxels:
         - By using reference model to compute likelyhood score for each
           voxels 
         - Determine a threshold to distinguish healthy from pathological
	   - Compute the different anomaly level thresholds using slope
             heuristic
	   - Compute threshold of only 2 components (healthy /
             pathological) and keep the closest to one of the threshold
             computed previously.
     2. Build a anomaly model:
        - same as in 1.a on abnormal voxels
     3. Fingerprint model \to Supervised learning to characterize the
        different tumor types:
        - Compute the proportion of each anomaly clusters in the tumors
        - Take into account their sizes.
     4. Remove healthy isolated voxels considered as abnormal.
        - Refined segmentation \to erosion-dilatation kernel to remove
          isolated voxels.
        - Refined fingerprint model \to redo 3. using refined segmentation
*** 2017-09-11
**** EM algorithm explanation                                 :deprecated:EM:
     _*Update:* The EM algorithm has been studied and described with more detail_
     _in [[file:Notes.org][Notes.org]] and in [[file:HMM_MMST.org][HMM_MMST.org]]._

     In this case, the models used are t-distributions and the EM
     algorithm try to find the following parameters:
     - \mu \to mean of the distribution
     - D \to Covariance matrix \to orientation
     - A \to shape and volume
     - \nu \to degrees of freedom
     
     There are two steps:
     - Expectation \to compute posterior probabilities \to find latent variables
     - Maximization \to update parameter model by maximizing the log likelyhood
       \to find parameter values
             
** October
*** 2017-10-20
**** Meeting
     - For parallelization take a look at independent set \to grid/graph
       partitioning, conditional independence + GPU + MRF
     - Ideally, the order for which we compute the label
       distribution (q_{z_n}) at each site should be randomized. This
       imply a different graph dependency at each iteration.
     - \beta \to Numerical optimization involves of sum above all the voxels
       \to costly \to take a look at stochastic gradient.
** November
*** 2017-11-06
    - Considering the code, it seems a project is implemented by method
      (e.g baysian, HMM, etc...) maybe it should be better if
      everything is gathered in one project \to same code base.

    - At first we will start with a 2D neighbourhood because on rat MRI
      the resolution on the z-axis is low (only 5 vs 256). Indeed each slice
      of the z-axis is far form each others and in this case
      considering the neighbours in the z-axis seems not important
      because they are very far compared to the one on the x or
      y-axis. When moving to human MRI 3D neighbourhood will be necessary.
*** 2017-11-13
**** DONE Meeting
***** DONE Algorithms
      Release a first implementation to see how it performs with
      possible code optimization and then we can think about maybe
      modifying the EM algorithm itself maybe with some approximations,
      etc...
***** DONE Code organization
      Use as a basis the Bayesian version, but without the bayesian part
      and include the HMM part to have quickly a version to test.
      Once implemented we will see if we include this to SpaceM^3 or to
      Stephane Despréaux package.
***** TODO Git repo organization
      - [ ] A git based work-flow
        https://hal.inria.fr/hal-01112795/file/SIGOPS_paper.pdf
*** 2017-11-16
**** R call C/C++                                                       :R:C:
***** Dplyr example
     Dplyr use c++ so I just took it as an example just to check the compiler directives (include paths, etc...):
     #+begin_src R :results output :session :exports both
     install.packages("dplyr")
     #+end_src

     #+RESULTS:
     #+begin_example
     Installation du package dans ‘/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4’
     (car ‘lib’ n'est pas spécifié)
     essai de l'URL 'https://pbil.univ-lyon1.fr/CRAN/src/contrib/dplyr_0.7.4.tar.gz'
     Content type 'application/x-gzip' length 808054 bytes (789 KB)
     ==================================================
     downloaded 789 KB

     * installing *source* package ‘dplyr’ ...
     ** package ‘dplyr’ correctement décompressé et sommes MD5 vérifiées
     ** libs
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c address.cpp -o address.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c api.cpp -o api.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c arrange.cpp -o arrange.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c between.cpp -o between.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c bind.cpp -o bind.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c combine_variables.cpp -o combine_variables.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c distinct.cpp -o distinct.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c encoding.cpp -o encoding.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c filter.cpp -o filter.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c group_by.cpp -o group_by.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c group_indices.cpp -o group_indices.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid.cpp -o hybrid.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_count.cpp -o hybrid_count.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_debug.cpp -o hybrid_debug.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_in.cpp -o hybrid_in.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_minmax.cpp -o hybrid_minmax.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_nth.cpp -o hybrid_nth.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_offset.cpp -o hybrid_offset.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_simple.cpp -o hybrid_simple.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hybrid_window.cpp -o hybrid_window.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c init.cpp -o init.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c join.cpp -o join.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c join_exports.cpp -o join_exports.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c mutate.cpp -o mutate.o
     gcc -std=gnu99 -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c rlang-export.c -o rlang-export.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c select.cpp -o select.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c set.cpp -o set.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c slice.cpp -o slice.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c summarise.cpp -o summarise.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c test.cpp -o test.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c utils.cpp -o utils.o
     g++  -I/usr/share/R/include -DNDEBUG -I../inst/include -DCOMPILING_DPLYR -DBOOST_NO_INT64_T -DBOOST_NO_INTEGRAL_INT64_T -DBOOST_NO_LONG_LONG -DRCPP_USING_UTF8_ERROR_STRING -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/BH/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/bindrcpp/include" -I"/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/plogr/include"    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c window.cpp -o window.o
     g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o dplyr.so RcppExports.o address.o api.o arrange.o between.o bind.o combine_variables.o distinct.o encoding.o filter.o group_by.o group_indices.o hybrid.o hybrid_count.o hybrid_debug.o hybrid_in.o hybrid_minmax.o hybrid_nth.o hybrid_offset.o hybrid_simple.o hybrid_window.o init.o join.o join_exports.o mutate.o rlang-export.o select.o set.o slice.o summarise.o test.o utils.o window.o -L/usr/lib/R/lib -lR
     installing to /home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/dplyr/libs
     ** R
     ** data
     *** moving datasets to lazyload DB
     ** inst
     ** preparing package for lazy loading
     ** help
     *** installing help indices
     *** copying figures
     ** building package indices
     ** installing vignettes
     ** testing if installed package can be loaded
     * DONE (dplyr)

     Les packages source téléchargés sont dans
             ‘/tmp/Rtmp1i7F52/downloaded_packages’
#+end_example
***** C source
****** Main
      #+BEGIN_SRC c :tangle ../../../other/R/C/src/core/main.c
        #include<stdio.h>
        #include<stdlib.h>

        #include"vectorAdd.h"

        #define LENGTH 8

        int main(int argc, char** argv){
            int a[LENGTH] = {1,2,3,4,5,6,7,8};
            int b[LENGTH] = {1,2,3,4,5,6,7,8};

            int c[LENGTH] = {0,0,0,0,0,0,0,0};

            vectorAdd(a,b,c,LENGTH);

            for(int i = 0; i < LENGTH; i++){
                printf("%d ", c[i]);
            }
            
            printf("\n");
            
            return EXIT_SUCCESS;
        }
      #+END_SRC
****** Header 
      #+BEGIN_SRC c :tangle ../../../other/R/C/src/core/vectorAdd.h
        void vectorAdd(const int* a, const int *b, int *c, const int length);
      #+END_SRC
****** function
      #+BEGIN_SRC c :tangle ../../../other/R/C/src/core/vectorAdd.cpp
        #include"vectorAdd.h"

        void vectorAdd(const int* a, const int *b, int *c, const int length){
            for(int i = 0; i < length; i++){
                c[i] = a[i] + b[i];
            }
        }
      #+END_SRC
****** Makefile
      #+BEGIN_SRC makefile :tangle ../../../other/R/C/src/core/Makefile
        CC=g++
        CFLAGS=-O3
        # INCLUDES=-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include -I/usr/share/R/include/
        INCLUDES=
        LIBS=-L/usr/lib/R/lib -lR

        vectorAdd.o: vectorAdd.cpp
        $(CC) $(CFLAGS) $(INCLUDES) -fPIC -c $^

        libvectoradd.so: vectorAdd.o
        $(CC) $(CFLAGS) -shared -o $@ $^ $(LIBS)

        main: main.c
        $(CC) $(CFLAGS) -o $@ $^ -L. -lvectoradd

        all: vectorAdd.o libvectoradd.so main

        clean:
        rm -f vectorAdd.o libvectoradd.so main

      #+END_SRC
****** Compile and run
       #+begin_src sh :results output :exports both
         cd ../../../other/R/C/src/core/
         make all
         export LD_LIBRARY_PATH=$PWD:$LD_LIBRARY_PATH
         ./main
       #+end_src
***** C wrapper
****** Manual
      Not sure R data structures stores elements are stored
      contiguously in memory and because I don't want to rely and R
      type, in the following example I use vector as a intermediary
      type to convert R variable type to C arrays. It is a little ugly
      maybe there exist a better way. Maybe using armadillo type could
      be the way to do...
      #+BEGIN_SRC c :tangle ../../../other/R/C/src/r_wrapper/wrapper.cpp
        // Extension to convert std::vector to SEXP
//        #include<RcppCommon.h>
//        namespace Rcpp{
//            namespace traits{
//                template <typename T> SEXP wrap(const std::vector<T> & obj);
//            }
//        }

        #include<Rcpp.h>
//        namespace Rcpp{
//            namespace traits{
//                template <typename T> SEXP wrap(const std::vector<T> & obj){
//                    const int RTYPE = Rcpp::traits::r_sexptype_traits<T>::rtype ;                    
//                    return Rcpp::Vector< RTYPE >(obj.begin(), obj.end());
//                };                
//            }
//        }
      
      #+END_SRC

      #+BEGIN_SRC c :tangle ../../../other/R/C/src/r_wrapper/wrapper.cpp
              
        #include<vector>
        #include"../core/vectorAdd.h"

        using namespace Rcpp;

        extern "C" SEXP addVectorWrapper(SEXP a, SEXP b, SEXP c, SEXP length){
            std::vector<int> a_ = Rcpp::as< std::vector<int> > (a);
            std::vector<int> b_ = Rcpp::as< std::vector<int> > (b);
            std::vector<int> c_ = Rcpp::as< std::vector<int> > (c);
            Rcpp::traits::input_parameter< int >::type length_(length);

            int* _a = &a_[0];
            int* _b = &b_[0];
            int* _c = &c_[0];
            std::vector<int> foo;
            vectorAdd(_a, _b, _c, length_);
            return Rcpp::wrap(c_);            
            // return R_NilValue;
        }
      #+END_SRC
****** Automatic
***** C shared library for R
      #+begin_src sh :results output :exports both
        cd /home/mistis/squinito/Dev/other/R/C/src/r_wrapper
        PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
        PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
        R CMD SHLIB ../core/vectorAdd.cpp wrapper.cpp
      #+end_src

***** R calling C
      #+begin_src R :results output :session :exports both
        library("Rcpp")
        setwd("/home/mistis/squinito/Dev/other/R/C/src/core")
        a = matrix(c(1,2,3,4),nrow=4,ncol=1)
        b = matrix(c(1,2,3,4),nrow=4,ncol=1)
        c = matrix(c(0,0,0,0),nrow=4,ncol=1)
        x <- dyn.load("vectorAdd.so")
        .Call("addVectorWrapper", a, b, c, 4)
        c
      #+end_src

      #+RESULTS:
      : 2
      : [1] 2 4 6 8
      :      [,1]
      : [1,]    0
      : [2,]    0
      : [3,]    0
      : [4,]    0


***** Rcpp
      - To crate a package using the specified c/c++ source files:
        #+begin_src R :results output :session :exports both
          Rcpp.package.skeleton(example_code=FALSE, cpp_files=c("src/vectorAdd.c", "src/vectorAdd.h"))
        #+end_src
        The package is create in different directory that the on
        specified. It is silly because it copies files instead of just
        turning the specified directory into a package.

      - Add c/c++ file references to RccExports.{R/cpp}
        #+begin_src R :results output :session :exports both
          compileAttributes(pkgdir="anRpackage/")
        #+end_src
***** Guideline
      - Never use abort or exit or any stuff that can call them because
        they kill the R process.
***** Expose classes
      #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/A.hpp
        #ifndef A_HPP
        #define A_HPP
        #include<Rcpp.h>

        using namespace Rcpp;

        class A{
        public:
            int x;

            A(int x);
            int foo();
        };      
        #endif
      #+END_SRC

      #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/A.cpp
        #include"A.hpp"

        A::A(int x): x(x) {}
        int A::foo(){ return x * x; }
      #+END_SRC

      #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/B.hpp
        #ifndef B_HPP
        #define B_HPP

        #include<Rcpp.h>
        #include"A.hpp"

        using namespace Rcpp;

        class B{
        public:
            A a;
            B(int x);
        };

        #endif
      #+END_SRC

      #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/B.cpp
        #include"B.hpp"

        B::B(int x): a(x){ } 
      #+END_SRC

      #+BEGIN_SRC c++ :tangle ../../../other/R/C/expose_class/src/RcppWrapper.cpp
        #include"A.hpp"
        #include"B.hpp"
        RCPP_EXPOSED_CLASS(A);
        RCPP_EXPOSED_CLASS(B);
        RCPP_MODULE(mod) {
            class_<A>( "A" )
                // Constructors :
                // .constructor( "default" )
                .constructor< int >( "sets x" )
                // Fields :
                .field( "x", &A::x, "Value of x")
                
                // Methods :
                .method( "foo", &A::foo, "access of the private field 'clusters'")
                ;
            class_<B>( "B" )
                // Constructors :
                // .constructor( "default" )
                .constructor< int >( "sets a" )
                // Fields :
                .field( "a", &B::a, "Value of a")
                
                // Methods :
                ;
        }      
      #+END_SRC

      #+begin_src sh :results output :exports both
        cd /home/mistis/squinito/Dev/other/R/C/expose_class/src
        PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
        PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
        R CMD SHLIB A.cpp B.cpp RcppWrapper.cpp -o libtest.so
      #+end_src

      #+RESULTS:
      : g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o libtest.so A.o B.o RcppWrapper.o -L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/usr/lib/R/lib -lR

      #+begin_src R :results output :session :exports both
        library(Rcpp)
        setwd("/home/mistis/squinito/Dev/other/R/C/expose_class/src/")
        lib <- dyn.load("classes.so")
        mymodule <- Rcpp::Module("mod",lib)

        B <- mymodule$B
        b <- new( B, 4 )
        a <- b$a
        a$x
        a$foo()
      #+end_src

      #+RESULTS:
      : [1] 4
      : [1] 16

***** Export list
       When using a =std::list= or =std::vector= of a non-primitive
       c++ type in a public field of a class or in a method parameter
       Rcpp doesn't know how to convert the type. However if it is the
       return type of a method, it doesn't complain.
      #+BEGIN_SRC c++ :tangle /tmp/list.cpp
        #include<Rcpp.h>
              
        class A{
        public:
            int x;
            A(){}
            A(int x):x(x){}
        };

        class B{
        private:
            std::list< A > a_list;
        public:
            A a;
            B():a(10){ a_list.push_back(a); a_list.push_back(a);}
            void foo(std::list< A > l){}
            std::list< A > get_list(){return a_list;}
            void set_list(const std::list< int > l){}
        };

        RCPP_EXPOSED_CLASS(A);
        RCPP_EXPOSED_CLASS(B);

        RCPP_MODULE(mod) {
            using namespace Rcpp;
            class_<A>("A")
                .constructor()
                .constructor<int>()
                .field("x", &A::x, "blabla")
                ;
            class_<B>("B")
                .constructor()
                .field("a", &B::a, "blablabla")
                //.field("a_list", &B::a_list, "blablabla")
                .property("get_list", &B::get_list, "")
                //.method("foo", &B::foo, "blabla")
                ;
            class_< std::list< A > >("list")
                .constructor()
                .method("pop_back", &std::list< A >::pop_back, "")
                ;
        }
      #+END_SRC

      #+BEGIN_SRC makefile
        main: list.cpp
                PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
                PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
                R CMD SHLIB $^ -o liblist.so     
        clean:
                rm -f *.so *.o
      #+END_SRC

      #+begin_src sh :results output :exports both
        cd /tmp
        PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
        PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
        R CMD SHLIB list.cpp -o liblist.so

      #+end_src

      #+RESULTS:
      : g++  -I/usr/share/R/include -DNDEBUG -I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include     -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c list.cpp -o list.o
      : g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o liblist.so list.o -L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/usr/lib/R/lib -lR

      #+begin_src R :results output :exports both
        library(Rcpp)
        setwd("/tmp")
        lib <- dyn.load("list.so")
        mymod <- Rcpp::Module("mod", lib)
        B <- mymod$B
        b <- new(B)
        list <- b$get_list()
        list
      #+end_src

      #+RESULTS:
      : [[1]]
      : C++ object <0x1f4d890> of class 'A' <0x2a0d350>
      : 
      : [[2]]
      : C++ object <0x27ceac0> of class 'A' <0x2a0d350>
      : 

       In fact the problem is not =std::list/vector/whatever= but what it
       contains if we want to use it like this we need to tell R how to
       convert A.
      #+BEGIN_SRC c++ :tangle /tmp/RcppWrapper.cpp
        //#include<RcppCommon.h>

        class A{
        public:
            int x;
            A():x(10){}
            // A(const A& a):x(a.x){}
            // ~A(){}
            // A(SEXPREC *x){}
            //operator SEXP(){ return R_NilValue;}
        };

        /* namespace Rcpp{
            // R to C++
            template<> SEXP wrap(const A&);
            // C++ to R
            // template <> class Exporter< std::vector<A> >;
        } */

        #include<Rcpp.h>       

        RCPP_EXPOSED_CLASS(A);
        RCPP_EXPOSED_WRAP(A);
        RCPP_EXPOSED_AS(A);

        /* namespace Rcpp{
            // R to C++
            SEXP wrap(const A& obj){
                return R_NilValue;
            }
        } */

        extern "C" SEXP foo(SEXP x){
            std::list< A > x_ = Rcpp::as< std::list< A > > (x);
            return Rcpp::wrap(x_);
            //return R_NilValue;
        }
      #+END_SRC

       #+begin_src sh :results output :exports both
         cd /tmp
         PKG_CPPFLAGS="-I/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/include" \
         PKG_LIBS="-L/home/mistis/squinito/R/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp" \
         R CMD SHLIB RcppWrapper.cpp

       #+end_src

       #+RESULTS:

       #+begin_src R :results output :session :exports both
       
       #+end_src
*** 2017-11-20
    How much more computation will we do if we add borders with virtual
    voxels to avoid if conditions?
     #+BEGIN_SRC ruby
       h = 256
       w = 256
       n_h = 1
       n_w = 1

       ######### Naive approach #########
       naive = 0

       # Borders
       sum = 0
       (0...(w - 2 * n_w)).each do
         (0...(n_h)).each do |j|
           sum += (2 * n_w + 1) * (n_h + 1 + j) - 2
         end
       end

       naive += 4 * sum

       # Corners
       sum = 0
       (0...(n_w)).each do |i|
         (0...(n_h)).each do |j|
           sum += (n_w + 1 + i) * (n_h + 1 + j) - 2
         end
       end

       naive += 4 * sum

       naive += (w - 2 * n_w) * (h - 2 * n_h) * ((2 * n_h + 1) * (2 * n_w + 1) - 2)

       ######### Virtual border approach #########
       virt = h * w * ((2 * n_h + 1) * (2 * n_w + 1) - 2)
       virt

       virt.to_f / naive.to_f
    #+END_SRC

     #+RESULTS:
     : 1.0067327358432598

    Small computation overhead \to less than 1% more 

*** 2017-11-30
**** DONE Questions [9/9]
     - [X] Why does =Gamma_Law= have an attribute mean? (rate / shape)
       The gamma law describes the distribution of the weights knowing
       the labels and there no mean used in the formulas. Where is it
       usefull and why? 
       It isn't a parameter of the gamma law it is just stored for
       convenience because the expectation of the gamma law is needed.
     - [X] In the computation of the gamma rate parameter of the
       posterior, is gamma_rate not supposed to be a vector of size
       NB_CLUSTERS? In the formula we \delta_km. Same questions
       for ~\delta \to =NB_MRI_DIMENSION= \times =N=.
       Separation by cluster \to for each cluster there is a vector of
       size =NB_MRI_DIMENSION=
     - [X] In =Gibbs_Law::update_outer_fields= why is the outer field set
       to the mean of the probabilities? 
       This way \alpha behaves like \pi like in the classical case. This gives
       a the multinomial case.
       Maybe using -log(mean)
     - [X] In =Gamma_Law::log_density=: rate is only a vector \to why same
       rate for each voxels and clusters?
       Because it the general case (Gibbs) > < variational. In the
       Gibbs distribution each voxels have the same rates and
       parameters. As opposed to the variational case, where each
       voxels have their own parameters and thus their own gamma law.
     - [X] What does follow a multinomial distribution? 
       P(Z) which is a Gibbs distribution is approximated by the
       posterior of the classes (q(z_n)), a multinomial law . Each z_n
       follow its own multinomial law.
     - [X] In the Model class, clustering is the belonging to a class
       for each voxels and depends to the probability distribution
       P(Z). It is only initialized, in the Model constructor but never
       updated. The update of the lower bound takes into account the
       clustering in =Model::update_lower_bound=, as =clustering= is not
       update the lower bound is based on the initial distribution
       of Z. The update is missing right?
       Yes it is missing the update of the =lower_bound= will be done at
       the end of the M-Step.
     - [X] Why is the =lower_bound= updated just after the E_step and not
       the M step?  Because probabilities P(Z) have to be computed just
       after approximating the Gibbs distribution without modifying the
       parameters (index coherency).
     - [X] What is the log density for a cluster? Is it not supposed to
       be P(Z)?  It is an MST law.
     - [X] In each iteration of EM, just after the variational
       approximation, in =Model::update_lower_bound= the lower is updated
       taken into account the =lower_bound= of the clusters the this one
       is never updated. I guess this part is missing.
       Yes it is.
**** Call structure                                                :software:
     - =Model::initialization=: Initialize Q_zn and the labels for each pixels.
     - =Model::em=
       - =Variational::update=
         - =Gamma_Law::variational_update=: Compute posterior rate,
           shape, mean, outer field, local field
           - =Gamma_Law::variational_update_shape=: Compute \gamma for the posterior
           - =Gamma_Law::variational_update_rate=: Compute \delta for the posterior
           - =Gamma_Law::variational_update_mean=: Compute \mu for the posterior
             Divide vs [pow mult]
         - =Multinomial_Law::variational_update=:
           - =Multinomial_Law::variational_update_probabilities=: Compute
             the posterior of the labels (q_z)
       - =Model::update_lower_bound= 
         - =Gibbs_Law::log_density= 
       - =Cluster::update_M_step= 
         - =Gamma_Law::update=
           - =Gamma_Law::update_shape=: Compute \gamma
           - =Gamma_Law::update_mean=: Compute the expectation of the
             distribution
         - =Gaussian_Law::update=
           - =Gaussian_Law::update_mean=: Compute \mu
           - =Gaussian_Law::update_orthogonal=: Compute D
             - =Armijo_C=
             - =gradf_C=
             - =RetractionQR_C=
             - =objectFunction_C=
             - =RetractionQR_C=
           - =Gaussian_Law::update_diagonal=: Compute A
       - =Gibbs_Law::update=
         - =Gibbs_Law::update_outer_fields=
         - =Gibbs_Law::update_local_fields=: Does not compute \beta for now
* 2018
** January
*** 2018-01-09
**** About the matrix shapes                                            :Bug:
     There are some inconsistencies between the classical and
     variational approach in the way data are stored into matrices,
     causing some errors that force us to do some transpositions. For
     example in variational the MRI dimension is stored in row but in
     column in the classical approach. Or an other example with the
     =rate= and the =shape= of the =Gamma_Law= class, shape \to vec \to [MRI x 1] vs
     rate \to [OBSERVATIONS x MRI].
***** Causing errors                                                    :Bug:
      - =Gamma_Law::update_mean= : =Gamma::rate= has a shape [MRI x 1] in
        the classical approach but has a shape [Observations x MRI] in
        variational.
        For now as generally everything is organized as [Observations
        x ...] =Gamma::rate= should be like this [1 x MRI] and as a
        consequence =Gamma::shape= should be a row vector.
***** Where the matrix/vector shapes matters
     - =Gamma_Law.cpp=
       - =f_temp=
         Doesn't care about the shape of =shape= but cares about =rate=
       - =update_shape=
         Doesn't care about the shape of =shape= but cares about =rate=
       - =update_mean= 
         Cares about the shape of =shape= and =rate=.
         shape[1 x MRI] rate[Observations x MRI] or 
         shape[MRI x 1] rate[MRI x Observations]
       - =log_density=
         Cares about the shape of =x=, =shape= and =rate=.
         Solution \to Transpose shape or use a row vector, rate \to [1 x MRI] and
         transpose x:
         #+BEGIN_SRC c++
           accu(shape % log(rate.row(0)) // classical : [MRI x 1] % [1 x 1] or variational : [MRI x 1] % [1 x MRI] -> [1 x MRI] % [1 x MRI]
                - lgamma(shape)          // [MRI x 1]                                                              -> [1 x MRI]
                + (shape - 1) % log(x)   // [MRI x 1] % [MRI x 1]                                                  -> [1 x MRI] % [1 x MRI]
                - rate.row(0) % x);      // classical : [1 x 1] % [MRI x 1] or variational : [1 x MRI] % [MRI x 1] -> [1 x MRI] % [1 x MRI]
         #+END_SRC
         But for now we can ignore it.
       - =variational_update_rate=
         Doesn't care about the shape of =shape= but cares about rate.
         Here there is nothing to do:
         #+BEGIN_SRC c
           rate.row( n ) = trans(gamma_rate + 0.5 *
                                                   diagvec(
                                                           diagmat( gaussian_diagonal ) *                       // [MRI x MRI]
                                                           gaussian_orthogonal.t( ) *                           // [MRI x MRI]
                                                           trans( data_values.row( n ) - gaussian_mean.t( ) ) * // [1 x MRI] - [1 x MRI] \to [MRI x 1]
                                                           ( data_values.row( n ) - gaussian_mean.t( ) ) *      // [1 x MRI] - [1 x MRI] \to [1 x MRI]
                                                           gaussian_orthogonal                                  // [MRI x MRI]
                                                   )
                           );
         #+END_SRC
       - =variational_update_mean=
         Cares about the shape of =shape=, =rate= and mean.
         Nothing to do.
       - =variational_log_density=
         Cares about the shape of =shape= and =rate=.
         Nothing to do.
         #+BEGIN_SRC c
           double res += accu( 
                              shape.t() % log(rate.row(n))      // [1 x MRI] % [1 x MRI]
                              - lgamma(shape.t())               // [1 x MRI]
                              + (shape.t() - 1) % log(x.row(n)) // [1 x MRI] % [1 x MRI] 
                              - rate.row(n) % x.row(n)          // [1 x MRI] % [1 x MRI] 
                             );
         #+END_SRC
     - =Variational.cpp=
       - =update=
         Cares about =shape= and =rate=.
         Organizing =Gamma_Law::rate= as [MRI x 1] or converting =shape=
         and =diagonal= to a row vector would resolve the problem.
     - =Gaussian_Law.cpp=
       - =update_orthogonal=
         Cares about the shape of mean. It is transposed here but if
         the =data_values= as a shape [MRI x observations] or mean is a
         row vector we don't need to transpose it.
       - =update_diagonal=
         Same as orthogonal.

*** DONE 2018-01-12
    - [X] What is the shape of =Gibbs_Law::outer_fields=?
      \alpha \in \real^{K} with K being the number of clusters.
*** 2018-01-15
    - [ ] In =Gamma_Law::update_shape= =temp_rate= isn't used anywhere,
      why?
    - [X] Segmentation error caused by [[file:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/Gamma_Law.cpp::106]]
      #+BEGIN_SRC c++
        arma::vec Gamma_x( 1 , fill::zeros ) ;
        Gamma_x( 0 ) = x ;
        Gamma_x = digamma( Rcpp::NumericVector( Gamma_x.begin( ) , Gamma_x.end( ) ) ) ;
      #+END_SRC
      To manipulate R objects/functions from C++ the C++ code need to
      be launched from R. Because an R session need to be
      open. Otherwise we get segfault when trying to create a simple R
      variable type.

*** 2018-01-16
**** Meeting Guillaume BARAT NVIDIA
***** Our work
      - Brain MRI for tumors detection
      - Image clustering \to Hidden Markov Random Field.
        EM algorithm \to Iterative algo to Maximize the likelihood.
        Not feasible to compute normalizing constant of the posterior
        distribution \to Variational approximation \to lots of
        dependencies between observations in the same iterations.
        
***** Questions
      - [ ] Hidden Markov Random Fields / Potts model on GPU?
        Variational Approach \to dependencies between voxels in an iteration.
      - [X] Any tools about graph processing on GPU?
        cuGraph
      - [ ] Thread divergence \to cooperative groups in Volta or Cuda 9?
*** 2018-01-18
**** Openblas compilation flags
     #+begin_src sh :results output :exports both
       COMMON_OPT="-O2 -march=native -mtune=native -mavx -mavx2 -msse -msse2 -msse3 -msse4 -ftree-loop-vectorize -ftree-slp-vectorize" make
     #+end_src
*** 2018-01-19
**** Meeting                                                :Alexis:Florence:
     - Test the correctness of the code entire code:
       We can first try to set beta = 0
       which means that the locality part is not taken into account
       and compare it with Stephane Despréaux's package.
     - Neighbourhood:
       Consider only voxels inside a tumor \to irregular shape.
       Maybe take a look at SpaceM^3 to see how it done.
*** 2018-01-22
**** Neighbourhood system in SpaceM^3
     Neighbour index and weight stored in a same class
     =Weighted_Neighbor=.
     In the case of an image, a neighbour lay in rectangular window
     and has a non-zero weight.
     The neighbours for each observation are stored in file .nei
     containing per observations the index, the number of neighbours,
     the list of neighbours and the optional weight associated.
*** 2018-01-24
**** Thinking about neighbourhood system.    
     We want the program to work only on data of interest(voxels
     belonging the brain for healthy subjects or voxels belonging to
     tumors for data form pathological subjects).
     Two possibilities:
     - Work on the entire data set with indirection (using a directory
       of indexes) to jump data of interest.
     - Work on a reduced data set (only data of interest) \to imply to
       copy the data, work on the reduced set, and write back to the
       corresponding data. This is the chosen solution for now.
*** 2018-01-25
**** TODO File format [0/1]
     - [ ] Take a look at HDF5
*** 2018-01-26
    =new()= does not work alone is a .R file \to need to specify the class
    as a prefix as MyClass$new(...)
    #+begin_src R :results output :session :exports both
      library("Rcpp")
      library("optparse")

      setwd("/home/mistis/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R")

      lib <- dyn.load("libRHmmMmst.so")
      mod <- Rcpp::Module("model_module",lib)
      Model <- mod$Model

      data <- vector(
          mode = "list"
        , length = 5
      )
      names(x = data) <- c("observations", "observation_number", "dimension_number", "neighbourhood", "neighbour_count")


      data$observations= as.matrix(read.csv("img/color_test/test1_reduced.csv", sep=",", quote="\""))

      nghd <- as.matrix(read.table("img/color_test/test1_reduced.csv", sep=",", quote="\"", header=TRUE))
      data$neighbour_count = nghd[,1]
      data$neighbourhood = nghd[,-1]

      cluster_count = 2

      model <- new(Class = Model, "MMST", data$observations, cluster_count, data$neighbourhood, data$neighbour_count)

      model
    #+end_src

    #+RESULTS:
    : C++ object <0x32356b0> of class 'Model' <0x12cb200>
*** 2018-01-30
**** DONE Cleaning git history[4/4]
      - [X] Group unit tests
      - [X] Group matrix/vector shape modifications
        - [X] Split =Vector/matrix shapes correction= \to =684933f8e05908ee5c7fcbaeca45f7d01cc9afac=
          To extract modifs to main.cpp
        - [X] =Corrected comments about matrix/vector shapes=
        - [X] =Corrected variable definitions=
        - [X] =Corrected glossary= ?
        - [X] =Gamma::shape is now a row vector and we are consistent the=
          =way we store the data in Gamma::rate=
        - [X] =Add comment about vector and matrices shapes=          
        - [X] =Added comments= \to =Gibbs_Law.hpp=
        #+BEGIN_EXAMPLE
        pick b1c5112 Makefile for unit tests
        pick 7bf5fa8 Added Gamma_Law unit test
        pick 26df439 Added Gaussian_Law unit tests
        reword 1bf9df5 Added comments
        fixup db0f195 Added comment about vector and matrice shapes
        fixup 13e413e Gamma::shape is now a row vector and we are consistent the way we store the data in Gamma::rate (Col = Observation, Row = MRI)
        fixup 6c1e7e7 Corrected glossary
        fixup 05f3b08 Corrected variable definitions
        fixup f78cf85 Corrected comments about matrix/vector shapes
        fixup dd1e8fe Vector/matrix shapes correction
        fixup 67ada40 Added comment
        fixup 958e4ed Added comment
        pick cb3cd95 Added utils such as neighourhood building, need to be moved in the git history
        pick 75580d7 Corrected boolean statement in Model::initialization
        pick b1f6e41 Added configuration info
        pick ab12154 Running fully from c++ for monitoring
        pick c487bef std::list attributes are now public
        pick 12dc0ac Outsourced the neighbourhood creation function
        reword ae3d6db Corrected shape of the Gibbs outer field in main.cpp
        fixup 10e20ea Corrected Gamma_Law::mean shape
        pick 429f23f Added new initialization constructors
        pick 0128142 Using custom digamma function
        pick e5570f9 Added comments
        pick d91adab Simplified makefile
        pick 24099ad Updated file
        pick b3c5158 Added gprof compilation flag
        pick 52d8823 Added examples cases and README

        #+END_EXAMPLE        
      - [X] Group new constructors
      - [X] Group lonely comments
        #+BEGIN_EXAMPLE
reword d94cfbf Added comments to Multinomial_Law
fixup 18eb70e Added comments
fixup 1771450 Added comment
fixup e608442 Added comments
fixup efc1362 Comments Gamma_Law
pick f520978 Corrected log density + added unit tests
pick b7c9fa8 Reformated code
pick 48a8d82 Corrected error
pick b5f9518 Corrected diagram
pick 1b5d65a Reformated code and added comments
pick 4e99d97 Makefile for unit tests
pick 0346b23 Added Gamma_Law unit test
pick ef449de Added Gaussian_Law unit tests
pick 875af86 Corrected errors caused by the way data were stored into vectors/matrices and incorrectly used
pick 8c72127 Added utils such as neighourhood building, need to be moved in the git history
pick dcfb3e6 Corrected boolean statement in Model::initialization
pick f42cc5e Added configuration info
pick 2d30784 Running fully from c++ for monitoring
pick 70fcd88 std::list attributes are now public
pick 464468c Outsourced the neighbourhood creation function
pick 0e7d60b Added new initialization constructors
pick 9da32c9 Using custom digamma function
pick 7ae57f0 Added comments
pick 9109e03 Simplified makefile
pick 5a61cc2 Updated file
pick e2d7060 Added gprof compilation flag
pick 9766543 Added examples cases and README
        #+END_EXAMPLE
**** Computation errors
     Infinite or nan values produced in the code \to check:
     - degree of freedom are positve
     - the diagonal matrix A_k is positive
     - that the value taken by the functions in the domain of
       definition
       - [X] log functions
       - [X] digamma
       - [X] lgamma
     
     - [X] Negative values in the diagonal of the precision matrix:
       After few iterations it turns out the diagonal of the precision
       matrix have some negative values. 
       - [X] Negatives probabilities q_z_n:
         - [X] Negative outer field values:
           This causes probabilities to be negatives because the
           interaction part is too weak (or equals 0 if the local
           field is 0)  to compensate.
           - [X] Cause:
             - [X] The reason why the outer field values are too small
               is because of the part:
               #+BEGIN_SRC c
                 clusters_it->gamma.shape % log( clusters_it->gamma.rate.row( 0 ) )
               #+END_SRC

               Which equals 0 because it seems that =clusters_it->gamma.rate= has not been
               updated yet and is initialized to 1 and log(1) = 0.

             - [X]  So to what values rate should be initialized?
               It should be ok to initialize shape and rate to 1.
               
             - [X] Take the exponential when computing the probabilities


     - [X] \sum q_zn not always equals to 1:
       - [X] Cause : This is due to round off errors. 
       - [X] What are the impacts?
         They should be minimal.
     - [ ] NaN values in =RetractionQR_C=
       Why does =out= have a zero column?
       #+begin_src R :results output :session :exports both
         B <- matrix(c(3.9134e+07, 3.9134e+07, 3.9134e+07,
                       3.9951e+07, 3.9951e+07, 3.9951e+07,
                       4.0059e+07, 4.0059e+07, 4.0059e+07),
                     nrow=3, ncol=3)
         out <- B
         B
         out
         out[,1] %*% t( (t( B[,1] ) %*% out[,1]) / t( diag(t(out[,1]) %*% out[,1]) ) )
         B[,1] - out[,1] %*% t( (t( B[,1] ) %*% out[,1]) / t( diag(t(out[,1]) %*% out[,1]) ) ) ;
       #+end_src

       #+RESULTS:
       #+begin_example
                [,1]     [,2]     [,3]
       [1,] 39134000 39951000 40059000
       [2,] 39134000 39951000 40059000
       [3,] 39134000 39951000 40059000
                [,1]     [,2]     [,3]
       [1,] 39134000 39951000 40059000
       [2,] 39134000 39951000 40059000
       [3,] 39134000 39951000 40059000
                [,1]
       [1,] 39134000
       [2,] 39134000
       [3,] 39134000
            [,1]
       [1,]    0
       [2,]    0
       [3,]    0
#+end_example

** February
*** 2018-02-07
**** DONE Possible optimizations in ALS and Gaussian orthogonal estimate. :Optimization: [2/2]
     - [X] In =Gaussian_Law.cpp= the matrix =A_k= is filled with the exact same
       values for each rows and it is used row row in subsequent
       computation. We end up have a N \times M matrix instead of a M
       vector.
       We can replace it with a vector but in bayesian we would need a
       matrix. 
     - [X] In =Gaussian_Law.cpp =V_k= represents W_g as a cube \real^{M \times M \times N} 
       but in the paper "/Orthogonal Stiefield manifold/
       /optimization for eigen-decomposed covariance parameter/
       /estimation in mixture models/", it is a matrix \in \real^{M \times M}. 
       The reason is we cannot directly do the sum like in the paper
       because of A^{-1} = U_i A where U_i is the gamma law mean for the i^{th}
       observation. So we are forced to put the entire matmult in the
       sum over the observations.
**** DONE Questions about ALS [2/2]
     - [X] What is the difference  between A^{-1} in the paper and U A? U
       being the mean of the gamma distribution.
       Here we directly work with the precision matrix which is the
       inverse of the covariance matrix.
       But why do we use the gamma mean distribution?
     - [X] Is =RetractionQR_C= returning the matrix Q of the QR
       decomposition of X + V (notation used in the paper)? 
*** 2018-02-09
    Error when running a version of Alexis's code using openmp:
    #+BEGIN_EXAMPLE
    error: subtraction: incompatible matrix dimensions: 0x1 and 1x1
    terminate called after throwing an instance of 'std::logic_error'
    what():  subtraction: incompatible matrix dimensions: 0x1 and 1x1
    #+END_EXAMPLE
    Turns out it was because there was a call to a R function. It 
    doesn't mix well with openmp because of the R session.
** March
*** 2018-03-01
**** Discussion with Alexis                                          :Alexis:
***** TODO Parallelization [0/1]
      - Possible to parallelize:
        - Computation of the Weights in E-step
        - M-Step
      - [ ] ALS:
        - [ ] Check how error growths with the number of observations
        - [ ] Check that the optimization gives an orthogonal matrix
        - [ ] Try sub sampling (consider a sub part of the observations ) 
          \to try to reduce the error and also run faster. Check accuracy
*** 2018-03-02
**** TODO Meeting [0/3]
     - [ ] Try differents values for \beta to see if the result is smoother e.g. \beta = 2
     - [ ] Compare on data set where the result are not smooth
     - [ ] Negative probability arising at step 49:
       - [ ] Check if a class become empty \to reduce the number of class
       - [ ] Use the max when manipulating exponential of probabilities

#+begin_src R :results output :session :exports both
seq_time = 24
t1 = 24*0.65
t1_par = t1 / 10
tot_par = 24*.35 + t1_par
seq_time / tot_par
#+end_src

#+RESULTS:
: [1] 2.409639

*** 2018-03-22
**** TODO Meeting [3/6]
     - [X] Integrate c++ code in R pipeline
     - [X] Use reference instead of copy of data
     - [ ] Sample sub-part of the data in ALS
       - [ ] Compare with complete data using the minimum of the
         objective function.
         - [ ] Try 1 / 2 pixels, 1 / 3, etc... and see if we are still
           accurate enough.
         - [ ] Try with a few points at the beggining and
           increase the number of points near the end. 
     - [ ] Porting ALS on GPU using CUDA and CUDA libraries 
     - [X] Compare with the ManifoldOptim package. 
       Package not working
     - [ ] Save EM steps for easier debugging.
** April
*** 2018-04-03
**** DONE Armadillo and GPU
     - [X] Take a look at bandicoot
       Still in developpement
     - [X] Take a look at ArrayFire
       Not opensource
     - [X] Take a look at OpenAcc + Armadillo
       Not possible.
**** DONE Integrate c++ code in R pipeline [3/3]
***** DONE Wrap all data needed in a list for HMRF estimate [1/1]
      - [X] Add in [[file:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/R/01_Reference_model_adjustment_v2016_02_08.R][01_Reference_model_adjustment_v2016_02_08.R]]
***** DONE Invoke HMRF estimate
     - [[file:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/R/Functions/Functions_v2016_02_04.R][Function_v2016_02_04.R]] \to =chooseKGroups()=
       This is where the EM algorithm is invoked.
***** DONE Outputs format of EM
     #+BEGIN_EXAMPLE
     mixtureModel
     List of 10
      $ model                      :List of 10
       ..$ classId       : chr "18MMSD_GaussianModel@0x55f7384153d8"
       ..$ groups        : int [1:45051] 1 1 1 1 3 3 1 1 1 3 ...                       # Model::clustering
       ..$ probabilities : num [1:45051, 1:10] 0.874 0.9 0.913 0.822 0.283 ...         # Model::probabilities
       ..$ logL          : num [1:1000] -234287 -233930 -233744 -233624 -233535 ...    # Model::lower_bound_vector
       ..$ clusters      :List of 10
       .. ..$ :List of 5
       .. .. ..$ classId: chr "20MMSD_GaussianCluster@0x7fae28000a28"
       .. .. ..$ weights: num [1:45051, 1:5] 1.013 1.016 0.969 0.983 1.013 ...         # Gamma_Law::mean (posterior / variational)
       .. .. ..$ rate   : num 0.226                                                    # Class frequency \pi_{k}
       .. .. ..$ nu     : num [1:5] 54.8 87.4 13 82.5 73.7                             # Gamma_Law::mean (prior / non-variational)
       .. .. ..$ law    :List of 4
       .. .. .. ..$ classId: chr "23MMSD_StiefelGaussianLaw@0x7fae28001b18"
       .. .. .. ..$ mean   : num [1:5] -0.409 -0.1028 -0.0627 0.202 -0.4031            # Gaussian_Law::mean
       .. .. .. ..$ Pmat   : num [1:5, 1:5] -0.0262 -0.9919 0.1024 -0.0677 -0.0177 ... # Gaussian_Law::orthogonal
       .. .. .. ..$ Dmat   : num [1:5] 0.6417 0.3902 0.2072 0.0786 0.0511              # Gaussian_Law::diagonal
            .
            .
            .
     #+END_EXAMPLE

***** Error in preprocessing
      This error happened because
      /scratch/squinito/Dev/Data/Rats_Blind_test_Sain_-_Tumor_-_Lemasson_2016.csv
      is empty.
      #+BEGIN_EXAMPLE
      squinito@poe:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R$ ./preprocess.py --list=data_files.conf 
      Preprocessing /scratch/squinito/Dev/Data/Rats_9L_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_9L_-_Tumor_-_Lemasson_2016.csv
      ./preprocess.py:80: SettingWithCopyWarning: 
      A value is trying to be set on a copy of a slice from a DataFrame.
      Try using .loc[row_indexer,col_indexer] = value instead
      
      See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
      
      ./preprocess.py:92: SettingWithCopyWarning: 
      A value is trying to be set on a copy of a slice from a DataFrame.
      Try using .loc[row_indexer,col_indexer] = value instead
      
      See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
      
      /usr/lib/python2.7/dist-packages/pandas/core/indexing.py:426: SettingWithCopyWarning: 
      A value is trying to be set on a copy of a slice from a DataFrame.
      Try using .loc[row_indexer,col_indexer] = value instead
      
      See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
      self.obj[item] = s
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_9L_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_9L_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_C6_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_C6_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_F98_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_F98_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_Sain_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Blind_test_Sain_-_Tumor_-_Lemasson_2016.csv # <-- empty
      Traceback (most recent call last):
      File "./preprocess.py", line 149, in <module>
      
      File "./preprocess.py", line 141, in main
      
      File "./preprocess.py", line 97, in build_meta_data
      data = gen_nghd_second(data, [x_dim, y_dim])
      File "./preprocess.py", line 73, in build_mapping
      
      File "/usr/lib/python2.7/dist-packages/pandas/core/frame.py", line 2299, in __setitem__
      self._set_item(key, value)
      File "/usr/lib/python2.7/dist-packages/pandas/core/frame.py", line 2365, in _set_item
      self._ensure_valid_index(value)
      File "/usr/lib/python2.7/dist-packages/pandas/core/frame.py", line 2346, in _ensure_valid_index
      raise ValueError('Cannot set a frame with no defined index '
      ValueError: Cannot set a frame with no defined index and a value that cannot be converted to a Series

      #+END_EXAMPLE

      #+BEGIN_EXAMPLE
      squinito@poe:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R$ ./preprocess.py --list=data_files.conf
      Preprocessing /scratch/squinito/Dev/Data/Rats_C6_-_Brain_-_Lemasson_2016.csv
      ./preprocess.py:80: SettingWithCopyWarning: 
      A value is trying to be set on a copy of a slice from a DataFrame.
      Try using .loc[row_indexer,col_indexer] = value instead
      
      See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
      data["Reduced_Idx"] = data.apply(lambda x: data.index.get_loc(x.name), axis=1)
      ./preprocess.py:92: SettingWithCopyWarning: 
      A value is trying to be set on a copy of a slice from a DataFrame.
      Try using .loc[row_indexer,col_indexer] = value instead
      
      See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
      data[["N%d" % i]] = data.apply(lambda x: rev_map[x["N%d" % i]] if x["N%d" % i] != -1 else -1, axis = 1)
      /usr/lib/python2.7/dist-packages/pandas/core/indexing.py:426: SettingWithCopyWarning: 
      A value is trying to be set on a copy of a slice from a DataFrame.
      Try using .loc[row_indexer,col_indexer] = value instead
      
      See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
      self.obj[item] = s
      Preprocessing /scratch/squinito/Dev/Data/Rats_C6_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_F98_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_F98_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Outlier_9L_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Outlier_9L_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Outlier_C6_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Outlier_C6_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_RG2_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_RG2_-_Tumor_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Sain_-_Brain_-_Lemasson_2016.csv
      Preprocessing /scratch/squinito/Dev/Data/Rats_Sain_-_Tumor_-_Lemasson_2016.csv
      Traceback (most recent call last):
      File "./preprocess.py", line 149, in <module>
      main()
      File "./preprocess.py", line 141, in main
      reduced_data, nghd = build_meta_data(data, x_dim, y_dim)
      File "./preprocess.py", line 97, in build_meta_data
      data = build_mapping(data)
      File "./preprocess.py", line 73, in build_mapping
      axis=1)
      File "/usr/lib/python2.7/dist-packages/pandas/core/frame.py", line 2299, in __setitem__
      self._set_item(key, value)
      File "/usr/lib/python2.7/dist-packages/pandas/core/frame.py", line 2365, in _set_item
      self._ensure_valid_index(value)
      File "/usr/lib/python2.7/dist-packages/pandas/core/frame.py", line 2346, in _ensure_valid_index
      raise ValueError('Cannot set a frame with no defined index '
      ValueError: Cannot set a frame with no defined index and a value that cannot be converted to a Series

      #+END_EXAMPLE
** May
*** 2018-05-07                                                    :Profiling:
**** Using gprof                                                 :deprecated:
     Unfortunately gprof doesn't accomodate well with parallel
     programs and doesn't seem very accurate (cf. result of
     =2018_05_17_10_31_50=). It doesn't show the impact of the objective
     function but we one it has.
    #+begin_src sh :results output :exports both
      ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/profiling/test /scratch/squinito/Dev/Data/Rats_Sain_-_Brain_-_Lemasson_2016_meta.csv -i 5 -t 8 -c 5
      gprof test gmon.out > O2_omp_ref_gprof.txt
      ~/.local/lib/python3.5/site-packages/gprof2dot.py O2_omp_ref_gprof.txt | dot -Tpng -o O2_omp_ref.png
    #+end_src
**** Using gperftool
     #+begin_src sh :results output :exports both
       ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/profiling/run_profiling.sh -d /scratch/squinito/Dev/Data/Rats_Sain_-_Brain_-_Lemasson_2016_meta.csv -c 5 -i 5 -n O2_copy_ALS -t 1
     #+end_src
     
     - Sequential ALS (=O2_copy_t8_i5_c5_info=):
       real	3m1.276s
       user	11m54.592s
       sys	1m35.280s
       #+begin_src R :results output :session :exports both
         tot_time_seq_als = 3 * 60 + 1.276
         objf_pct_seq_als = 0.5484
         objf_time_t1 = tot_time_seq_als * objf_pct
         objf_time_t1
       #+end_src

       #+RESULTS:
       : [1] 99.41176

     - objective function 8 threads (=O2_copy_objf_t8_i5_c5_info=):
       real	3m1.258s
       user	12m0.892s
       sys	1m35.676s
       #+begin_src R :results output :session :exports both
         tot_time = 3 * 60 + 1.258
         objf_pct = 0.0963
         objf_time_t8 = tot_time * objf_pct
         objf_time_t8
       #+end_src

       #+RESULTS:
       : [1] 17.45515
       
       Speedup according to gperftool measurement:
       #+begin_src R :results output :session :exports both
         speedup = objf_time_t1 / objf_time_t8
         speedup
       #+end_src

       #+RESULTS:
       : [1] 5.69527
       
       Estimated run time according to gperftool measurement:
       #+begin_src R :results output :session :exports both
         tot_time_seq_als - (objf_time_t1 - objf_time_t8)
       #+end_src

       #+RESULTS:
       : [1] 99.31939

       Estimated time based on the real kernel speedup:
       #+begin_src R :results output :session :exports both
         real_speedup = 2.182673
         tot_time_seq_als - (objf_time_t1 - objf_time_t1 / 2.182673)
       #+end_src

       #+RESULTS:
       : [1] 127.4101

       There is something wrong somewhere because neither of the
       estimated execution time is correct. More strangely, the used
       version of the objective function as a speedup around 2 but it
       seems to have no impact on the running time.
       
     - ALS 8 threads (=O2_copy_ALS_t8_i5_c5_info=):
       real	3m3.779s
       user	11m57.576s
       sys	1m34.880s
     - Full sequential (=O2_copy_ALS_t1_i5_c5_info=):
       real     5m32.252s
       user     5m14.304s
       sys      0m18.324s

     - [ ] Try to deactivate model parallelization
** June
*** 2018-06-26
**** ALS MMSD version
     - objective function in =src/mmsd/math/MATH_EigenFunction.cpp=
       - Xk \times Gk should be W_g D A_g^{-1}
       - G should be inv(Delta_k * A_k)
       - X should be V_i
     - Comparison with our c++ version:
       - [X] Y_ij = 1; A = D = Delta_i = Id
         Same results
       - [X] Y_ij = i; A = D = Delta_i = Id
         Same results
       - [X] Y_ij = 1; D = some rotation matrix; A = Delta_i = Id
         Same results
       - [X] Y_ij = 1; A = Random integer; D = Delta_i = Id
         Same results
       - [X] Y_ij = 1; Delta_i = Random; A = D = Id
         Same results
       - [X] Y_ij = 1; A = D = Random; Delta_i = Id;
         Same results
       - [X] Y_ij = 1; A = D = Delta_i = Random;
         Same results
       - [X] Y_ij = i; A = D = Delta_i = Random;
         Same results
       - [X] Y_ij = A = D = Delta_i = Random;
         Same results
       
       The problem came from the missing probability factor when
       computing V.
** July
*** 2018-07-26
**** DONE MPI vs Big Data
     Big data framework are:
     - much much slower
     - can be tricky to use is the algorithm is complex
     - most of them are for Java.
**** DONE EM algo schema
     Visualize the algorithm should help wrt. spliting data,
     parallelize, communication, synchronization
**** DONE Redesign application
     - Readable and maintainable 
     - Easily extendable:
       Find the right level of abstraction \to close to what statisticians
       are used to manipulate (e.g. distribution, random variables,
       etc...)
       - model
       - random variable
       - finite distribution 
       - infinite distribution
       - cluster

** August
*** 2018-08-09
**** Trying to understand behavior of the lowerbound
     Let's try a simple case and compare MMSD and our implementation
     by looking at the value of the eigen vectors.

     - We generate 2 clusters:
       #+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 600 :session
         nobs = 64
         x1 = rnorm(nobs, 5, 1)
         y1 = rnorm(nobs, 8, 1.5)
         x2 = rnorm(nobs, 2, 1)
         y2 = rnorm(nobs, 0, 0.5)
         m = matrix(nrow = nobs * 2, ncol = 2)
         m[,1] = c(x1,x2)
         m[,2] = c(y1,y2)
         K = 2
         clusters = sample(c(0,1), nobs * 2, replace=TRUE)

         dataSet = list(samplesNumber = nobs * 2, properties = m)

         dataSet$neighbourhood = matrix(rep(NA, nobs * 2 * 8), nrow = nobs * 2, ncol = 8)
         dataSet$neighbourCount = rep(0, nobs * 2)

         plot(m)
       #+end_src

       #+RESULTS:
       [[file:/tmp/babel-6364JDT/figure6364zUN.png]]

     - ALS MMSD:
       #+begin_src R :results output :session :exports both
         library("ompmmsd")
         library("Rcpp")

         model1 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 1)
         model1$clusters[[1]]$law$Pmat
         model1$clusters[[2]]$law$Pmat
       #+end_src

       #+RESULTS:
       #+begin_example
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
                 [,1]       [,2]
       [1,] 0.4145308 -0.9100353
       [2,] 0.9100353  0.4145308
                 [,1]       [,2]
       [1,] 0.3967210 -0.9179392
       [2,] 0.9179392  0.3967210
#+end_example

     - FG MMSD:
       #+begin_src R :results output :session :exports both
         model2 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "FG", orthogonalIterations = 1)
         model2$clusters[[1]]$law$Pmat
         model2$clusters[[2]]$law$Pmat
       #+end_src

       #+RESULTS:
       :           [,1]       [,2]
       : [1,] 0.4142428 -0.9101664
       : [2,] 0.9101664  0.4142428
       :           [,1]       [,2]
       : [1,] 0.3958175 -0.9183292
       : [2,] 0.9183292  0.3958175

     - Our ALS:
       #+begin_src R :results output :session :exports both
         dataSet$neighbourhood = matrix(rep(NA, nobs * 2 * 8), nrow = nobs * 2, ncol = 8)
         dataSet$neighbourCount = rep(0, nobs * 2)
         setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/R")
         source("Rcpp_EM_HMRF_MMSD.R")
         model2 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=1)

         model2$get_clusters()[[1]]$gaussian$orthogonal
         model2$get_clusters()[[2]]$gaussian$orthogonal
       #+end_src

       #+RESULTS:
       #+begin_example
       initialization with a gmm model
       cluster 0
       In ALS algorithm : max steps number (1) reached without convergence.
       cluster 1
       In ALS algorithm : max steps number (1) reached without convergence.
       em : step 0
         lower-bound E-step (+) : -423.624
       In ALS algorithm : max steps number (1) reached without convergence.
       In ALS algorithm : max steps number (1) reached without convergence.
         lower-bound M-step (-) : -434.376
         lower-bound (+) : -434.376
                   [,1]       [,2]
       [1,]  0.99916563 0.04084174
       [2,] -0.04084174 0.99916563
                   [,1]       [,2]
       [1,]  0.05544043 0.99846200
       [2,] -0.99846200 0.05544043
#+end_example

       #+begin_src R :results output :session :exports both
         model2 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=10000)

         model2$get_clusters()[[1]]$gaussian$orthogonal
         model2$get_clusters()[[2]]$gaussian$orthogonal
       #+end_src

       #+RESULTS:
       #+begin_example
       initialization with a gmm model
       cluster 0
       In ALS algorithm : max steps number (10000) reached without convergence.
       cluster 1
       In ALS algorithm : max steps number (10000) reached without convergence.
       em : step 0
         lower-bound E-step (+) : -422.777
       In ALS algorithm : max steps number (10000) reached without convergence.
       In ALS algorithm : max steps number (10000) reached without convergence.
         lower-bound M-step (-) : -434.714
         lower-bound (+) : -434.714
                   [,1]       [,2]
       [1,]  0.99858696 0.05314216
       [2,] -0.05314216 0.99858696
                    [,1]        [,2]
       [1,]  0.007318841 0.999973217
       [2,] -0.999973217 0.007318841
#+end_example

     - ALS implementation comparison:
       Let's see if we get the same result with just 1 iteration:
       #+begin_src sh :results output :exports both :session foo
         cd ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/ALS
         export LD_LIBRARY_PATH=/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/ompmmsd/libs/$LD_LIBRARY_PATH
         ./new_als 1
         ./mmsd 1

       #+end_src

       #+RESULTS:
       #+begin_example
       
       squinito@poe:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/ALS$ squinito@poe:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/ALS$ ============= objf =============
          78.3332

       In ALS algorithm : max steps number (1) reached without convergence.
       ============= newD =============
         -0.2408   0.9706
         -0.9706  -0.2408
       n: 2
       n: 2
       [
       0.497219	0.867625	
       -0.867625	0.497219	
       ]
       #+end_example
       
       Strange the result is quiet different.

       Let's try with 2:
       #+begin_src sh :results output :exports both :session foo
       ./new_als 2
       ./mmsd 2
       #+end_src

       #+RESULTS:
       #+begin_example
       ============= objf =============
          78.3332

       In ALS algorithm : max steps number (2) reached without convergence.
       ============= newD =============
         -0.2654   0.9641
         -0.9641  -0.2654
       n: 2
       n: 2
       n: 2
       [
       0.429011	0.903299	
       -0.903299	0.429011	
       ]
       #+end_example

       The solution for mmsd changed more than our solution.

       We know that both implementation converges to the same results:
       #+begin_src sh :results output :exports both :session foo
       ./new_als 100
       ./mmsd 100
       #+end_src

       #+RESULTS:
       #+begin_example
       ============= objf =============
          78.3332

       In ALS algorithm : max steps number (100) reached without convergence.
       ============= newD =============
         -0.2648   0.9643
         -0.9643  -0.2648
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       [
       -0.264794	0.964305	
       -0.964305	-0.264794	
       ]
       #+end_example
       
       Which means that our implementations need less iteration to reach
       the optimum:
       #+begin_src sh :results output :exports both :session foo
         ./new_als 3
         ./mmsd 5
       #+end_src

       #+RESULTS:
       #+begin_example
       ============= objf =============
          78.3332

       In ALS algorithm : max steps number (3) reached without convergence.
       ============= newD =============
         -0.2648   0.9643
         -0.9643  -0.2648
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       [
       -0.28487	0.958566	
       -0.958566	-0.28487	
       ]
       #+end_example

       #+begin_src sh :session foo :results output :exports both 
         ./new_als 3
         ./mmsd 7

       #+end_src

       #+RESULTS:
       #+begin_example
       ============= objf =============
          78.3332

       In ALS algorithm : max steps number (3) reached without convergence.
       ============= newD =============
         -0.2648   0.9643
         -0.9643  -0.2648
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       n: 2
       [
       -0.264794	0.964305	
       -0.964305	-0.264794	
       ]
      #+end_example       

     - First remarks:
       FG seems to find the solution with only 1 iteration.
       Our implementation (full implementation of EM) doesn't give the
       same orthogonal matrix compared to MMSD. Which is weird because
       I compared the 2 implementations of ALS alone and they give the
       same results. 
       
       Additional stuffs seems to happen to the orthogonal matrix and
       not only column reordering.
       
     - What if we perform 1000 iterations? Results should be the same
       right?
       - ALS MMSD:
         #+begin_src R :results output :session :exports both
           library("ompmmsd")
           library("Rcpp")

           model1 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 1000)
           model1$clusters[[1]]$law$Pmat
           model1$clusters[[2]]$law$Pmat
         #+end_src

         #+RESULTS:
         #+begin_example
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
#+end_example

       - Our ALS:
         #+begin_src R :results output :session :exports both
           setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/R")
           source("Rcpp_EM_HMRF_MMSD.R")
           model2 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=1000)

           model2$get_clusters()[[1]]$gaussian$orthogonal
           model2$get_clusters()[[2]]$gaussian$orthogonal
         #+end_src

         #+RESULTS:
         #+begin_example
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (1000) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (1000) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.776
         In ALS algorithm : max steps number (1000) reached without convergence.
         In ALS algorithm : max steps number (1000) reached without convergence.
           lower-bound M-step (-) : -435.218
           lower-bound (+) : -435.218
                     [,1]       [,2]
         [1,]  0.99732638 0.07307595
         [2,] -0.07307595 0.99732638
                      [,1]        [,2]
         [1,]  0.003480987 0.999993941
         [2,] -0.999993941 0.003480987
#+end_example

       No results are still not the same.
       
     - About the convergence of the 2 versions:
       - ALS MMSD:
         #+begin_src R :results output :session :exports both
           library("ompmmsd")
           library("Rcpp")

           model1 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 1)
           model2 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 2)
           model3 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 5)
           model4 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 10)
           model5 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 100)

           print("Number of iterations : 1")
           model1$clusters[[1]]$law$Pmat
           model1$clusters[[2]]$law$Pmat

           print("Number of iterations : 2")
           model2$clusters[[1]]$law$Pmat
           model2$clusters[[2]]$law$Pmat

           print("Number of iterations : 5")
           model3$clusters[[1]]$law$Pmat
           model3$clusters[[2]]$law$Pmat

           print("Number of iterations : 10")
           model4$clusters[[1]]$law$Pmat
           model4$clusters[[2]]$law$Pmat

           print("Number of iterations : 100")
           model5$clusters[[1]]$law$Pmat
           model5$clusters[[2]]$law$Pmat
         #+end_src

         #+RESULTS:
         #+begin_example
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         [1] "Number of iterations : 1"
                   [,1]       [,2]
         [1,] 0.4145308 -0.9100353
         [2,] 0.9100353  0.4145308
                   [,1]       [,2]
         [1,] 0.3967210 -0.9179392
         [2,] 0.9179392  0.3967210
         [1] "Number of iterations : 2"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
         [1] "Number of iterations : 5"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
         [1] "Number of iterations : 10"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
         [1] "Number of iterations : 100"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
         #+end_example
         
         The MMSD version seems to converge before the 10th iteration.
         
       - Our ALS:
         #+begin_src R :results output :session :exports both
           setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/R")
           source("Rcpp_EM_HMRF_MMSD.R")
           model1 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=1)
           model2 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=2)
           model3 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=5)
           model4 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=10)
           model5 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=100)
           model6 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=1000)

           print("Number of iterations : 1")
           model1$get_clusters()[[1]]$gaussian$orthogonal
           model1$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 2")
           model2$get_clusters()[[1]]$gaussian$orthogonal
           model2$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 5")
           model3$get_clusters()[[1]]$gaussian$orthogonal
           model3$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 10")
           model4$get_clusters()[[1]]$gaussian$orthogonal
           model4$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 100")
           model5$get_clusters()[[1]]$gaussian$orthogonal
           model5$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 1000")
           model6$get_clusters()[[1]]$gaussian$orthogonal
           model6$get_clusters()[[2]]$gaussian$orthogonal

         #+end_src

         #+RESULTS:
         #+begin_example
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (1) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (1) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -423.624
         In ALS algorithm : max steps number (1) reached without convergence.
         In ALS algorithm : max steps number (1) reached without convergence.
           lower-bound M-step (-) : -434.376
           lower-bound (+) : -434.376
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (2) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (2) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.82
         In ALS algorithm : max steps number (2) reached without convergence.
         In ALS algorithm : max steps number (2) reached without convergence.
           lower-bound M-step (-) : -434.676
           lower-bound (+) : -434.676
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (5) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (5) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.775
         In ALS algorithm : max steps number (5) reached without convergence.
         In ALS algorithm : max steps number (5) reached without convergence.
           lower-bound M-step (-) : -435.164
           lower-bound (+) : -435.164
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (10) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (10) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.776
         In ALS algorithm : max steps number (10) reached without convergence.
         In ALS algorithm : max steps number (10) reached without convergence.
           lower-bound M-step (-) : -435.292
           lower-bound (+) : -435.292
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (100) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (100) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.776
         In ALS algorithm : max steps number (100) reached without convergence.
         In ALS algorithm : max steps number (100) reached without convergence.
           lower-bound M-step (-) : -435.18
           lower-bound (+) : -435.18
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (1000) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (1000) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.776
         In ALS algorithm : max steps number (1000) reached without convergence.
         In ALS algorithm : max steps number (1000) reached without convergence.
           lower-bound M-step (-) : -435.185
           lower-bound (+) : -435.185
         [1] "Number of iterations : 1"
                     [,1]       [,2]
         [1,]  0.99916563 0.04084174
         [2,] -0.04084174 0.99916563
                     [,1]       [,2]
         [1,]  0.05544043 0.99846200
         [2,] -0.99846200 0.05544043
         [1] "Number of iterations : 2"
                     [,1]       [,2]
         [1,]  0.99862062 0.05250579
         [2,] -0.05250579 0.99862062
                     [,1]       [,2]
         [1,]  0.01372009 0.99990588
         [2,] -0.99990588 0.01372009
         [1] "Number of iterations : 5"
                     [,1]       [,2]
         [1,]  0.99835611 0.05731555
         [2,] -0.05731555 0.99835611
                      [,1]        [,2]
         [1,]  0.003598086 0.999993527
         [2,] -0.999993527 0.003598086
         [1] "Number of iterations : 10"
                     [,1]       [,2]
         [1,]  0.99973072 0.02320551
         [2,] -0.02320551 0.99973072
                      [,1]        [,2]
         [1,]  0.003485616 0.999993925
         [2,] -0.999993925 0.003485616
         [1] "Number of iterations : 100"
                     [,1]       [,2]
         [1,]  0.99851871 0.05440946
         [2,] -0.05440946 0.99851871
                     [,1]       [,2]
         [1,]  0.00345842 0.99999402
         [2,] -0.99999402 0.00345842
         [1] "Number of iterations : 1000"
                    [,1]      [,2]
         [1,]  0.9983459 0.0574925
         [2,] -0.0574925 0.9983459
                      [,1]        [,2]
         [1,]  0.003485546 0.999993925
         [2,] -0.999993925 0.003485546
         #+end_example

         Even with the number of iterations set to 1000 our
         implementation does not converge.

         As seen previously if we consider only the 2 ALS
         implementations, they seem to converge rather quickly to the
         same results (ours requiring less iterations, about
         5). However in our case, we still have the message that ALS
         did not converge even after 1000 iterations:         
         #+begin_src sh :results output :exports both  :session foo
           cd ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/ALS
           export LD_LIBRARY_PATH=/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/ompmmsd/libs/$LD_LIBRARY_PATH
           ./new_als 1000
         #+end_src

         #+RESULTS:
         : 
         : squinito@poe:~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/ALS$ ============= objf =============
         : 78.33324
         : In ALS algorithm : max steps number (1000) reached without convergence.
         : ============= newD =============
         : -0.2647937 0.9643051
         : -0.9643051 -0.2647937

         At 10K iterations we still don't converge but the orthogonal
         mat is completely different:
         #+begin_src sh :results output :exports both :session foo
           ./new_als 10000
         #+end_src

         #+RESULTS:
         : ============= objf =============
         : 78.33324
         : In ALS algorithm : max steps number (10000) reached without convergence.
         : ============= newD =============
         : -0.7071068 0.7071068
         : -0.7071068 -0.7071068
         
         Surprisingly if we try the same thing with mmsd version we
         got also another results:
         #+begin_src sh :results output :exports both :session foo
           ./mmsd 1000000000000000000
         #+end_src

         #+RESULTS:
         : n: 2
         : [
         : 0.525322	0.850904	
         : -0.850904	0.525322	
         : ]

     - [X] Check if the version I am testing has the last Alexis's
       modifications:
       Created a new branch =ALS_correction3= to merge with the branch
       =Alexis=.
       We still have the same problem...

       - ALS MMSD:
         #+begin_src R :results output :session :exports both
           library("ompmmsd")
           library("Rcpp")

           model1 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 1)
           model2 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 2)
           model3 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 5)
           model4 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 10)
           model5 = mmsd_estimate(dataSet=dataSet,nGroups=K,groups=clusters,iterationsNumber=1, orthogonalMethod = "S", orthogonalIterations = 100)

           print("Number of iterations : 1")
           model1$clusters[[1]]$law$Pmat
           model1$clusters[[2]]$law$Pmat

           print("Number of iterations : 2")
           model2$clusters[[1]]$law$Pmat
           model2$clusters[[2]]$law$Pmat

           print("Number of iterations : 5")
           model3$clusters[[1]]$law$Pmat
           model3$clusters[[2]]$law$Pmat

           print("Number of iterations : 10")
           model4$clusters[[1]]$law$Pmat
           model4$clusters[[2]]$law$Pmat

           print("Number of iterations : 100")
           model5$clusters[[1]]$law$Pmat
           model5$clusters[[2]]$law$Pmat
         #+end_src

         #+RESULTS:
         #+begin_example
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         n: 2
         [1] "Number of iterations : 1"
                   [,1]       [,2]
         [1,] 0.4145308 -0.9100353
         [2,] 0.9100353  0.4145308
                   [,1]       [,2]
         [1,] 0.3967210 -0.9179392
         [2,] 0.9179392  0.3967210
         [1] "Number of iterations : 2"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
         [1] "Number of iterations : 5"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
         [1] "Number of iterations : 10"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
         [1] "Number of iterations : 100"
                   [,1]       [,2]
         [1,] 0.4142428 -0.9101664
         [2,] 0.9101664  0.4142428
                   [,1]       [,2]
         [1,] 0.3958175 -0.9183292
         [2,] 0.9183292  0.3958175
#+end_example

         The MMSD version seems to converge before the 10th iteration.
         
       - Our ALS:
         #+begin_src R :results output :session :exports both
           setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/R")
           source("Rcpp_EM_HMRF_MMSD.R")
           model1 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=1)
           model2 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=2)
           model3 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=5)
           model4 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=10)
           model5 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=100)
           model6 = hmrf_estimate(dataSet=dataSet, nGroups=K, orthogonalMaxIter=1000)

           print("Number of iterations : 1")
           model1$get_clusters()[[1]]$gaussian$orthogonal
           model1$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 2")
           model2$get_clusters()[[1]]$gaussian$orthogonal
           model2$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 5")
           model3$get_clusters()[[1]]$gaussian$orthogonal
           model3$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 10")
           model4$get_clusters()[[1]]$gaussian$orthogonal
           model4$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 100")
           model5$get_clusters()[[1]]$gaussian$orthogonal
           model5$get_clusters()[[2]]$gaussian$orthogonal

           print("Number of iterations : 1000")
           model6$get_clusters()[[1]]$gaussian$orthogonal
           model6$get_clusters()[[2]]$gaussian$orthogonal

         #+end_src

         #+RESULTS:
         #+begin_example
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (1) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (1) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -423.624
         In ALS algorithm : max steps number (1) reached without convergence.
         In ALS algorithm : max steps number (1) reached without convergence.
           lower-bound M-step (-) : -434.376
           lower-bound (+) : -434.376
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (2) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (2) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.82
         In ALS algorithm : max steps number (2) reached without convergence.
         In ALS algorithm : max steps number (2) reached without convergence.
           lower-bound M-step (-) : -434.676
           lower-bound (+) : -434.676
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (5) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (5) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.775
         In ALS algorithm : max steps number (5) reached without convergence.
         In ALS algorithm : max steps number (5) reached without convergence.
           lower-bound M-step (-) : -435.164
           lower-bound (+) : -435.164
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (10) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (10) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.776
         In ALS algorithm : max steps number (10) reached without convergence.
         In ALS algorithm : max steps number (10) reached without convergence.
           lower-bound M-step (-) : -435.176
           lower-bound (+) : -435.176
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (100) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (100) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.776
         In ALS algorithm : max steps number (100) reached without convergence.
         In ALS algorithm : max steps number (100) reached without convergence.
           lower-bound M-step (-) : -434.99
           lower-bound (+) : -434.99
         initialization with a gmm model
         cluster 0
         In ALS algorithm : max steps number (1000) reached without convergence.
         cluster 1
         In ALS algorithm : max steps number (1000) reached without convergence.
         em : step 0
           lower-bound E-step (+) : -422.779
         In ALS algorithm : max steps number (1000) reached without convergence.
         In ALS algorithm : max steps number (1000) reached without convergence.
           lower-bound M-step (-) : -434.44
           lower-bound (+) : -434.44
         [1] "Number of iterations : 1"
                     [,1]       [,2]
         [1,]  0.99916563 0.04084174
         [2,] -0.04084174 0.99916563
                     [,1]       [,2]
         [1,]  0.05544043 0.99846200
         [2,] -0.99846200 0.05544043
         [1] "Number of iterations : 2"
                     [,1]       [,2]
         [1,]  0.99862062 0.05250579
         [2,] -0.05250579 0.99862062
                     [,1]       [,2]
         [1,]  0.01372009 0.99990588
         [2,] -0.99990588 0.01372009
         [1] "Number of iterations : 5"
                     [,1]       [,2]
         [1,]  0.99835611 0.05731555
         [2,] -0.05731555 0.99835611
                      [,1]        [,2]
         [1,]  0.003598086 0.999993527
         [2,] -0.999993527 0.003598086
         [1] "Number of iterations : 10"
                     [,1]       [,2]
         [1,]  0.99811086 0.06143874
         [2,] -0.06143874 0.99811086
                      [,1]        [,2]
         [1,]  0.003485616 0.999993925
         [2,] -0.999993925 0.003485616
         [1] "Number of iterations : 100"
                     [,1]       [,2]
         [1,]  0.99844425 0.05575905
         [2,] -0.05575905 0.99844425
                       [,1]          [,2]
         [1,] -0.0003719295  0.9999999308
         [2,] -0.9999999308 -0.0003719295
         [1] "Number of iterations : 1000"
                     [,1]       [,2]
         [1,]  0.99868619 0.05124348
         [2,] -0.05124348 0.99868619
                      [,1]        [,2]
         [1,]  0.003484767 0.999993928
         [2,] -0.999993928 0.003484767
#+end_example

** September
*** 2018-09-17
**** DONE Presentation GIN 
     DEADLINE: <2018-09-25 mar.>
***** Introduction
       - Pipeline
         1. input \to MRI map
         2. Build healthy model \to c++
         3. Discriminate abnormal cells R
         4. Build abnormality model \to c++
         5. Build tumor signatures R
       - Software stack
         - 3 languages:
           - C++ \to heavy processing 
           - R \to light processing
           - Bash \to running the whole pipeline
         - Bash \to R \to R \to R \to ... \to C++
       - 3 distinct versions (duplicated code):
         - MMSD (Stephane Despreaux)
           fast but code too complex for non-informatician.
           Custom "wrapper" for linear algebra libraries
         - Bayesian
           using armadillo
         - Markovian (correct version) with some optimizations
           To accommodate with the complexity of human data
           using armadillo
         - Mainly linear algebra operations
           Armadillo c++ linear algebra library easy to use 
***** Current state of the code
       - Parallel
       - TUI \to pass input to script with options (a lot)
       - (Detail of the pipeline)
         
       - Performances
         - Bottlenecks \to optimization functions \to ALS
         - interest of armadillo \to easy to write/read but is it the
           real bottleneck.
         - Tried cuda

       - right now working on code architecture

***** Known issues
       - Script not very easy to use
         - not friendly UI
         - not so easy to install
         - Bash \to archaic
       - Scaling
         - Slowness
           - Should take at least 2.5 years to run with Veronica's
             data
           - MMSD faster but code more complex
         - Memory consumption:
           - R crashes complaining about using too much memory.
             # - data no more loaded directly in R
             # - data loaded "on the fly"
       - Sparse developer documentation
       - Lack of real user manual

***** Future of the code
       - check points restart
       - Git orginization
         - c++ lib
         - python , R packages
         - code for rats
       - give more detail about code structure 
       - Reorganizing the code \to improved code architecture:
         - more robust code
         - easier to extends (for model should only need to add formulas)
         - merge existing versions \to only 1 versions
         - Gives more flexibility in model selections (possible to
           define a type of distribution per cluster )
         - Core part of the code should be a library for
           classification that can operate with any languages
       - Memory consumption:
         - problem with R garbage collector
         - stop loading the entire data set directly \to load part on
           the fly
         - minibatch approach ?

       - Performances:
         - Cluster \to MPI
           compute a class on several cluster instead of a class per
           cluster \to better balancing of the data \to should be ok with
           run time library if ever needed
         - GPU \to CUDA / OPENCL
           - Might need an expert to implement.
         - CPU optimization \to Parallelized + vectorized
         - Heterogenous parallelism
       - Pipeline and light processing might be rewritten in python
       - Computational part might be re-written in Julia
       - Documentation for user and developer

*** 2018-09-18
**** Efficiency of armadillo                                    :Performance:
     Lets see if armadillo correctly use vectorization
     #+BEGIN_SRC C++ :tangle /tmp/kernel.cpp
       #include <stdlib.h>
       #include "/scratch/squinito/Tools/armadillo-code/lib/include/armadillo" 
       #include "/scratch/squinito/Tools/petk/include/petk.h"

       #define NUM_EVENT 15

       #define N 1024 * 8

       using namespace arma; 

       inline void kernel(const fmat& A, const fmat& B, fmat& C){
           C = A + B;
       }

       int main(int argc, char** argv){
           
           int n = N;

           if(argc > 1)
               n = atoi(argv[1]);

           fmat A = randu<fmat>(n,n);
           fmat B = randu<fmat>(n,n);
           fmat C = zeros<fmat>(n,n);

           char *events[] = {
               "PAPI_BR_CN",
               "PAPI_BR_TKN",
               "L1-DCACHE-LOADS",
               "L1-DCACHE-STORES",
               "MEM_INST_RETIRED:ALL_LOADS",
               "MEM_INST_RETIRED:ALL_STORES",
               "MISALIGN_MEM_REF:LOADS",
               "MISALIGN_MEM_REF:STORES",
               "FP_ARITH:128B_PACKED_SINGLE",
               "FP_ARITH:256B_PACKED_SINGLE",
               "FP_ARITH:SCALAR_SINGLE",
               "PAPI_VEC_SP",
               "PAPI_TOT_CYC",
               "BR_INST_RETIRED",
               "BRANCH_INSTRUCTIONS_RETIRED"
           };
                     
           init_papi(events, NUM_EVENT);
           
           start_papi();

           kernel(A,B,C);
           
           stop_papi();

           std::cout << C[0] << std::endl; 
           
           print_papi_counters(events);

           terminate_papi(events);
       }
     #+END_SRC

     #+begin_src sh :results output :exports both
       cd /tmp
       CXX=g++
       CFLAGS="-std=c++11 -O3 -march=native -DARMA_DONT_USE_WRAPPER"
       INCLUDES="-I/scratch/squinito/Tools/petk/include -I/scratch/squinito/Tools/armadillo-code/include"
       LDFLAGS="-L/scratch/squinito/Tools/petk/lib -L/scratch/squinito/Tools/armadillo-code/lib/lib -L/scratch/squinito/Tools/OpenBLAS/bin/lib -lmeasure -larmadillo -lopenblas"
       SRC=kernel.cpp

       $CXX $CFLAGS $INCLUDES $SRC -o kernel_vec $LDFLAGS

       $CXX $CFLAGS -fno-tree-vectorize $INCLUDES $SRC -o kernel_novec $LDFLAGS

       $CXX $CFLAGS -DARMA_NO_DEBUG $INCLUDES $SRC -o kernel_nodebug $LDFLAGS
     #+end_src

     #+RESULTS:

     #+begin_src sh :results output :exports both
       LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/scratch/squinito/Tools/petk/lib /tmp/kernel_vec 8192
     #+end_src

     #+RESULTS:
     #+begin_example
     1.79029
     PAPI_BR_CN: 			7981671
     PAPI_BR_TKN: 			7976149
     L1-DCACHE-LOADS: 			33796663
     L1-DCACHE-STORES: 			16967977
     MEM_INST_RETIRED:ALL_LOADS: 			33838416
     MEM_INST_RETIRED:ALL_STORES: 			16917536
     MISALIGN_MEM_REF:LOADS: 			0
     MISALIGN_MEM_REF:STORES: 			0
     FP_ARITH:128B_PACKED_SINGLE: 			0
     FP_ARITH:256B_PACKED_SINGLE: 			8318190
     FP_ARITH:SCALAR_SINGLE: 			0
     PAPI_VEC_SP: 			8318190
     PAPI_TOT_CYC: 			125400393
     BR_INST_RETIRED: 			8320244
     BRANCH_INSTRUCTIONS_RETIRED: 			8312280

#+end_example

     #+begin_src sh :results output :exports both
       LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/scratch/squinito/Tools/petk/lib /tmp/kernel_novec 8192
     #+end_src

     #+RESULTS:
     #+begin_example
     1.79029
     PAPI_BR_CN: 			33314100
     PAPI_BR_TKN: 			33308185
     L1-DCACHE-LOADS: 			133665770
     L1-DCACHE-STORES: 			66999188
     MEM_INST_RETIRED:ALL_LOADS: 			133982957
     MEM_INST_RETIRED:ALL_STORES: 			67052908
     MISALIGN_MEM_REF:LOADS: 			0
     MISALIGN_MEM_REF:STORES: 			0
     FP_ARITH:128B_PACKED_SINGLE: 			0
     FP_ARITH:256B_PACKED_SINGLE: 			0
     FP_ARITH:SCALAR_SINGLE: 			67095210
     PAPI_VEC_SP: 			67095210
     PAPI_TOT_CYC: 			175476463
     BR_INST_RETIRED: 			33555046
     BRANCH_INSTRUCTIONS_RETIRED: 			33447972

#+end_example

     It seems it used avx instructions as it was supposed to:
     #+begin_src R :results output :session :exports both
     66970541 / 8032008
     #+end_src

     #+RESULTS:
     : [1] 8.337957

*** 2018-09-20
**** DONE Bug in the neighbourhood system                               :Bug:
     SCHEDULED: <2018-09-26 mer.>
***** Problem description
      On simple cases the neighbourhood seems ok but with rats brain in
      some cases it is not working correctly.
      
      On the image provided by Alexis showing the weight of each
      pixel, we observe the 2 first slices don't seem to have any
      problem. However the remaining slices exhibit some anomaly in the
      bottom left corner of the image. The anomaly seems very regular,
      it has a rectangular shape. This part of this shape is outside
      the brain area and a part overlap with the brain. Inside this
      rectangle there is also a not smooth color gradient left \to
      right. The top of the shape seems to correspond to the middle of
      the image.
***** Identifying the problem
      - The rectangular shape could be caused by a loop.
      - Voxels outside of the brain area are not rejected based on
        their physical values because the physical value of voxel
        inside the brain can be zero or even less.

      - How many voxels do we have in input and output? We have the
        same number of voxels...

      - Lets try to light every voxels that are tagged as
        neighbour. If there is a bug is the neighourhood system we
        should see the brains along with the rectangular shape.
        The image provided by Alexis the patient Fischer-1 brain.

        #+BEGIN_SRC python  :results output :session :exports both
          import numpy as np
          import pandas as pd
          import cv2 as cv

          df = pd.read_csv("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_meta.csv")

          fischer1 = df[(df.Patient_Idx == 2) & (df.Slice == 2)]

          image = np.ones((128,128), dtype=np.uint8)

          offset = fischer1.iloc[0].Reduced_Idx

          for index, voxel in fischer1.iterrows():
              for n in range(0,voxel["Neighbour_Count"]):
                  neighbour = fischer1.iloc[ voxel["N"+ str(n) ] - offset]
                  image[neighbour["Coord_X"],neighbour["Coord_Y"]] = 255


          cv.imwrite("/tmp/test.jpg", image, [int(cv.IMWRITE_JPEG_QUALITY), 120])
        #+END_SRC

        #+RESULTS:
        : 
        : >>> >>> >>> >>> ... ... ... ... >>> >>> True

        It seems that there is no problem with the neighbourhood. But
        we can try to use a color code to see how many neighbour has a
        voxel. Voxel on the border should have different color.

        #+begin_src python :results output :session :exports both
          image_bgr = np.zeros((128,128,3), dtype=np.uint8)

          color_code = [[128,255,128],
                        [0,0,255],
                        [0,255,0],
                        [255,0,0],
                        [0,255,255],
                        [255,0,255],
                        [255,255,0],
                        [255,255,127],
                        [255,255,255]]

          for index, voxel in fischer1.iterrows():
              image_bgr[voxel["Coord_X"],voxel["Coord_Y"]] = color_code[ voxel["Neighbour_Count"] ]

          cv.imwrite("/tmp/test2.jpg", image_bgr, [int(cv.IMWRITE_JPEG_QUALITY), 120])

        #+end_src

        #+RESULTS:
        : 
        : >>> ... ... ... ... ... ... ... ... >>> >>> ... ... >>> True

        This confirm that the neighbourhood system is not the problem.
*** 2018-09-21
**** Comparison armadillo vs MMSD
     - Number of MRI dimension: 5
       #+begin_src sh :results output :exports both
         export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/scratch/squinito/Tools/OpenBLAS/bin/lib:/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/ompmmsd/libs:/scratch/squinito/Tools/googletest/googletest/build:/scratch/squinito/Tools/armadillo-code/lib/lib:/usr/local/cuda-8.0/lib64:/scratch/squinito/Tools/petk/lib:/scratch/squinito/Tools/cuDNN/lib64:
         OMP_NUM_THREADS=1 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_mmsd

         OMP_NUM_THREADS=1 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_ours
       #+end_src

       #+RESULTS:
       #+begin_example
       n: 5
       PAPI_BR_CN: 			238386788
       PAPI_BR_TKN: 			141005082
       MEM_INST_RETIRED:ALL_LOADS: 			777526078
       MEM_INST_RETIRED:ALL_STORES: 			296730534
       FP_ARITH:128B_PACKED_DOUBLE: 			53
       FP_ARITH:256B_PACKED_DOUBLE: 			2642016
       FP_ARITH:SCALAR_DOUBLE: 			525173559
       PAPI_VEC_SP: 			0
       PAPI_TOT_CYC: 			1964053667
       BR_INST_RETIRED: 			333832841
       BRANCH_INSTRUCTIONS_RETIRED: 			343394079
       
       PAPI_BR_CN: 			573536704
       PAPI_BR_TKN: 			229302156
       MEM_INST_RETIRED:ALL_LOADS: 			1179642173
       MEM_INST_RETIRED:ALL_STORES: 			738292658
       FP_ARITH:128B_PACKED_DOUBLE: 			0
       FP_ARITH:256B_PACKED_DOUBLE: 			78779731
       FP_ARITH:SCALAR_DOUBLE: 			455800173
       PAPI_VEC_SP: 			0
       PAPI_TOT_CYC: 			2510216751
       BR_INST_RETIRED: 			750072948
       BRANCH_INSTRUCTIONS_RETIRED: 			752487582

       #+end_example

       | Counters                  |       MMSD |       Ours | ratio |
       |---------------------------+------------+------------+-------|
       | FP_ARITH:128B_PACKED_DOUBLE  |         53 |          0 |       |
       | FP_ARITH:256B_PACKED_DOUBLE  |    2642016 |   78779731 | 29.82 |
       | FP_ARITH:SCALAR_DOUBLE      |  525173559 |  455800173 |  0.87 |
       | BRANCH_INSTRUCTIONS_RETIRED |  343394079 |  752487582 |  2.19 |
       | MEM_INST_RETIRED:ALL_LOADS   |  777526078 | 1179642173 |  1.52 |
       | MEM_INST_RETIRED:ALL_STORES  |  525173559 |  738292658 |  1.40 |
       | PAPI_TOT_CYC                | 1964053667 | 2510216751 |  1.27 |

       |      | Total arith. |
       |------+--------------|
       | MMSD |    535741729 |
       | OURS |    770919097 |

       - ratio:
         #+begin_src R :results output :session :exports both
           770919097 / 535741729
         #+end_src

         #+RESULTS:
         : [1] 1.438975

       |      | Arithmetic intensity |
       |------+----------------------|
       | MMSD |                 0.27 |
       | OURS |                 0.31 |

     - Number of MRI dimension: 4
       #+begin_src sh :results output :exports both
         export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/scratch/squinito/Tools/OpenBLAS/bin/lib:/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/ompmmsd/libs:/scratch/squinito/Tools/googletest/googletest/build:/scratch/squinito/Tools/armadillo-code/lib/lib:/usr/local/cuda-8.0/lib64:/scratch/squinito/Tools/petk/lib:/scratch/squinito/Tools/cuDNN/lib64:
         OMP_NUM_THREADS=1 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_mmsd 4

         OMP_NUM_THREADS=1 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_ours 4
       #+end_src

       #+RESULTS:
       #+begin_example
       n: 4
       PAPI_BR_CN: 			165511330
       PAPI_BR_TKN: 			85864965
       MEM_INST_RETIRED:ALL_LOADS: 			554230864
       MEM_INST_RETIRED:ALL_STORES: 			250914294
       FP_ARITH:128B_PACKED_DOUBLE: 			26
       FP_ARITH:256B_PACKED_DOUBLE: 			1766850
       FP_ARITH:SCALAR_DOUBLE: 			375698414
       PAPI_VEC_SP: 			0
       PAPI_TOT_CYC: 			1630423924
       BR_INST_RETIRED: 			260072736
       BRANCH_INSTRUCTIONS_RETIRED: 			257494286

       PAPI_BR_CN: 			275483408
       PAPI_BR_TKN: 			100210399
       MEM_INST_RETIRED:ALL_LOADS: 			729507920
       MEM_INST_RETIRED:ALL_STORES: 			374035022
       FP_ARITH:128B_PACKED_DOUBLE: 			0
       FP_ARITH:256B_PACKED_DOUBLE: 			7418076
       FP_ARITH:SCALAR_DOUBLE: 			422010079
       PAPI_VEC_SP: 			0
       PAPI_TOT_CYC: 			1553194824
       BR_INST_RETIRED: 			393955747
       BRANCH_INSTRUCTIONS_RETIRED: 			389909272

       #+end_example

       | Counters                  |       MMSD |       Ours | ratio |
       |---------------------------+------------+------------+-------|
       | FP_ARITH:128B_PACKED_DOUBLE  |         26 |          0 |       |
       | FP_ARITH:256B_PACKED_DOUBLE  |    1766850 |    7418076 | 4.2   |
       | FP_ARITH:SCALAR_DOUBLE      |  375698414 |  422010079 | 1.12  |
       | BRANCH_INSTRUCTIONS_RETIRED |  257494286 |  389909272 | 1.51  |
       | MEM_INST_RETIRED:ALL_LOADS   |  554230864 |  729507920 | 1.32  |
       | MEM_INST_RETIRED:ALL_STORES  |  250914294 |  374035022 | 1.49  |
       | PAPI_TOT_CYC                | 1630423924 | 1553194824 | 0.95  |

       |      | Total arith. |
       |------+--------------|
       | MMSD |    382765866 |
       | OURS |    451682383 |

       - ratio:
         #+begin_src R :results output :session :exports both
           451682383 / 382765866
         #+end_src

         #+RESULTS:
         : [1] 1.180049

       |      | Arithmetic intensity |
       |------+----------------------|
       | MMSD |                 0.23 |
       | OURS |                 0.29 |


     - Number of MRI dimension: 8
       #+begin_src sh :results output :exports both
         export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/scratch/squinito/Tools/OpenBLAS/bin/lib:/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/ompmmsd/libs:/scratch/squinito/Tools/googletest/googletest/build:/scratch/squinito/Tools/armadillo-code/lib/lib:/usr/local/cuda-8.0/lib64:/scratch/squinito/Tools/petk/lib:/scratch/squinito/Tools/cuDNN/lib64:
         OMP_NUM_THREADS=1 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_mmsd 8

         OMP_NUM_THREADS=1 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_ours 8
       #+end_src

       #+RESULTS:
       #+begin_example
       n: 8
       PAPI_BR_CN: 			373446158
       PAPI_BR_TKN: 			233238141
       MEM_INST_RETIRED:ALL_LOADS: 			1342107778
       MEM_INST_RETIRED:ALL_STORES: 			529739884
       FP_ARITH:128B_PACKED_DOUBLE: 			0
       FP_ARITH:256B_PACKED_DOUBLE: 			137826334
       FP_ARITH:SCALAR_DOUBLE: 			1035683372
       PAPI_VEC_SP: 			0
       PAPI_TOT_CYC: 			3172207986
       BR_INST_RETIRED: 			539576610
       BRANCH_INSTRUCTIONS_RETIRED: 			538930730

       PAPI_BR_CN: 			640561894
       PAPI_BR_TKN: 			264404314
       MEM_INST_RETIRED:ALL_LOADS: 			1711555216
       MEM_INST_RETIRED:ALL_STORES: 			1127395497
       FP_ARITH:128B_PACKED_DOUBLE: 			0
       FP_ARITH:256B_PACKED_DOUBLE: 			289530247
       FP_ARITH:SCALAR_DOUBLE: 			645623271
       PAPI_VEC_SP: 			0
       PAPI_TOT_CYC: 			3843079134
       BR_INST_RETIRED: 			886321648
       BRANCH_INSTRUCTIONS_RETIRED: 			885406712

#+end_example

       | Counters                  |       MMSD |       Ours | ratio |
       |---------------------------+------------+------------+-------|
       | FP_ARITH:128B_PACKED_DOUBLE  |          0 |          0 |       |
       | FP_ARITH:256B_PACKED_DOUBLE  |  137826334 |  289530247 |   2.1 |
       | FP_ARITH:SCALAR_DOUBLE      | 1035683372 |  645623271 |  0.62 |
       | BRANCH_INSTRUCTIONS_RETIRED |  538930730 |  885406712 |  1.64 |
       | MEM_INST_RETIRED:ALL_LOADS   | 1342107778 | 1711555216 |  1.27 |
       | MEM_INST_RETIRED:ALL_STORES  |  529739884 | 1127395497 |  2.13 |
       | PAPI_TOT_CYC                | 3172207986 | 3843079134 |  1.21 |
       

       |      | Total arith. |
       |------+--------------|
       | MMSD |   1586988708 |
       | OURS |   1803744259 |

       - ratio:
         #+begin_src R :results output :session :exports both
           1803744259 / 1586988708
         #+end_src

         #+RESULTS:
         : [1] 1.136583

     #+begin_src R :results output :session :exports both
       nb_dimensions = c(4,4,5,5,8,8)
       versions = rep(c("mmsd", "ours"), 3)
       tot_cyc = c(1630423924, 1553194824, 1964053667, 2510216751, 3172207986, 3843079134)
       vec_64 = c(1766850, 7418076, 2642016, 78779731, 137826334, 289530247)
       branching = c(257494286, 389909272, 343394079, 752487582, 538930730, 885406712)
       load = c(554230864 ,  729507920, 777526078 , 1179642173, 1342107778 , 1711555216)
       store = c(250914294 ,  374035022, 525173559 ,  738292658, 529739884 , 1127395497)
       tot_arith = c(382765866, 451682383, 535741729, 770919097, 1586988708, 1803744259)
       ratio_tot_cyc = rep(1.0, 6)
       ratio_vec_64 = rep(1.0, 6)
       ratio_branching = rep(1.0, 6)
       ratio_load = rep(1.0, 6)
       ratio_store = rep(1.0, 6)
       ratio_tot_arith = rep(1.0, 6)
       df = data.frame(nb_dimensions, versions, tot_cyc, vec_64, branching, load, store, tot_arith, ratio_tot_cyc, ratio_vec_64, ratio_branching, ratio_load, ratio_store, ratio_tot_arith)

       df[df["versions"] == "ours",]$ratio_tot_cyc = df[df["versions"] == "ours",]$tot_cyc / df[df["versions"] == "mmsd",]$tot_cyc
       df[df["versions"] == "ours",]$ratio_vec_64 = df[df["versions"] == "ours",]$vec_64 / df[df["versions"] == "mmsd",]$vec_64
       df[df["versions"] == "ours",]$ratio_branching = df[df["versions"] == "ours",]$branching / df[df["versions"] == "mmsd",]$branching
       df[df["versions"] == "ours",]$ratio_load = df[df["versions"] == "ours",]$load / df[df["versions"] == "mmsd",]$load
       df[df["versions"] == "ours",]$ratio_store = df[df["versions"] == "ours",]$store / df[df["versions"] == "mmsd",]$store
       df[df["versions"] == "ours",]$ratio_tot_arith = df[df["versions"] == "ours",]$tot_arith / df[df["versions"] == "mmsd",]$tot_arith
       df
     #+end_src

     #+RESULTS:
     #+begin_example
       nb_dimensions versions    tot_cyc    vec_64 branching       load      store
     1             4     mmsd 1630423924   1766850 257494286  554230864  250914294
     2             4     ours 1553194824   7418076 389909272  729507920  374035022
     3             5     mmsd 1964053667   2642016 343394079  777526078  525173559
     4             5     ours 2510216751  78779731 752487582 1179642173  738292658
     5             8     mmsd 3172207986 137826334 538930730 1342107778  529739884
     6             8     ours 3843079134 289530247 885406712 1711555216 1127395497
        tot_arith ratio_tot_cyc ratio_vec_64 ratio_branching ratio_load ratio_store
     1  382765866     1.0000000     1.000000        1.000000   1.000000    1.000000
     2  451682383     0.9526325     4.198475        1.514244   1.316253    1.490688
     3  535741729     1.0000000     1.000000        1.000000   1.000000    1.000000
     4  770919097     1.2780795    29.818037        2.191324   1.517174    1.405807
     5 1586988708     1.0000000     1.000000        1.000000   1.000000    1.000000
     6 1803744259     1.2114840     2.100689        1.642895   1.275274    2.128206
       ratio_tot_arith
     1        1.000000
     2        1.180049
     3        1.000000
     4        1.438975
     5        1.000000
     6        1.136583
    #+end_example

    #+begin_src sh :results output :exports both
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/scratch/squinito/Tools/OpenBLAS/bin/lib:/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/ompmmsd/libs:/scratch/squinito/Tools/googletest/googletest/build:/scratch/squinito/Tools/armadillo-code/lib/lib:/usr/local/cuda-8.0/lib64:/scratch/squinito/Tools/petk/lib:/scratch/squinito/Tools/cuDNN/lib64:
      OMP_NUM_THREADS=8 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_mmsd 4

      OMP_NUM_THREADS=8 ~/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/performances/time_measures/kernels/ALS/ugrad/papi_ours 4
    #+end_src

    #+RESULTS:
    #+begin_example
    n: 4
    PAPI_BR_CN: 			72754869
    PAPI_BR_TKN: 			68239770
    MEM_INST_RETIRED:ALL_LOADS: 			142989892
    MEM_INST_RETIRED:ALL_STORES: 			49608851
    FP_ARITH:128B_PACKED_DOUBLE: 			25
    FP_ARITH:256B_PACKED_DOUBLE: 			31133229
    FP_ARITH:SCALAR_DOUBLE: 			154741178
    PAPI_VEC_SP: 			0
    PAPI_TOT_CYC: 			823703350
    BR_INST_RETIRED: 			88413208
    BRANCH_INSTRUCTIONS_RETIRED: 			79013982

    PAPI_BR_CN: 			125540878
    PAPI_BR_TKN: 			40445727
    MEM_INST_RETIRED:ALL_LOADS: 			296634000
    MEM_INST_RETIRED:ALL_STORES: 			119482918
    FP_ARITH:128B_PACKED_DOUBLE: 			0
    FP_ARITH:256B_PACKED_DOUBLE: 			6809140
    FP_ARITH:SCALAR_DOUBLE: 			135538178
    PAPI_VEC_SP: 			0
    PAPI_TOT_CYC: 			569651645
    BR_INST_RETIRED: 			158648096
    BRANCH_INSTRUCTIONS_RETIRED: 			155701119

#+end_example

*** 2018-09-25
**** Meeting GIN                                                    :Meeting:
***** Veronica - Parkinson
       - 3 maps
       - 1 brain = 9 millions
       - 10, 20 , 30 ... patients we don't really but should scale
       - Build model on the fly for radiologist.

       Memory size of 1 human brain:
       #+begin_src R :results output :session :exports both
         ndims = 3 + 5
         nPatients = 30
         nvoxels = 9e6 
         typeSize = 8 # Number of Bytes for double precision
         Bytes = ndims * nvoxels * nPatients * typeSize
         kB = Bytes / 1024
         mB = kB / 1024
         gB = mB / 1024
         gB
       #+end_src

       #+RESULTS:
       : [1] 16.09325

***** Fei - Diabetes
      - 36 subjects
      - 5 * 12 * 24 data (every 5 min takes info in 1 day)
      - 20 maps

***** List of priorities
       1. Neighbourhood \to me
       2. Bayesian problem nodel \to Alexis
       3. By pass R data loading \to me
       4. Single precision \to me
       5. Split data \to me
       6. Clean install script \to me
       7. parallelization \to me
       8. minibatch
       9. git repo \to me

       MMSD long double?

       Check the date of the next GIN meeting.
*** 2018-09-28
**** TODO [#A] Loading data in C++ [50%]
***** DONE Convert CSV to HDF5
      Python script to convert csv to HDF5 using Pandas library.
***** DONE Read data from C++
      CLOSED: [2018-10-03 mer. 16:40]
      At first read data from c++ at once. We just provide to the C++
      part the path to the data.

      <2018-10-03 mer.> _Update_: Seems something is not working
      correctly with hdf5. When conversion is made with the python
      script the dataset name is not recognize with armadillo and all
      the values are stored in a vector instead of a matrix. I don't
      know if the problem come from armadillo or pandas. So for now
      maybe we can just stick with the csv format.
      
      I made the choice to give to the c++ data already splitted into
      files (one file containing the observations and one file
      containing the neibourhood system). This way there is no need to
      re-write the c++ part if the file structure changes. Only the
      python part need to be changed. The counter part is that there
      are more files to pass to the program.
      I also modified the name of the output files of the script
      preprocess.py.
***** TODO Write results from C++
      Maybe not necessary. See if it is sufficient to read directly
      from c++ object.
***** TODO Modify R call to C++

      =Data_importation_v2016_02_02.R= retrieves information input to
      the R script. It reads csv files and concatenates them +
      re-index the data if there are several. It also retrieves
      neighbourhood information.
      Possibilities:
      - Do the concatenation and re-indexing before-hand and store it
        in one unique file instead of a list of file
      - Do the concatenation as usual and save the concatenated data
        in a "temp" file and use this file.

**** TODO [#C] Single precision
**** TODO [#B] Better install script
***** Installation procedure
      - Need hdf5 support (lib and header file)
**** TODO Split data
**** TODO Parallelization
***** TODO CPU
***** TODO GPU
***** TODO MPI
**** TODO Git repo organization
** October
*** 2018-10-04
**** Memory foot-print
    Maybe the dataset size we are using currently is not that big. But
    it is the memory consumed by our application.
    If we take the case of the dataset
    =Rats_Sain_-_Brain_-_Lemasson_2016.csv= we have 45051 voxels with 5
    maps.
    
    Size of the data them selves:
    #+begin_src R :results output :session :exports both
      nVoxels = 45051
      nDims = 5 + 1 # + 1 for the voxel id
      dType = 8 # double precision
      Bytes = nDims * nVoxels * dType
      kB = Bytes / 1024
      dataSetSize = kB / 1024
      dataSetSize 
    #+end_src

    #+RESULTS:
    : [1] 2.062271

    Neighbourhood size:
    #+begin_src R :results output :session :exports both
      nVoxels = 45051
      nDims = 8 + 1 + 1
      dType = 4
      Bytes = nDims * nVoxels * dType
      kB = Bytes / 1024
      neiSize = kB / 1024
      neiSize
    #+end_src

    #+RESULTS:
    : [1] 1.718559

    Total input size:
    #+begin_src R :results output :session :exports both
      dataSetSize + neiSize
    #+end_src

    #+RESULTS:
    : [1] 3.78083

    #+BEGIN_SRC C
      #include "/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/Model.hpp"

      using namespace std;

      int main(){

          string data_path = "/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_val.csv";
          string nei_path = "/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_meta.nei";
          
          Model model("pouet", data_path, nei_path, 1, 1.0, 1);

          model.em(1, true, false, 1);
          
          return 0;
      }
          
    #+END_SRC

    #+BEGIN_SRC Makefile
CC=g++
CFLAGS=-std=c++11
RCPP_PATH=/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp
RCPPARMA_PATH=/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo
INCLUDES=-I/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R -I/usr/share/R/include -I$(RCPPARMA_PATH)/include/ -I$(RCPP_PATH)/include
LDFLAGS=-L/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R -L$(RCPP_PATH)/libs -lRcpp -L$(RCPPARMA_PATH)/libs -llapack -lrcpparmadillo -lR -pthread -lgsl -lRHmmMmst

foo: foo.cpp
	$(CC) $(CFLAGS) $(INCLUDES) $^ -o $@ $(LDFLAGS)
    #+END_SRC

    Report: [[file:report/massif.out.22636][Memory consumption report]]:
    #+begin_src sh :results output :exports both
      ms_print report/massif.out.22636
    #+end_src

    #+RESULTS:
    #+begin_example
    --------------------------------------------------------------------------------
    Command:            ./foo
    Massif arguments:   (none)
    ms_print arguments: report/massif.out.22636
    --------------------------------------------------------------------------------


        MB
    30.34^                     ##                                                 
         |                     #                                                  
         |                     # :::::::::::::::::::::::::::::::::::::::::::@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |                     # : ::: ::::::: : : :::::: ::::: ::::: : :: :@     
         |              :::::::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@:::::
         |              : :  ::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@: : :
         |              : :  ::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@: : :
         |              : :  ::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@: : :
         |              : :  ::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@: : :
         |         :::::: :  ::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@: : :
         |        ::   :: :  ::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@: : :
         | :::::::::   :: :  ::# : ::: ::::::: : : :::::: ::::: ::::: : :: :@: : :
       0 +----------------------------------------------------------------------->Gi
         0                                                                   7.550

    Number of snapshots: 56
     Detailed snapshots: [14 (peak), 50]

    --------------------------------------------------------------------------------
      n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
    --------------------------------------------------------------------------------
      0              0                0                0             0            0
      1    152,477,658        2,259,736        2,259,260           476            0
      2    282,133,744        2,259,776        2,259,291           485            0
      3    376,589,752        2,259,848        2,259,348           500            0
      4    543,834,801        2,259,776        2,259,291           485            0
      5    685,556,718        2,259,776        2,259,291           485            0
      6    816,362,851        2,259,848        2,259,348           500            0
      7    999,416,777        4,061,616        4,061,099           517            0
      8  1,095,740,790        5,863,680        5,863,178           502            0
      9  1,526,263,723        5,863,560        5,863,075           485            0
     10  1,650,972,892       13,067,968       13,067,246           722            0
     11  1,872,799,464       13,069,512       13,068,774           738            0
     12  2,154,669,405       13,067,968       13,067,246           722            0
     13  2,261,580,573       13,069,968       13,069,182           786            0
     14  2,467,277,952       31,813,600       31,451,318       362,282            0
    98.86% (31,451,318B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
    ->28.32% (9,010,200B) 0x54EC7EF: Gaussian_Law::update_orthogonal(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (memory.hpp:81)
    | ->28.32% (9,010,200B) 0x54EEF7A: Gaussian_Law::update(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:235)
    |   ->28.32% (9,010,200B) 0x54CE9F6: Cluster::update_M_step(arma::Mat<double>&, arma::Col<double>&, arma::Row<double>&, arma::Mat<double>&, arma::Mat<double>&, arma::Col<unsigned int>&) (Cluster.cpp:113)
    |     ->28.32% (9,010,200B) 0x54F305B: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Model.cpp:482)
    |       ->28.32% (9,010,200B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    |         ->28.32% (9,010,200B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    |           ->28.32% (9,010,200B) 0x403287: main (in /tmp/foo)
    |             
    ->22.66% (7,208,160B) 0x54EC4F3: Gaussian_Law::update_orthogonal(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Cube_meat.hpp:874)
    | ->22.66% (7,208,160B) 0x54EEF7A: Gaussian_Law::update(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:235)
    |   ->22.66% (7,208,160B) 0x54CE9F6: Cluster::update_M_step(arma::Mat<double>&, arma::Col<double>&, arma::Row<double>&, arma::Mat<double>&, arma::Mat<double>&, arma::Col<unsigned int>&) (Cluster.cpp:113)
    |     ->22.66% (7,208,160B) 0x54F305B: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Model.cpp:482)
    |       ->22.66% (7,208,160B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    |         ->22.66% (7,208,160B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    |           ->22.66% (7,208,160B) 0x403287: main (in /tmp/foo)
    |             
    ->11.33% (3,604,080B) 0x54C2781: std::__cxx11::list<arma::Mat<double>, std::allocator<arma::Mat<double> > >::operator=(std::__cxx11::list<arma::Mat<double>, std::allocator<arma::Mat<double> > > const&) (memory.hpp:81)
    | ->05.66% (1,802,040B) 0x54D6A7B: Gamma_Law::Gamma_Law(Gamma_Law const&) (Gamma_Law.cpp:79)
    | | ->05.66% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    | |   ->05.66% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |     ->05.66% (1,802,040B) 0x403227: main (in /tmp/foo)
    | |       
    | ->05.66% (1,802,040B) 0x54D6A8A: Gamma_Law::Gamma_Law(Gamma_Law const&) (Gamma_Law.cpp:80)
    |   ->05.66% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    |     ->05.66% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |       ->05.66% (1,802,040B) 0x403227: main (in /tmp/foo)
    |         
    ->06.80% (2,162,448B) 0x54BA939: arma::Mat<double>::init_warm(unsigned int, unsigned int) (memory.hpp:81)
    | ->05.66% (1,802,040B) 0x54DF454: Data::Data(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Mat_meat.hpp:1880)
    | | ->05.66% (1,802,040B) 0x54F184F: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->05.66% (1,802,040B) 0x403227: main (in /tmp/foo)
    | |     
    | ->01.13% (360,408B) 0x54F2F81: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Mat_meat.hpp:1880)
    | | ->01.13% (360,408B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    | |   ->01.13% (360,408B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    | |     ->01.13% (360,408B) 0x403287: main (in /tmp/foo)
    | |       
    | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
    | 
    ->05.66% (1,802,040B) 0x54D6CE1: Gamma_Law::Gamma_Law(Gamma_Law const&) (memory.hpp:81)
    | ->05.66% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    |   ->05.66% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |     ->05.66% (1,802,040B) 0x403227: main (in /tmp/foo)
    |       
    ->05.66% (1,802,040B) 0x54D6D19: Gamma_Law::Gamma_Law(Gamma_Law const&) (memory.hpp:81)
    | ->05.66% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    |   ->05.66% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |     ->05.66% (1,802,040B) 0x403227: main (in /tmp/foo)
    |       
    ->05.66% (1,802,040B) 0x5553CE9: ALSSolver::minimize(arma::Col<double> const&, arma::Cube<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, unsigned int) (memory.hpp:81)
    | ->05.66% (1,802,040B) 0x54EC62A: Gaussian_Law::update_orthogonal(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:171)
    |   ->05.66% (1,802,040B) 0x54EEF7A: Gaussian_Law::update(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:235)
    |     ->05.66% (1,802,040B) 0x54CE9F6: Cluster::update_M_step(arma::Mat<double>&, arma::Col<double>&, arma::Row<double>&, arma::Mat<double>&, arma::Mat<double>&, arma::Col<unsigned int>&) (Cluster.cpp:113)
    |       ->05.66% (1,802,040B) 0x54F305B: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Model.cpp:482)
    |         ->05.66% (1,802,040B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    |           ->05.66% (1,802,040B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    |             ->05.66% (1,802,040B) 0x403287: main (in /tmp/foo)
    |               
    ->04.53% (1,441,600B) 0x54E1229: arma::Mat<int>::init_warm(unsigned int, unsigned int) (memory.hpp:81)
    | ->04.53% (1,441,600B) 0x54DF7A6: Data::Data(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Mat_meat.hpp:1880)
    | | ->04.53% (1,441,600B) 0x54F184F: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->04.53% (1,441,600B) 0x403227: main (in /tmp/foo)
    | |     
    | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
    | 
    ->03.40% (1,081,624B) 0x54BA727: arma::Mat<double>::init_cold() (memory.hpp:81)
    | ->01.13% (360,408B) 0x54BCE6E: Gibbs_Law::Gibbs_Law(int, int, double) (Mat_meat.hpp:104)
    | | ->01.13% (360,408B) 0x54F18A6: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->01.13% (360,408B) 0x403227: main (in /tmp/foo)
    | |     
    | ->01.13% (360,408B) 0x54BD122: Gibbs_Law::Gibbs_Law(int, int, double) (Mat_meat.hpp:786)
    | | ->01.13% (360,408B) 0x54F18A6: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->01.13% (360,408B) 0x403227: main (in /tmp/foo)
    | |     
    | ->01.13% (360,408B) 0x54F18F3: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Mat_meat.hpp:104)
    | | ->01.13% (360,408B) 0x403227: main (in /tmp/foo)
    | |   
    | ->00.00% (400B) in 1+ places, all below ms_print's threshold (01.00%)
    | 
    ->01.43% (455,862B) in 70 places, all below massif's threshold (1.00%)
    | 
    ->01.13% (360,408B) 0x54C8BC7: Multinomial_Law::Multinomial_Law(int, int) (memory.hpp:81)
    | ->01.13% (360,408B) 0x54DA154: Variational::Variational(int, int, int) (Variational.cpp:26)
    |   ->01.13% (360,408B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |     ->01.13% (360,408B) 0x403227: main (in /tmp/foo)
    |       
    ->01.13% (360,408B) 0x54EC235: Gaussian_Law::update_orthogonal(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Cube_meat.hpp:467)
    | ->01.13% (360,408B) 0x54EEF7A: Gaussian_Law::update(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:235)
    |   ->01.13% (360,408B) 0x54CE9F6: Cluster::update_M_step(arma::Mat<double>&, arma::Col<double>&, arma::Row<double>&, arma::Mat<double>&, arma::Mat<double>&, arma::Col<unsigned int>&) (Cluster.cpp:113)
    |     ->01.13% (360,408B) 0x54F305B: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Model.cpp:482)
    |       ->01.13% (360,408B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    |         ->01.13% (360,408B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    |           ->01.13% (360,408B) 0x403287: main (in /tmp/foo)
    |             
    ->01.13% (360,408B) 0x54C9880: Multinomial_Law::Multinomial_Law(int, int) (memory.hpp:81)
      ->01.13% (360,408B) 0x54DA154: Variational::Variational(int, int, int) (Variational.cpp:26)
        ->01.13% (360,408B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
          ->01.13% (360,408B) 0x403227: main (in /tmp/foo)

    --------------------------------------------------------------------------------
      n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
    --------------------------------------------------------------------------------
     15  2,641,427,706       30,012,744       29,650,478       362,266            0
     16  2,859,388,413       30,012,744       29,650,478       362,266            0
     17  2,969,899,765       30,012,744       29,650,478       362,266            0
     18  3,150,389,070       30,012,744       29,650,478       362,266            0
     19  3,330,878,343       30,012,960       29,650,678       362,282            0
     20  3,466,244,821       30,012,960       29,650,678       362,282            0
     21  3,556,490,471       30,012,960       29,650,678       362,282            0
     22  3,691,856,949       30,012,960       29,650,678       362,282            0
     23  3,782,102,599       30,012,960       29,650,678       362,282            0
     24  3,917,469,077       30,012,960       29,650,678       362,282            0
     25  4,007,714,727       30,012,960       29,650,678       362,282            0
     26  4,188,204,030       30,012,960       29,650,678       362,282            0
     27  4,278,449,711       30,012,744       29,650,478       362,266            0
     28  4,458,939,005       30,012,744       29,650,478       362,266            0
     29  4,639,428,271       30,012,960       29,650,678       362,282            0
     30  4,819,917,568       30,012,960       29,650,678       362,282            0
     31  4,910,163,246       30,012,744       29,650,478       362,266            0
     32  5,045,529,690       30,012,960       29,650,678       362,282            0
     33  5,135,775,371       30,012,744       29,650,478       362,266            0
     34  5,271,141,818       30,012,960       29,650,678       362,282            0
     35  5,406,510,330       30,012,744       29,650,478       362,266            0
     36  5,541,876,783       30,012,960       29,650,678       362,282            0
     37  5,677,243,273       30,012,960       29,650,678       362,282            0
     38  5,812,611,785       30,012,744       29,650,478       362,266            0
     39  5,947,978,238       30,012,960       29,650,678       362,282            0
     40  6,083,346,750       30,012,744       29,650,478       362,266            0
     41  6,218,713,203       30,012,960       29,650,678       362,282            0
     42  6,354,079,693       30,012,960       29,650,678       362,282            0
     43  6,489,448,205       30,012,744       29,650,478       362,266            0
     44  6,624,814,658       30,012,960       29,650,678       362,282            0
     45  6,805,303,973       30,012,960       29,650,678       362,282            0
     46  6,985,795,310       30,012,744       29,650,478       362,266            0
     47  7,166,284,625       30,012,744       29,650,478       362,266            0
     48  7,346,774,135       30,012,960       29,650,678       362,282            0
     49  7,391,896,960       30,012,960       29,650,678       362,282            0
     50  7,437,021,675       30,012,744       29,650,478       362,266            0
    98.79% (29,650,478B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
    ->30.02% (9,010,200B) 0x54EC7EF: Gaussian_Law::update_orthogonal(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (memory.hpp:81)
    | ->30.02% (9,010,200B) 0x54EEF7A: Gaussian_Law::update(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:235)
    |   ->30.02% (9,010,200B) 0x54CE9F6: Cluster::update_M_step(arma::Mat<double>&, arma::Col<double>&, arma::Row<double>&, arma::Mat<double>&, arma::Mat<double>&, arma::Col<unsigned int>&) (Cluster.cpp:113)
    |     ->30.02% (9,010,200B) 0x54F305B: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Model.cpp:482)
    |       ->30.02% (9,010,200B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    |         ->30.02% (9,010,200B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    |           ->30.02% (9,010,200B) 0x403287: main (in /tmp/foo)
    |             
    ->24.02% (7,208,160B) 0x54EC4F3: Gaussian_Law::update_orthogonal(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Cube_meat.hpp:874)
    | ->24.02% (7,208,160B) 0x54EEF7A: Gaussian_Law::update(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:235)
    |   ->24.02% (7,208,160B) 0x54CE9F6: Cluster::update_M_step(arma::Mat<double>&, arma::Col<double>&, arma::Row<double>&, arma::Mat<double>&, arma::Mat<double>&, arma::Col<unsigned int>&) (Cluster.cpp:113)
    |     ->24.02% (7,208,160B) 0x54F305B: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Model.cpp:482)
    |       ->24.02% (7,208,160B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    |         ->24.02% (7,208,160B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    |           ->24.02% (7,208,160B) 0x403287: main (in /tmp/foo)
    |             
    ->12.01% (3,604,080B) 0x54C2781: std::__cxx11::list<arma::Mat<double>, std::allocator<arma::Mat<double> > >::operator=(std::__cxx11::list<arma::Mat<double>, std::allocator<arma::Mat<double> > > const&) (memory.hpp:81)
    | ->06.00% (1,802,040B) 0x54D6A7B: Gamma_Law::Gamma_Law(Gamma_Law const&) (Gamma_Law.cpp:79)
    | | ->06.00% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    | |   ->06.00% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |     ->06.00% (1,802,040B) 0x403227: main (in /tmp/foo)
    | |       
    | ->06.00% (1,802,040B) 0x54D6A8A: Gamma_Law::Gamma_Law(Gamma_Law const&) (Gamma_Law.cpp:80)
    |   ->06.00% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    |     ->06.00% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |       ->06.00% (1,802,040B) 0x403227: main (in /tmp/foo)
    |         
    ->07.21% (2,162,448B) 0x54BA939: arma::Mat<double>::init_warm(unsigned int, unsigned int) (memory.hpp:81)
    | ->06.00% (1,802,040B) 0x54DF454: Data::Data(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Mat_meat.hpp:1880)
    | | ->06.00% (1,802,040B) 0x54F184F: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->06.00% (1,802,040B) 0x403227: main (in /tmp/foo)
    | |     
    | ->01.20% (360,408B) 0x54F2F81: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Mat_meat.hpp:1880)
    | | ->01.20% (360,408B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    | |   ->01.20% (360,408B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    | |     ->01.20% (360,408B) 0x403287: main (in /tmp/foo)
    | |       
    | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
    | 
    ->06.00% (1,802,040B) 0x54D6CE1: Gamma_Law::Gamma_Law(Gamma_Law const&) (memory.hpp:81)
    | ->06.00% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    |   ->06.00% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |     ->06.00% (1,802,040B) 0x403227: main (in /tmp/foo)
    |       
    ->06.00% (1,802,040B) 0x54D6D19: Gamma_Law::Gamma_Law(Gamma_Law const&) (memory.hpp:81)
    | ->06.00% (1,802,040B) 0x54DA234: Variational::Variational(int, int, int) (stl_list.h:114)
    |   ->06.00% (1,802,040B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |     ->06.00% (1,802,040B) 0x403227: main (in /tmp/foo)
    |       
    ->04.80% (1,441,600B) 0x54E1229: arma::Mat<int>::init_warm(unsigned int, unsigned int) (memory.hpp:81)
    | ->04.80% (1,441,600B) 0x54DF7A6: Data::Data(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Mat_meat.hpp:1880)
    | | ->04.80% (1,441,600B) 0x54F184F: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->04.80% (1,441,600B) 0x403227: main (in /tmp/foo)
    | |     
    | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
    | 
    ->03.60% (1,081,424B) 0x54BA727: arma::Mat<double>::init_cold() (memory.hpp:81)
    | ->01.20% (360,408B) 0x54BCE6E: Gibbs_Law::Gibbs_Law(int, int, double) (Mat_meat.hpp:104)
    | | ->01.20% (360,408B) 0x54F18A6: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->01.20% (360,408B) 0x403227: main (in /tmp/foo)
    | |     
    | ->01.20% (360,408B) 0x54BD122: Gibbs_Law::Gibbs_Law(int, int, double) (Mat_meat.hpp:786)
    | | ->01.20% (360,408B) 0x54F18A6: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    | |   ->01.20% (360,408B) 0x403227: main (in /tmp/foo)
    | |     
    | ->01.20% (360,408B) 0x54F18F3: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Mat_meat.hpp:104)
    | | ->01.20% (360,408B) 0x403227: main (in /tmp/foo)
    | |   
    | ->00.00% (200B) in 1+ places, all below ms_print's threshold (01.00%)
    | 
    ->01.52% (457,262B) in 72 places, all below massif's threshold (1.00%)
    | 
    ->01.20% (360,408B) 0x54C8BC7: Multinomial_Law::Multinomial_Law(int, int) (memory.hpp:81)
    | ->01.20% (360,408B) 0x54DA154: Variational::Variational(int, int, int) (Variational.cpp:26)
    |   ->01.20% (360,408B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
    |     ->01.20% (360,408B) 0x403227: main (in /tmp/foo)
    |       
    ->01.20% (360,408B) 0x54EC235: Gaussian_Law::update_orthogonal(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Cube_meat.hpp:467)
    | ->01.20% (360,408B) 0x54EEF7A: Gaussian_Law::update(arma::Mat<double>&, arma::Col<double>&, arma::Mat<double>&) (Gaussian_Law.cpp:235)
    |   ->01.20% (360,408B) 0x54CE9F6: Cluster::update_M_step(arma::Mat<double>&, arma::Col<double>&, arma::Row<double>&, arma::Mat<double>&, arma::Mat<double>&, arma::Col<unsigned int>&) (Cluster.cpp:113)
    |     ->01.20% (360,408B) 0x54F305B: Model::em(unsigned int, bool, bool, unsigned int) [clone ._omp_fn.1] (Model.cpp:482)
    |       ->01.20% (360,408B) 0x7549CBD: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
    |         ->01.20% (360,408B) 0x54F0789: Model::em(unsigned int, bool, bool, unsigned int) (Model.cpp:458)
    |           ->01.20% (360,408B) 0x403287: main (in /tmp/foo)
    |             
    ->01.20% (360,408B) 0x54C9880: Multinomial_Law::Multinomial_Law(int, int) (memory.hpp:81)
      ->01.20% (360,408B) 0x54DA154: Variational::Variational(int, int, int) (Variational.cpp:26)
        ->01.20% (360,408B) 0x54F196E: Model::Model(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, double, int) (Model.cpp:69)
          ->01.20% (360,408B) 0x403227: main (in /tmp/foo)

    --------------------------------------------------------------------------------
      n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
    --------------------------------------------------------------------------------
     51  7,482,144,500       30,012,744       29,650,478       362,266            0
     52  7,527,267,325       30,012,744       29,650,478       362,266            0
     53  7,588,994,764       13,069,624       13,068,862           762            0
     54  7,816,339,169       13,067,992       13,067,254           738            0
     55  8,106,588,878       13,067,992       13,067,254           738            0
#+end_example

    Memory consumption \approx 30 MB
    Almost x10 bigger

    ALS footprint:
    #+begin_src R :results output :session :exports both
      nVoxels = 45051
      nDims = 5 * 5
      dType = 8
      Bytes = nDims * nVoxels * dType
      kB = Bytes / 1024
      orthMat = kB / 1024
      orthMat
    #+end_src

    #+RESULTS:
    : [1] 8.592796
    
*** 2018-10-22
**** Run from R
     #+begin_src sh :results output :exports both
       cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
       git checkout direct_data_loading
       make mrproper
       make -j7
     #+end_src

     #+begin_src R :results output :session :exports both
       library(Rcpp)
       setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R")
           
       lib = dyn.load("libRHmmMmst.so")
       mod = Rcpp::Module("model_module", lib)
       Model = mod$Model
       obs_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_val.csv"
       nei_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_meta.nei"
       model = Model$new("MMST", obs_path, nei_path, 3, 2.0, 10)
       model$initialization()
       model$em(1, TRUE, TRUE, 8)
     #+end_src

     #+RESULTS:
     #+begin_example
     initialization with a gmm model
     In ALS algorithm : max steps number (10) reached without convergence.
     In ALS algorithm : max steps number (10) reached without convergence.
     In ALS algorithm : max steps number (10) reached without convergence.
     em : step 0
       lower-bound E-step (+) : -1.39834e+06
     In ALS algorithm : max steps number (10) reached without convergence.
     In ALS algorithm : max steps number (10) reached without convergence.
     In ALS algorithm : max steps number (10) reached without convergence.
       lower-bound M-step (-) : -1.57734e+06
       lower-bound (+) : -1.57734e+06
#+end_example

***** DONE Probabilities initialization                                 :Bug:
      CLOSED: [2018-10-23 mar. 11:37]
      After running gmm to initialize the probabilities we get
      negative probabilities.
****** Comparison with former version
       #+begin_src sh :results output :exports both
         cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
         git checkout f1651b3cfef5caea5b16e4215e7b1e25f4d94cbd
         make mrproper
         make -j7
       #+end_src

       #+RESULTS:
       #+begin_example
       rm -f *.o
       rm -f *.so
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  ALS_CPC.cpp -o ALS_CPC.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gibbs_Law.cpp -o Gibbs_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Multinomial.cpp -o Multinomial.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  utils.cpp -o utils.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Cluster.cpp -o Cluster.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gamma_Law.cpp -o Gamma_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Variational.cpp -o Variational.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Data.cpp -o Data.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gaussian_Law.cpp -o Gaussian_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Model.cpp -o Model.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  RcppWrapper.cpp -o RcppWrapper.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Stiefel.cpp -o Stiefel.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Solver.cpp -o Solver.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
       g++ -std=c++11 -fopenmp -Wall -Wl,-Bsymbolic-functions -Wl,-z,relro -shared ALS_CPC.o Gibbs_Law.o Multinomial.o utils.o Cluster.o Gamma_Law.o Variational.o Data.o Gaussian_Law.o Model.o RcppWrapper.o Stiefel.o Solver.o -o libRHmmMmst.so -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
#+end_example

       #+begin_src R :results output :session :exports both
         library(Rcpp)
         setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R")

         lib = dyn.load("libRHmmMmst.so")
         mod = Rcpp::Module("model_module", lib)
         Model = mod$Model
         obs_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_val.csv"
         nei_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_meta.nei"

         obs = data.matrix( read.csv(obs_path)[2:6] )
         neis = data.matrix( read.csv(nei_path)[3:10] )
         n_neis = read.csv(nei_path)[["Neighbour_Count"]]

         model = Model$new("MMST", obs, 3, neis, n_neis, 2.0, 10)
         model$initialization( FALSE , matrix(data = 1 , nrow = 1 , ncol = 1) )
       #+end_src

       #+RESULTS:
       : initialization with a gmm model
       :   -28.1756  -31.5454  -26.3483
       : 
       :   -33.5424  -32.9332  -31.9444
       : 
       : In ALS algorithm : max steps number (10) reached without convergence.
       : In ALS algorithm : max steps number (10) reached without convergence.
       : In ALS algorithm : max steps number (10) reached without convergence.

       A part of the code was missing...
*** 2018-10-23
**** DONE Number of rows neighbour count doesn't match the number of row in neighbourhood :Bug:
     CLOSED: [2018-10-23 mar. 11:52]
     #+begin_src sh :results output :exports both
       cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
       git checkout direct_data_loading
       make mrproper
       make -j7
     #+end_src

     #+RESULTS:
     #+begin_example
     M	Code_R/Data.cpp
     rm -f *.o
     rm -f *.so
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  ALS_CPC.cpp -o ALS_CPC.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gibbs_Law.cpp -o Gibbs_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Multinomial.cpp -o Multinomial.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  utils.cpp -o utils.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Cluster.cpp -o Cluster.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gamma_Law.cpp -o Gamma_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Variational.cpp -o Variational.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Data.cpp -o Data.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gaussian_Law.cpp -o Gaussian_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Model.cpp -o Model.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  RcppWrapper.cpp -o RcppWrapper.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Stiefel.cpp -o Stiefel.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Solver.cpp -o Solver.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
     g++ -std=c++11 -fopenmp -Wall -Wl,-Bsymbolic-functions -Wl,-z,relro -shared ALS_CPC.o Gibbs_Law.o Multinomial.o utils.o Cluster.o Gamma_Law.o Variational.o Data.o Gaussian_Law.o Model.o RcppWrapper.o Stiefel.o Solver.o -o libRHmmMmst.so -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
#+end_example

     #+begin_src R :results output :session :exports both
       library(Rcpp)
       setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R")
           
       lib = dyn.load("libRHmmMmst.so")
       mod = Rcpp::Module("model_module", lib)
       Model = mod$Model
       obs_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_val.csv"
       nei_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_meta.nei"
       model = Model$new("MMST", obs_path, nei_path, 3, 2.0, 10)
       model$initialization()
     #+end_src
     
     Data was not load correctly. The index to load the first row of
     the submatrix was incorrect.
**** Quick look at R memory management
     #+begin_src R :results output :session :exports both
       library(pryr)

       mem_used()
       m = matrix(nrow=1024*1024*1024, ncol=1)
       object_size(m)
       mem_used()
     #+end_src

     #+RESULTS:
     : 4.32 GB
     : 4.29 GB
     : 4.32 GB

     #+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 600 :session
       n_elem = 64
       # sizes <- sapply(0:n_elem, function(n) object_size(seq_len(n)))
       sizes <- sapply(0:n_elem, function(n) object_size(double(n)))
       plot(0:n_elem, sizes, xlab = "Length", ylab = "Size (bytes)", 
            type = "s")
     #+end_src

     #+RESULTS:
     [[file:/tmp/babel-585vqt/figure585CBR.png]]

     #+begin_src R :results output graphics :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 600 :session
       plot(0:n_elem, sizes - 40, xlab = "Length", 
            ylab = "Bytes excluding overhead", type = "n")
       abline(h = 0, col = "grey80")
       abline(h = c(8, 16, 32, 48, 64, 128), col = "grey80")
       abline(a = 0, b = 4, col = "grey90", lwd = 4)
       lines(sizes - 40, type = "s")
     #+end_src

     #+RESULTS:
     [[file:/tmp/babel-585vqt/figure585pfj.png]]

***** Memory consumption of =hmrf_estimate=
      #+begin_src sh :results output :exports both
        cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
        git checkout f1651b3cfef5caea5b16e4215e7b1e25f4d94cbd
        make mrproper
        make -j7
      #+end_src

      #+RESULTS:
      #+begin_example
      rm -f *.o
      rm -f *.so
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  ALS_CPC.cpp -o ALS_CPC.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gibbs_Law.cpp -o Gibbs_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Multinomial.cpp -o Multinomial.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  utils.cpp -o utils.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Cluster.cpp -o Cluster.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gamma_Law.cpp -o Gamma_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Variational.cpp -o Variational.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Data.cpp -o Data.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Gaussian_Law.cpp -o Gaussian_Law.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Model.cpp -o Model.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  RcppWrapper.cpp -o RcppWrapper.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Stiefel.cpp -o Stiefel.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -fPIC -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -c -I/usr/share/R//include -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/include/ -I/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/include  Solver.cpp -o Solver.o -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
      g++ -std=c++11 -fopenmp -Wall -Wl,-Bsymbolic-functions -Wl,-z,relro -shared ALS_CPC.o Gibbs_Law.o Multinomial.o utils.o Cluster.o Gamma_Law.o Variational.o Data.o Gaussian_Law.o Model.o RcppWrapper.o Stiefel.o Solver.o -o libRHmmMmst.so -llapack -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/Rcpp/libs -lRcpp -L/scratch/squinito/R_libs/x86_64-pc-linux-gnu-library/3.4/RcppArmadillo/libs -lgsl -lm -lrcpparmadillo 
#+end_example

      #+begin_src R :results output :session :exports both
        library(pryr)
        library(Rcpp)

        setwd("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R")

        mem_used()

        lib = dyn.load("libRHmmMmst.so")
        mod = Rcpp::Module("model_module", lib)
        Model = mod$Model
        obs_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_val.csv"
        nei_path = "tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_meta.nei"

        obs = data.matrix( read.csv(obs_path)[2:6] )
        neis = data.matrix( read.csv(nei_path)[3:10] )
        n_neis = read.csv(nei_path)[["Neighbour_Count"]]

        obs = data.matrix( read.csv(obs_path)[2:6] )
        neis = data.matrix( read.csv(nei_path)[3:10] )
        n_neis = read.csv(nei_path)[["Neighbour_Count"]]
        
        object_size(obs) + object_size(neis) + object_size(n_neis)

        model = Model$new("MMST", obs, 3, neis, n_neis, 2.0, 10)
        model$initialization( FALSE , matrix(data = 1 , nrow = 1 , ncol = 1) )

        object_size(model)

        model$em(2, TRUE, TRUE, 8)

        object_size(model)

        mem_used()
      #+end_src

      #+RESULTS:
      #+begin_example
      39.9 MB
      3.43 MB
      initialization with a gmm model
      In ALS algorithm : max steps number (10) reached without convergence.
      In ALS algorithm : max steps number (10) reached without convergence.
      In ALS algorithm : max steps number (10) reached without convergence.
      3.23 MB
      em : step 0
        lower-bound E-step (+) : -1.39306e+06
      In ALS algorithm : max steps number (10) reached without convergence.
      In ALS algorithm : max steps number (10) reached without convergence.
      In ALS algorithm : max steps number (10) reached without convergence.
        lower-bound M-step (-) : -1.5897e+06
        lower-bound (+) : -1.5897e+06
      em : step 1
        lower-bound E-step (+) : -1.4468e+06
      In ALS algorithm : max steps number (10) reached without convergence.
      In ALS algorithm : max steps number (10) reached without convergence.
      In ALS algorithm : max steps number (10) reached without convergence.
        lower-bound M-step (-) : -1.53457e+06
        lower-bound (+) : -1.53457e+06
      3.23 MB
      45.1 MB
#+end_example

***** Big artificial dataset
      Lets build the dataset:
      #+begin_src R :results output :session :exports both
        library(MASS)
        library(pryr)
        library(plyr)

                                                # nx = 256
                                                # ny = 256
                                                # nz = 128
        nx = 256
        ny = 256
        nz = 128
        n_patient = 10
        n_obs = nx * ny * nz * n_patient
        n_dim = 3
        n_clusters = 3

        patient_names = paste(rep("P", n_patient), 
                              seq(n_patient),
                              sep = "")
        df = data.frame(Patient = rep(patient_names, each=nx * ny * nz),
                        Coord_X = integer(n_obs),
                        Coord_Y = integer(n_obs),
                        Coord_Z = integer(n_obs),
                        ADC = numeric(n_obs),
                        CBV = numeric(n_obs),
                        AUC = numeric(n_obs)
                        )

        cluster_means = list()
                                                # simulate cluster means
        for( k in 1:n_clusters){
            cluster_means[[k]] = runif(n_dim, 0, 10)
        }

        cluster_covs = list()
                                                # simulate cluster covariances
        for( k in 1:n_clusters){
            cluster_covs[[k]] = diag(n_dim)
        }

                                                # simulate the labels
        labels <- rmultinom(n = 1, size = n_obs, prob = rep(x = 1, times = n_clusters))

                                                # generate observations values from the labels
        obs <- lapply(X = seq_len(length.out = n_clusters), 
                      FUN = function(k) {
                          mvrnorm(n = labels[ k ], mu = cluster_means[[ k ]], Sigma = cluster_covs[[ k ]])
                      })

                                                # Concatenate observations
        obs <- array(data = sapply(X = seq_len(length.out = n_dim), 
                                   FUN = function(m) {
                                       res <- lapply(X = obs, FUN = function(x) {
                                           x[ , m]
                                       } )
                                       unlist( res )
                                   } ), 
                     dim = c(n_obs, n_dim)
                     )

        df[,c("ADC", "CBV", "AUC")] = obs

        # build coordinates
        df$Coord_X = rep(0:(nx-1), ny * nz )
        df$Coord_Y = rep(0:(ny-1), each = ny)
        df$Coord_Z = rep(0:(nz-1), each = ny * nx)

        object_size(df)

        write.csv(df, "/scratch/squinito/Dev/Data/dataset.csv",  row.names = FALSE)
      #+end_src

      #+RESULTS:
      : 
      : 3.36 GB

***** Loading big csv in R
     When reading big file =read.table= and others tend to consume a
     lot of memory.
     Specifying the data type for each column limit the memory
     consumption of =read.table= and others:
     #+begin_src R :results output :session :exports both
     library(pryr)
     
     mem_used()
     df = read.csv("/scratch/squinito/Dev/Data/dataset.csv", colClasses=c("character", "integer", "integer", "integer", "numeric", "numeric", "numeric"))
     mem_used()
     #+end_src

     Maybe this can help with veronica's memory problem.

     =read.table= manual point out that storing data in matrices is
     more efficient and I think also we should re-think the way we
     are storing data.
*** 2018-10-26
**** TODO Scaling neighbourhood building
     Currently the python script get stuck when running on large csv file.
      #+begin_src sh :results output :exports both
        cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
        ./preprocess.py --files="/scratch/squinito/Dev/Data/dataset.csv" --val_physio_names="ADC,CBV,AUC" --val_physio="-100,100,-100,100,-100,100"
      #+end_src
     
***** DONE Rewrite clearly =preprocess.py=
      CLOSED: [2018-10-29 lun. 14:17]
      Finish the rewriting started when looking for a bug in
      preprocess.py.
      I think it is important because the current version is not
      clean neither clear and lack of flexibility.
      
      Test:
       #+begin_src sh :results output :exports both
        cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
        ./preprocess.py --files="tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016.csv" --val_physio_names="ADC,CBV,AUC,T1map,T2map" --val_physio="-1e9,1e9,-1e9,1e9,-1e9,1e9,-1e9,1e9,-1e9,1e9"
       #+end_src

       #+RESULTS:
       : Preprocessing tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016.csv

        #+BEGIN_SRC python  :results output :session :exports both
          import numpy as np
          import pandas as pd
          import cv2 as cv

          df = pd.read_csv("/home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R/tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016_meta.csv")

          fischer1 = df[(df.Patient_Idx == 2) & (df.Slice == 2)]

          offset = fischer1.iloc[0].Reduced_Idx

          image_bgr = np.zeros((128,128,3), dtype=np.uint8)

          color_code = [[128,255,128],
                        [0,0,255],
                        [0,255,0],
                        [255,0,0],
                        [0,255,255],
                        [255,0,255],
                        [255,255,0],
                        [255,255,127],
                        [255,255,255]]

          for index, voxel in fischer1.iterrows():
              image_bgr[voxel["Coord_X"],voxel["Coord_Y"]] = color_code[ voxel["Neighbour_Count"] ]

          cv.imwrite("/tmp/test2.jpg", image_bgr, [int(cv.IMWRITE_JPEG_QUALITY), 120])

        #+END_SRC

        #+RESULTS:
        : 
        : >>> >>> >>> >>> >>> >>> >>> >>> >>> >>> >>> ... ... ... ... ... ... ... ... >>> >>> ... ... >>> True

***** DONE Accelerate the processing
      CLOSED: [2018-10-29 lun. 15:57]
      Without further profiling of the script I assumed that the
      slowest part is the function =gen_nghd_second= because we have a
      for loop over all the voxels and for each voxel we make several
      searches in the data frame. Other parts of the script don't seem
      as expensive.

      Native for python loops are generally slow so I tried to use the
      =apply= method from pandas. One problem with apply is that it
      doesn't perform in place modification and we have to go through
      a memory copy which might increase the memory usage.
      
      - Version using apply on a dataset of 45051 voxels:
        #+begin_src sh :shebang "#!/bin/bash" :results output :exports both
          cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
          time ./preprocess.py --files="tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016.csv" --val_physio_names="ADC,CBV,AUC,T1map,T2map" --val_physio="-1e9,1e9,-1e9,1e9,-1e9,1e9,-1e9,1e9,-1e9,1e9"
        #+end_src

        #+RESULTS:
        : real	2m47.231s
        : user	2m45.288s
        : sys	0m0.292s

      - Version using loops on the same dataset:
        #+begin_src sh :shebang "#!/bin/bash" :results output :exports both
          cd /home/squinito/Dev/MISTIS/MMST_with_Markov_Random_Field/Code_R
          time ./preprocess.py --files="tests/unit_tests/Neighbouhood/Rats_Sain_-_Brain_-_Lemasson_2016.csv" --val_physio_names="ADC,CBV,AUC,T1map,T2map" --val_physio="-1e9,1e9,-1e9,1e9,-1e9,1e9,-1e9,1e9,-1e9,1e9"
        #+end_src

        #+RESULTS:
        : real	9m23.543s
        : user	9m21.216s
        : sys	0m0.268s

        Speed-up:
        #+begin_src R :results output :session :exports both
          v1 = 2 * 60 + 47
          v2 = 9 * 60 + 23 
          v2 / v1
        #+end_src

        #+RESULTS:
        : [1] 3.371257
      
***** Memory usage
      Turns out this works only for small dataset but for bigger one
      the program seems to stop because it uses to much memory.
      Here a study of the memory usage of the program.

      The script =preprocess.py= is run with input file of different
      file to follow the consumption of the program. mprof is used to
      profile the memory consumption over the time.
      
      Here are the different results for the different data size:
      - 45051 voxels using for loops methods
        #+RESULTS:
      [[file:/home/squinito/Dev/MISTIS/Brain-MRI/org/img/memory_profiling/python/building_neighbourhood/fp_loops_no_copy.png]]

      - 45051 voxels using apply
        #+RESULTS:
 [[file:/home/squinito/Dev/MISTIS/Brain-MRI/org/img/memory_profiling/python/building_neighbourhood/fp_apply_and_copy.png]]    

      - 256 * 256 * 128 * 5 voxels
        At the end we can see a peak in the memory consumption, this
        when the program crashes.
        #+RESULTS:
 [[file:/home/squinito/Dev/MISTIS/Brain-MRI/org/img/memory_profiling/python/building_neighbourhood/fp_apply_and_copy_256_256_128_5.png]]

***** TODO Bottleneck
    - [ ] Identify the bottleneck \to where is the actual problem?

*** 2018-10-30
**** Function pointers-based design
     #+BEGIN_SRC C++ :includes <iostream>
       using namespace std;

       class Param{};

       class Integer: public Param{
       public:
           int value;
       };

       class Model{
       public:
           Param* param;
           void (*E)(Param*) = NULL; 
           void (*M)(Param*) = NULL; 
           
           Model(Param* param, void (*E)(Param*), void (*M)(Param*)){
               this->param = param;
               this->E = E;
               this->M = M;
           }

           void EM(){
               E(param);
               M(param);
           }
       };

       // Model Code
       void E(Param* foo){
           Integer* p = (Integer*) foo;
           cout << p->value << endl;
       }

       void M(Param* foo){
           Integer* p = (Integer*) foo;
           cout << p->value << endl;
       }

       int main(){
           Param* p = new Integer();
           Model m(p, &E,&M);
           m.EM();

           return 0;
       }
     #+END_SRC

     #+RESULTS:
     | 0 |
     | 0 |

     Gave a try to plantuml to model an architecture:
     #+BEGIN_SRC plantuml :file /tmp/pointer_design.png
     class Model{
         +Param param
         +Model(Param* param, void (*E)(Param*), void (*M)(Param*))
         +void (*E)(Param p)
         +void (*M)(Param p)
         +void EM()  
     }
     
     abstract class Param{
     }

     class Data{
         +int n_obs
         +mat observations
     }

     class Spatial_Data{ 
         +vec neighbour_count
         +mat neighbours
     }

     Param <|-- Data

     Data <|-- Spatial_Data

     Model .. Param
     #+END_SRC

     #+RESULTS:
     [[file:/tmp/pointer_design.png]]

** November
*** 2018-11-05
**** Calling parent destructor
     Parent destructor is called implicitly but it should be virtual
     when using polym
     #+BEGIN_SRC C++ :includes <iostream>
       using namespace std;
       class A{
       public:
           virtual ~A(){
               cout << "A" << endl;
           }
       };

       class B: public A{
       public:
           virtual ~B(){
               cout << "B" << endl;
           }
       };

       int main(){
           A* b = new B();
           delete b;
           return 0;
       }
     #+END_SRC

     #+RESULTS:
     | B |
     | A |

**** Constructors
     #+BEGIN_SRC C++ :includes <iostream>
       using namespace std;

       class A{
       public:
           A(int x){
               cout << "A" << endl;
           }
           ~A(){
               cout << "~A" << endl;
           }
       };

       class B: public A{
       public:
           B(int x): A(x){
               cout << "B" << endl;
           }
           ~B(){
               cout << "~B" << endl;
           }
       };

       int main(){
           B* b = new B(10);
           delete b;

           return 0;
       }
     #+END_SRC

     #+RESULTS:
     | A  |
     | B  |
     | ~B |
     | ~A |

**** Armadillo matrix construct from copy
     #+BEGIN_SRC C++ :includes <iostream> :includes <armadillo> :flags -I/scratch/squinito/Tools/armadillo-code/include :libs -L/scratch/squinito/Tools/armadillo-code/lib/lib larmadillo
       using namespace std;     
       using namespace arma;     

       class A{
       public:
           Mat<double> m;
           A(Mat<double>& m): m(m){
           }
       };

       class B: public A{
       public:
           B(Mat<double> m): A(m){}
       };

       class C: public B{
       public:
           C(Mat<double> m): B(m){}
       };


       mat m1(9,9);
       C a(m1);

       cout << m1 << endl;
       cout << a.m << endl;
     #+END_SRC

     #+RESULTS:
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     |   |   |   |   |   |   |   |   |   |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |

*** 2018-11-06
**** Calling mother constructor and initializing other variable
     #+BEGIN_SRC C++ :includes <iostream>
       using namespace std;

       class C{
       public:
           int y;
           C(int y): y(y){}
       };

       class A{
       public:
           C c1;
           A(int x): c1(x){}
       };

       class B: public A{
       public:
           C c2;
           B(int c1, int c2): A(c1), c2(c2){}
       };

       B b(3,8);

       cout << b.c1.y << endl;
       cout << b.c2.y << endl;
     #+END_SRC

     #+RESULTS:
     | 3 |
     | 8 |

*** 2018-11-09
**** TODO Take a look a pqR
     When the most important stuff will be done.
     http://www.pqr-project.org/
*** 2018-11-12
**** TODO Think about a Solver class hierarchy
     Each solver specification could be used the same way. For example
     the class Gaussian could use different type of solver the how it
     is used could be only describe in the class =Gaussian_Law=. 
     How the solver can be used:
     1. Create the solver
     2. Init the solver
     3. Minimize

*** 2018-11-16
**** Debug (GDB) R + C++                                               :Tips:
     1. attach <R pid>
     2. signal 0 \to stop gdb from blocking R process
**** TODO Remote connection with mac
     DEADLINE: <2018-12-10 lun.>
*** 2018-11-19
**** Valgrind                                                          :Tips:
     source: http://valgrind.org/docs/manual/manual-core-adv.html

     In terminal 1:
     #+begin_src sh :results output :exports both
     valgrind --tool=memcheck --vgdb=yes --vgdb-error=0 prog
     #+end_src

     In terminal 2:
     #+begin_src R :results output :session :exports both
       gdb prog

       (gdb) target remote | vgdb
     #+end_src
**** Pointers and copy constructors
     I finally found why I had segfault when destructors call free or delete
     on pointers. When we make copy of an object is made, all the
     pointers of the copy points to the same memory addresses of the
     original object. Thus when the destructor is called free / delete
     is called as many time as there are copy on the same memory
     addresses. So we need to define a copy constructor which doesn't
     copy the pointers addresses but alloc new memory and copy values.
**** What kind of polymorphism without pointers?
     #+BEGIN_SRC C++
       #include <iostream>
       #include <vector>

       using namespace std;

       class Animal {
       public:
           virtual void speak() {
               cout << "Animal speaking..." << endl;
           };
       };

       class Cat : public Animal {
       public:
           virtual void speak(){
               cout << "Meow!" << endl;
           }
       };

       class Dog : public Animal {
       public:
           virtual void speak(){
               cout << "Wof!" << endl;
           }
       };

       class Duck : public Animal {
       public:
           virtual void speak(){
               cout << "Coin coin!" << endl;
           }
       };

       int main(){
           vector< Animal& > zoo;
           zoo.push_back(Duck());
           zoo[0].speak();

           return 0;
       }
     #+END_SRC

     #+RESULTS:

** December
*** 2018-12-12
**** Julia update
     Today trying new julia version to see if data frame and csv are
     faster than before and see if petk still works.
     Previous version (tag): v0.6.2     
     Commit ID: d386e40c17d43b79fc89d3e579fc04547241787c
     #+begin_src sh :session foo :results output :exports both
       cd /scratch/squinito/Tools/julia
       git log -n 1
     #+end_src

     #+RESULTS:
     : commit d386e40c17d43b79fc89d3e579fc04547241787c
     : Author: Alex Arslan <ararslan@comcast.net>
     : Date:   Wed Dec 13 10:08:26 2017 -0800
     : 
     :     Tag version v0.6.2 (#24993)
     
     Get changes:
     #+begin_src sh :session foo :results output :exports both
       git fetch
     #+end_src

     #+BEGIN_EXAMPLE
     remote: Enumerating objects: 7383, done.
     remote: Counting objects: 100% (7383/7383), done.
     remote: Compressing objects: 100% (52/52), done.
     remote: Total 23143 (delta 7354), reused 7343 (delta 7331), pack-reused 15760
     Réception d'objets: 100% (23143/23143), 14.76 MiB | 1.95 MiB/s, fait.
     Résolution des deltas: 100% (17273/17273), complété avec 1358 objets locaux.
     Depuis git://github.com/JuliaLang/julia
     * [nouvelle branche] KristofferC-patch-3 -> origin/KristofferC-patch-3
     * [nouvelle branche] KristofferC-patch-4 -> origin/KristofferC-patch-4
     * [nouvelle branche] KristofferC-patch-5 -> origin/KristofferC-patch-5
     * [nouvelle branche] KristofferC-patch-6 -> origin/KristofferC-patch-6
     * [nouvelle branche] KristofferC-patch-7 -> origin/KristofferC-patch-7
     * [nouvelle branche] aa/1.1.0-rc1 -> origin/aa/1.1.0-rc1
     * [nouvelle branche] aa/1.2.0-DEV -> origin/aa/1.2.0-DEV
     * [nouvelle branche] aa/aggressive-remove_linenums -> origin/aa/aggressive-remove_linenums
     * [nouvelle branche] aa/dotted-tilde -> origin/aa/dotted-tilde
     * [nouvelle branche] aa/extrema-function -> origin/aa/extrema-function
     * [nouvelle branche] aa/glibc   -> origin/aa/glibc
     * [nouvelle branche] aa/join-function -> origin/aa/join-function
     * [nouvelle branche] aa/peek-a-boo -> origin/aa/peek-a-boo
     * [nouvelle branche] ajf/view-of-range -> origin/ajf/view-of-range
     * [nouvelle branche] amp-ref    -> origin/amp-ref
     * [nouvelle branche] an/I       -> origin/an/I
     * [nouvelle branche] an/In      -> origin/an/In
     * [nouvelle branche] anj/nosuitesparse -> origin/anj/nosuitesparse
     * [nouvelle branche] backport-1.0.3 -> origin/backport-1.0.3
     * [nouvelle branche] backport-1.1.0 -> origin/backport-1.1.0
     * [nouvelle branche] breakmore  -> origin/breakmore
     * [nouvelle branche] cjf/fpe-exceptions -> origin/cjf/fpe-exceptions
     * [nouvelle branche] cjf/line-continuation -> origin/cjf/line-continuation
     * [nouvelle branche] cjf/show-exception-stacks -> origin/cjf/show-exception-stacks
     * [nouvelle branche] fe/default-environment -> origin/fe/default-environment
     * [nouvelle branche] fe/loggerstream -> origin/fe/loggerstream
     * [nouvelle branche] fe/numbered-docs -> origin/fe/numbered-docs
     * [nouvelle branche] gpu-broadcast -> origin/gpu-broadcast
     * [nouvelle branche] jb/06_compiler_perf -> origin/jb/06_compiler_perf
     * [nouvelle branche] jb/anyeltype -> origin/jb/anyeltype
     * [nouvelle branche] jb/arraygcperf -> origin/jb/arraygcperf
     * [nouvelle branche] jb/codeinfostuff -> origin/jb/codeinfostuff
     * [nouvelle branche] jb/convertmissingnothing -> origin/jb/convertmissingnothing
     * [nouvelle branche] jb/fix29059 -> origin/jb/fix29059
     * [nouvelle branche] jb/fix29501 -> origin/jb/fix29501
     * [nouvelle branche] jb/fix29594 -> origin/jb/fix29594
     * [nouvelle branche] jb/fix30335 -> origin/jb/fix30335
     * [nouvelle branche] jb/fix30346 -> origin/jb/fix30346
     * [nouvelle branche] jb/jr/tuplelattice -> origin/jb/jr/tuplelattice
     * [nouvelle branche] jb/latency10 -> origin/jb/latency10
     * [nouvelle branche] jb/latency3 -> origin/jb/latency3
     * [nouvelle branche] jb/modprefixshow -> origin/jb/modprefixshow
     * [nouvelle branche] jb/printfbuf -> origin/jb/printfbuf
     * [nouvelle branche] jb/warnmissingcode -> origin/jb/warnmissingcode
     * [nouvelle branche] jn/29872-compare -> origin/jn/29872-compare
     * [nouvelle branche] jn/30344   -> origin/jn/30344
     * [nouvelle branche] jn/channel-mt -> origin/jn/channel-mt
     + 50be707...98bcab7 jn/codegen-norecursion -> origin/jn/codegen-norecursion  (mise à jour forcée)
     * [nouvelle branche] jn/condition-mt -> origin/jn/condition-mt
     * [nouvelle branche] jn/fixup-pty-and-precompile -> origin/jn/fixup-pty-and-precompile
     * [nouvelle branche] jn/gc-pool-lazy -> origin/jn/gc-pool-lazy
     + da9451a...f968d44 jn/infer-Const-cache -> origin/jn/infer-Const-cache  (mise à jour forcée)
     * [nouvelle branche] jn/iocolor2 -> origin/jn/iocolor2
     * [nouvelle branche] jn/loading-plus -> origin/jn/loading-plus
     * [nouvelle branche] jn/loading-refactoring -> origin/jn/loading-refactoring
     * [nouvelle branche] jn/loading-refactoring-docs -> origin/jn/loading-refactoring-docs
     * [nouvelle branche] jn/localize-multiversioning -> origin/jn/localize-multiversioning
     * [nouvelle branche] jn/lower-inline_cost_threshold -> origin/jn/lower-inline_cost_threshold
     * [nouvelle branche] jn/ml-match-opt -> origin/jn/ml-match-opt
     * [nouvelle branche] jn/release0.6-26833 -> origin/jn/release0.6-26833
     * [nouvelle branche] jn/update-precompile-heuristic -> origin/jn/update-precompile-heuristic
     * [nouvelle branche] jr/betterspoof -> origin/jr/betterspoof
     * [nouvelle branche] jr/cinfoworldbounds -> origin/jr/cinfoworldbounds
     * [nouvelle branche] jr/cinfoworldboundstmp -> origin/jr/cinfoworldboundstmp
     * [nouvelle branche] jr/compiledebug -> origin/jr/compiledebug
     * [nouvelle branche] jr/doasyouaretold -> origin/jr/doasyouaretold
     * [nouvelle branche] jr/ptupleprop -> origin/jr/ptupleprop
     * [nouvelle branche] jr/testlog -> origin/jr/testlog
     * [nouvelle branche] jr/tmp2    -> origin/jr/tmp2
     * [nouvelle branche] jr/tupleconst -> origin/jr/tupleconst
     * [nouvelle branche] jr/tuplekindtypefix -> origin/jr/tuplekindtypefix
     * [nouvelle branche] jr/tuplelatticeold -> origin/jr/tuplelatticeold
     * [nouvelle branche] jr/wip     -> origin/jr/wip
     * [nouvelle branche] kc/JULIA_ENV -> origin/kc/JULIA_ENV
     * [nouvelle branche] kc/anonymous -> origin/kc/anonymous
     * [nouvelle branche] kc/break_linalg -> origin/kc/break_linalg
     * [nouvelle branche] kc/codepoint_to_utf8 -> origin/kc/codepoint_to_utf8
     * [nouvelle branche] kc/copyto_inline -> origin/kc/copyto_inline
     * [nouvelle branche] kc/debug_partr_precompile -> origin/kc/debug_partr_precompile
     * [nouvelle branche] kc/debug_precompile -> origin/kc/debug_precompile
     * [nouvelle branche] kc/ggwp    -> origin/kc/ggwp
     * [nouvelle branche] kc/ident   -> origin/kc/ident
     * [nouvelle branche] kc/immut_dict -> origin/kc/immut_dict
     * [nouvelle branche] kc/inline_print -> origin/kc/inline_print
     * [nouvelle branche] kc/loading_debug_error -> origin/kc/loading_debug_error
     * [nouvelle branche] kc/ohnohedidn -> origin/kc/ohnohedidn
     * [nouvelle branche] kc/online_with_the_rest -> origin/kc/online_with_the_rest
     * [nouvelle branche] kc/parse_simple -> origin/kc/parse_simple
     * [nouvelle branche] kc/perf_ident -> origin/kc/perf_ident
     * [nouvelle branche] kc/precomp_pkg3 -> origin/kc/precomp_pkg3
     * [nouvelle branche] kc/precompile_overhead -> origin/kc/precompile_overhead
     * [nouvelle branche] kc/relax_strided_sparse_matmul -> origin/kc/relax_strided_sparse_matmul
     * [nouvelle branche] kc/robustness -> origin/kc/robustness
     * [nouvelle branche] kc/search_str_perf -> origin/kc/search_str_perf
     * [nouvelle branche] kc/seed_fast -> origin/kc/seed_fast
     * [nouvelle branche] kc/simpler_copyto -> origin/kc/simpler_copyto
     * [nouvelle branche] kc/so_long_and_thanks_for_the_packages -> origin/kc/so_long_and_thanks_for_the_packages
     * [nouvelle branche] kc/split_testhelpers -> origin/kc/split_testhelpers
     * [nouvelle branche] kc/stdlib_loadpath_buildtest -> origin/kc/stdlib_loadpath_buildtest
     * [nouvelle branche] kc/test    -> origin/kc/test
     * [nouvelle branche] kf/_apply_apply_type -> origin/kf/_apply_apply_type
     * [nouvelle branche] kf/assertegal -> origin/kf/assertegal
     + b4f9f48...796812b kf/bigsroa -> origin/kf/bigsroa  (mise à jour forcée)
     * [nouvelle branche] kf/cfgsimp -> origin/kf/cfgsimp
     * [nouvelle branche] kf/cfgwip  -> origin/kf/cfgwip
     * [nouvelle branche] kf/clangsa -> origin/kf/clangsa
     * [nouvelle branche] kf/cmdlineargstimeout -> origin/kf/cmdlineargstimeout
     * [nouvelle branche] kf/codegen -> origin/kf/codegen
     * [nouvelle branche] kf/codetypedconst -> origin/kf/codetypedconst
     * [nouvelle branche] kf/effectfree2 -> origin/kf/effectfree2
     * [nouvelle branche] kf/eps     -> origin/kf/eps
     * [nouvelle branche] kf/inferencecomplexity -> origin/kf/inferencecomplexity
     * [nouvelle branche] kf/jb/rm_deps_3 -> origin/kf/jb/rm_deps_3
     * [nouvelle branche] kf/jn/26512 -> origin/kf/jn/26512
     * [nouvelle branche] kf/llvmpasstests -> origin/kf/llvmpasstests
     * [nouvelle branche] kf/newoptselectvalue -> origin/kf/newoptselectvalue
     * [nouvelle branche] kf/pzip    -> origin/kf/pzip
     * [nouvelle branche] kf/refactortodo -> origin/kf/refactortodo
     * [nouvelle branche] kf/reinterpretredux -> origin/kf/reinterpretredux
     * [nouvelle branche] kf/tpu     -> origin/kf/tpu
     * [nouvelle branche] kf/tpu2    -> origin/kf/tpu2
     * [nouvelle branche] kf/tpu3    -> origin/kf/tpu3
     * [nouvelle branche] kf/uncolon -> origin/kf/uncolon
     * [nouvelle branche] kf/unionpenalties -> origin/kf/unionpenalties
     * [nouvelle branche] kf/unionsplit2 -> origin/kf/unionsplit2
     * [nouvelle branche] kf/wasm    -> origin/kf/wasm
     * [nouvelle branche] kf/wip     -> origin/kf/wip
     * [nouvelle branche] kp/old_partr -> origin/kp/old_partr
     + d31578f...70b4852 kp/partr   -> origin/kp/partr  (mise à jour forcée)
     * [nouvelle branche] kp/schedtask -> origin/kp/schedtask
     * [nouvelle branche] ksh/basicstring -> origin/ksh/basicstring
     * [nouvelle branche] ksh/docmacros -> origin/ksh/docmacros
     * [nouvelle branche] ksh/lineup -> origin/ksh/lineup
     * [nouvelle branche] ksh/nt     -> origin/ksh/nt
     * [nouvelle branche] ksh/nwaiter -> origin/ksh/nwaiter
     c0e6b5b..f49cb42  master     -> origin/master
     * [nouvelle branche] mb/cartesiansubarray -> origin/mb/cartesiansubarray
     * [nouvelle branche] mb/doctake! -> origin/mb/doctake!
     * [nouvelle branche] mb/remotehashall -> origin/mb/remotehashall
     * [nouvelle branche] mb/reverseunsignedrange -> origin/mb/reverseunsignedrange
     * [nouvelle branche] mb/sparsefinders -> origin/mb/sparsefinders
     * [nouvelle branche] mb/stridedtransposes -> origin/mb/stridedtransposes
     + 2359f32...7a1a7d4 mb/thisshouldhaveoccurredtome -> origin/mb/thisshouldhaveoccurredtome  (mise à jour forcée)
     * [nouvelle branche] mb/unaliascopy-reinterprets -> origin/mb/unaliascopy-reinterprets
     * [nouvelle branche] mb/value-based-BroadcastStyle -> origin/mb/value-based-BroadcastStyle
     * [nouvelle branche] mb/whisperdownthelane -> origin/mb/whisperdownthelane
     * [nouvelle branche] mh/divrem_u128_i686 -> origin/mh/divrem_u128_i686
     * [nouvelle branche] mh/specialize_similar_for -> origin/mh/specialize_similar_for
     * [nouvelle branche] mh/tmerge_to_union_more_often -> origin/mh/tmerge_to_union_more_often
     * [nouvelle branche] mji/zygote -> origin/mji/zygote
     * [nouvelle branche] nl/fpsort  -> origin/nl/fpsort
     * [nouvelle branche] nl/length  -> origin/nl/length
     * [nouvelle branche] nl/mapreducedim -> origin/nl/mapreducedim
     * [nouvelle branche] nl/mbedtls -> origin/nl/mbedtls
     * [nouvelle branche] nl/sleep   -> origin/nl/sleep
     93168a6..7711781  release-0.6 -> origin/release-0.6
     * [nouvelle branche] release-0.7 -> origin/release-0.7
     * [nouvelle branche] release-1.0 -> origin/release-1.0
     * [nouvelle branche] release-1.1 -> origin/release-1.1
     * [nouvelle branche] revert-26854-kc/bump_pkg3_6 -> origin/revert-26854-kc/bump_pkg3_6
     * [nouvelle branche] revert-28319-kc/precompiler_build2 -> origin/revert-28319-kc/precompiler_build2
     * [nouvelle branche] revert-29494-kf/uncolon_recursion -> origin/revert-29494-kf/uncolon_recursion
     + 52eaf0c...da129b8 rf/MT-show -> origin/rf/MT-show  (mise à jour forcée)
     * [nouvelle branche] rf/autoindentpaste -> origin/rf/autoindentpaste
     * [nouvelle branche] rf/digits-unsigned -> origin/rf/digits-unsigned
     * [nouvelle branche] rf/digits-unsigned-nonrecur -> origin/rf/digits-unsigned-nonrecur
     * [nouvelle branche] rf/doc-push -> origin/rf/doc-push
     * [nouvelle branche] rf/rand/RANDOM_DEVICE -> origin/rf/rand/RANDOM_DEVICE
     * [nouvelle branche] rf/rand/fast -> origin/rf/rand/fast
     * [nouvelle branche] rf/rand/frompair -> origin/rf/rand/frompair
     * [nouvelle branche] rf/rand/genpair -> origin/rf/rand/genpair
     * [nouvelle branche] rf/rand/ndl -> origin/rf/rand/ndl
     * [nouvelle branche] rf/repl/iocontext -> origin/rf/repl/iocontext
     * [nouvelle branche] rf/union-immutable-set -> origin/rf/union-immutable-set
     * [nouvelle branche] sb/dllist  -> origin/sb/dllist
     * [nouvelle branche] sb/irrational-bigfloat -> origin/sb/irrational-bigfloat
     * [nouvelle branche] sb/reduce-empty -> origin/sb/reduce-empty
     * [nouvelle branche] sb/suitesparse-news -> origin/sb/suitesparse-news
     * [nouvelle branche] sf/httpbin -> origin/sf/httpbin
     * [nouvelle branche] sf/memprofiler -> origin/sf/memprofiler
     * [nouvelle branche] sf/remove_build_sysimg -> origin/sf/remove_build_sysimg
     * [nouvelle branche] sf/sticky_shells_and_ringing_bells -> origin/sf/sticky_shells_and_ringing_bells
     * [nouvelle branche] sf/which_doesnt_throw -> origin/sf/which_doesnt_throw
     * [nouvelle branche] sk/median-fix -> origin/sk/median-fix
     * [nouvelle branche] sk/my-precious -> origin/sk/my-precious
     * [nouvelle branche] sk/precompile-blacklist -> origin/sk/precompile-blacklist
     * [nouvelle branche] sk/trig    -> origin/sk/trig
     * [nouvelle branche] sk/winpaths -> origin/sk/winpaths
     * [nouvelle branche] sk/x-init  -> origin/sk/x-init
     * [nouvelle branche] staging    -> origin/staging
     f143ae0..1f25289  stevengj-patch-2 -> origin/stevengj-patch-2
     + 76b734a...bca2b53 tb/codegen-norecursion -> origin/tb/codegen-norecursion  (mise à jour forcée)
     * [nouvelle branche] tb/fnattrs -> origin/tb/fnattrs
     * [nouvelle branche] tb/hotfix  -> origin/tb/hotfix
     * [nouvelle branche] tb/log_nothing -> origin/tb/log_nothing
     * [nouvelle branche] teh/inlining_unreachable -> origin/teh/inlining_unreachable
     * [nouvelle branche] vc/7prep   -> origin/vc/7prep
     * [nouvelle branche] vc/asan_tasks -> origin/vc/asan_tasks
     * [nouvelle branche] vc/distloading -> origin/vc/distloading
     * [nouvelle branche] vc/irshow  -> origin/vc/irshow
     * [nouvelle branche] vc/llvm_undef -> origin/vc/llvm_undef
     * [nouvelle branche] vc/no_copy_stacks -> origin/vc/no_copy_stacks
     * [nouvelle branche] vc/ppc_unix_signals -> origin/vc/ppc_unix_signals
     * [nouvelle branche] vc/restored-1.0.1 -> origin/vc/restored-1.0.1
     * [nouvelle branche] vc/revert28449 -> origin/vc/revert28449
     * [nouvelle branche] vc/tsan    -> origin/vc/tsan
     * [nouvelle branche] vc/tsan_nort -> origin/vc/tsan_nort
     * [nouvelle branche] vc/vsts    -> origin/vc/vsts
     * [nouvelle branche] vs/arm-delete-readme -> origin/vs/arm-delete-readme
     * [nouvelle branche] vs/macports -> origin/vs/macports
     * [nouvelle étiquette] v0.6.3     -> v0.6.3
     * [nouvelle étiquette] v0.6.4     -> v0.6.4
     * [nouvelle étiquette] v0.7.0     -> v0.7.0
     * [nouvelle étiquette] v0.7.0-alpha -> v0.7.0-alpha
     * [nouvelle étiquette] v0.7.0-beta -> v0.7.0-beta
     * [nouvelle étiquette] v0.7.0-beta2 -> v0.7.0-beta2
     * [nouvelle étiquette] v0.7.0-rc1 -> v0.7.0-rc1
     * [nouvelle étiquette] v0.7.0-rc2 -> v0.7.0-rc2
     * [nouvelle étiquette] v0.7.0-rc3 -> v0.7.0-rc3
     * [nouvelle étiquette] v1.0.0     -> v1.0.0
     * [nouvelle étiquette] v1.0.0-rc1 -> v1.0.0-rc1
     * [nouvelle étiquette] v1.0.1     -> v1.0.1
     * [nouvelle étiquette] v1.0.2     -> v1.0.2    
     #+END_EXAMPLE

     Switching to last stable:
     #+begin_src sh :session foo :results output :exports both
       git checkout v1.0.2
       make -j7
     #+end_src

     #+RESULTS:
     
     Update julia already installed packages:
     #+begin_src sh :session foo :results output :exports both
       mkdir /scratch/squinito/.julia/v1.0
       cp /scratch/squinito/.julia/v0.6/REQUIRE /scratch/squinito/.julia/v1.0/
       echo "export JULIA_DEPOT_PATH=/scratch/squinito/.julia/" >> ~/.bashrc
     #+end_src

     #+BEGIN_SRC julia
       using Pkg
       Pkg.add("Missings")
       Pkg.add("DataFrames")
       Pkg.add("CSV")
       Pkg.add("YAML")
     #+END_SRC

*** 2018-12-13
**** Handling big csv
***** C memory usage
    #+BEGIN_EXAMPLE
    --------------------------------------------------------------------------------
Command:            ./main /scratch/squinito/Dev/Data/dataset.csv
Massif arguments:   (none)
ms_print arguments: massif.out.15584
--------------------------------------------------------------------------------


    GB
3.438^                                                                       #
     |                                                                    :::#
     |                                                                ::@::::#
     |                                                             :::::@::::#
     |                                                         :::@:::::@::::#
     |                                                      @:::::@:::::@::::#
     |                                                  ::::@:::::@:::::@::::#
     |                                               ::@::::@:::::@:::::@::::#
     |                                            :@:::@::::@:::::@:::::@::::#
     |                                        :::::@:::@::::@:::::@:::::@::::#
     |                                    :::::: ::@:::@::::@:::::@:::::@::::#
     |                                 @:::::::: ::@:::@::::@:::::@:::::@::::#
     |                            :@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
     |                         ::::@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
     |                      :::::::@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
     |                  :::::::::::@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
     |              :::::::::::::::@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
     |           ::::::::::::::::::@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
     |       ::::::::::::::::::::::@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
     |   @:::::::::::::::::::::::::@:::@: :::::: ::@:::@::::@:::::@:::::@::::#
   0 +----------------------------------------------------------------------->Gi
     0                                                                   413.0

Number of snapshots: 90
 Detailed snapshots: [1, 4, 29, 33, 45, 49, 59, 69, 79, 89 (peak)]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1  7,856,423,114       65,662,800       65,640,168        22,632            0
99.97% (65,640,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.46% (35,760,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.46% (35,760,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.46% (35,760,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.46% (35,760,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.23% (17,880,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.23% (17,880,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.23% (17,880,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.23% (17,880,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.28% (12,000,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.28% (12,000,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.28% (12,000,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.28% (12,000,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  2 13,406,193,902      111,849,296      111,840,168         9,128            0
  3 18,057,290,149      150,568,784      150,560,168         8,616            0
  4 23,343,380,629      194,572,112      194,560,168        11,944            0
99.99% (194,560,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.52% (106,080,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.52% (106,080,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.52% (106,080,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.52% (106,080,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.26% (53,040,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.26% (53,040,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.26% (53,040,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.26% (53,040,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.21% (35,440,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.21% (35,440,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.21% (35,440,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.21% (35,440,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  5 30,216,959,573      251,764,560      251,760,168         4,392            0
  6 37,847,036,050      315,137,872      315,120,168        17,704            0
  7 44,540,473,926      370,573,136      370,560,168        12,968            0
  8 51,235,366,898      426,446,672      426,440,168         6,504            0
  9 57,418,841,500      477,929,296      477,920,168         9,128            0
 10 64,765,770,121      539,086,672      539,080,168         6,504            0
 11 68,678,150,627      571,658,064      571,640,168        17,896            0
 12 76,133,234,090      633,700,176      633,680,168        20,008            0
 13 82,070,335,125      682,979,152      682,960,168        18,984            0
 14 88,870,425,415      739,299,152      739,280,168        18,984            0
 15 92,446,627,709      769,216,336      769,200,168        16,168            0
 16 98,630,323,135      820,686,672      820,680,168         6,504            0
 17 107,404,136,910      893,722,448      893,720,168         2,280            0
 18 112,637,969,964      937,291,600      937,280,168        11,432            0
 19 119,141,160,752      991,403,856      991,400,168         3,688            0
 20 126,771,938,637    1,054,777,168    1,054,760,168        17,000            0
 21 131,872,642,610    1,097,011,024    1,097,000,168        10,856            0
 22 140,740,412,998    1,170,935,632    1,170,920,168        15,464            0
 23 144,545,914,286    1,202,610,000    1,202,600,168         9,832            0
 24 152,152,710,578    1,265,971,024    1,265,960,168        10,856            0
 25 158,490,730,216    1,318,776,656    1,318,760,168        16,488            0
 26 166,097,343,274    1,382,129,488    1,382,120,168         9,320            0
 27 171,186,307,251    1,424,375,632    1,424,360,168        15,464            0
 28 177,555,566,691    1,477,177,168    1,477,160,168        17,000            0
 29 181,444,732,014    1,509,728,080    1,509,720,168         7,912            0
100.00% (1,509,720,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.54% (823,440,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.54% (823,440,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.54% (823,440,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.54% (823,440,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (411,720,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (411,720,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (411,720,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (411,720,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.19% (274,560,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.19% (274,560,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.19% (274,560,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.19% (274,560,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 30 188,731,689,657    1,570,459,472    1,570,440,168        19,304            0
 31 193,589,594,992    1,610,923,856    1,610,920,168         3,688            0
 32 198,448,041,848    1,651,412,816    1,651,400,168        12,648            0
 33 205,737,791,385    1,712,144,208    1,712,120,168        24,040            0
100.00% (1,712,120,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.54% (933,840,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.54% (933,840,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.54% (933,840,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.54% (933,840,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (466,920,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (466,920,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (466,920,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (466,920,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.19% (311,360,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.19% (311,360,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.19% (311,360,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.19% (311,360,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 34 215,368,233,363    1,792,212,816    1,792,200,168        12,648            0
 35 222,527,402,846    1,851,613,008    1,851,600,168        12,840            0
 36 227,370,533,088    1,892,097,872    1,892,080,168        17,704            0
 37 232,228,932,101    1,932,574,544    1,932,560,168        14,376            0
 38 237,086,730,481    1,973,063,504    1,973,040,168        23,336            0
 39 241,944,858,462    2,013,540,176    2,013,520,168        20,008            0
 40 246,804,452,624    2,054,004,560    2,054,000,168         4,392            0
 41 251,664,145,724    2,094,493,520    2,094,480,168        13,352            0
 42 256,524,957,265    2,134,970,192    2,134,960,168        10,024            0
 43 266,081,135,690    2,214,174,544    2,214,160,168        14,376            0
 44 273,349,942,492    2,274,897,744    2,274,880,168        17,576            0
 45 278,207,802,713    2,315,370,320    2,315,360,168        10,152            0
100.00% (2,315,360,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.54% (1,262,880,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.54% (1,262,880,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.54% (1,262,880,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.54% (1,262,880,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (631,440,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (631,440,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (631,440,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (631,440,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.18% (421,040,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.18% (421,040,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.18% (421,040,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.18% (421,040,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 46 285,494,791,581    2,376,093,520    2,376,080,168        13,352            0
 47 290,354,390,468    2,416,570,192    2,416,560,168        10,024            0
 48 297,642,308,575    2,477,289,296    2,477,280,168         9,128            0
 49 302,453,390,049    2,517,339,984    2,517,320,168        19,816            0
100.00% (2,517,320,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.54% (1,373,040,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.54% (1,373,040,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.54% (1,373,040,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.54% (1,373,040,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (686,520,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (686,520,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (686,520,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (686,520,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.18% (457,760,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.18% (457,760,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.18% (457,760,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.18% (457,760,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 50 306,059,812,711    2,547,257,168    2,547,240,168        17,000            0
 51 309,666,744,418    2,577,178,448    2,577,160,168        18,280            0
 52 313,243,451,590    2,607,095,632    2,607,080,168        15,464            0
 53 316,827,051,831    2,637,012,816    2,637,000,168        12,648            0
 54 320,414,746,479    2,666,930,000    2,666,920,168         9,832            0
 55 324,001,916,424    2,696,859,472    2,696,840,168        19,304            0
 56 327,589,269,699    2,726,776,656    2,726,760,168        16,488            0
 57 331,176,981,149    2,756,693,840    2,756,680,168        13,672            0
 58 334,765,266,716    2,786,611,024    2,786,600,168        10,856            0
 59 338,354,132,777    2,816,532,304    2,816,520,168        12,136            0
100.00% (2,816,520,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.54% (1,536,240,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.54% (1,536,240,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.54% (1,536,240,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.54% (1,536,240,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (768,120,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (768,120,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (768,120,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (768,120,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.18% (512,160,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.18% (512,160,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.18% (512,160,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.18% (512,160,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 60 341,942,896,832    2,846,449,488    2,846,440,168         9,320            0
 61 345,533,836,753    2,876,366,672    2,876,360,168         6,504            0
 62 349,140,998,778    2,906,283,856    2,906,280,168         3,688            0
 63 352,747,562,198    2,936,225,616    2,936,200,168        25,448            0
 64 356,336,898,845    2,966,142,800    2,966,120,168        22,632            0
 65 359,914,477,244    2,996,059,984    2,996,040,168        19,816            0
 66 363,501,349,732    3,025,977,168    3,025,960,168        17,000            0
 67 367,088,914,685    3,055,898,448    3,055,880,168        18,280            0
 68 370,676,317,603    3,085,815,632    3,085,800,168        15,464            0
 69 374,263,379,367    3,115,732,816    3,115,720,168        12,648            0
100.00% (3,115,720,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.54% (1,699,440,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.54% (1,699,440,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.54% (1,699,440,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.54% (1,699,440,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (849,720,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (849,720,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (849,720,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (849,720,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.18% (566,560,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.18% (566,560,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.18% (566,560,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.18% (566,560,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 70 377,852,022,471    3,145,650,000    3,145,640,168         9,832            0
 71 381,440,552,410    3,175,579,472    3,175,560,168        19,304            0
 72 385,029,256,398    3,205,496,656    3,205,480,168        16,488            0
 73 388,618,347,113    3,235,413,840    3,235,400,168        13,672            0
 74 392,221,240,618    3,265,331,024    3,265,320,168        10,856            0
 75 395,828,341,243    3,295,252,304    3,295,240,168        12,136            0
 76 399,431,461,597    3,325,169,488    3,325,160,168         9,320            0
 77 403,060,071,814    3,355,533,136    3,355,520,168        12,968            0
 78 406,652,853,538    3,385,450,320    3,385,440,168        10,152            0
 79 410,244,867,442    3,415,371,600    3,415,360,168        11,432            0
100.00% (3,415,360,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.54% (1,862,880,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.54% (1,862,880,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.54% (1,862,880,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.54% (1,862,880,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (931,440,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (931,440,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (931,440,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (931,440,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.18% (621,040,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.18% (621,040,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.18% (621,040,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.18% (621,040,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 80 413,837,662,859    3,445,288,784    3,445,280,168         8,616            0
 81 417,430,098,157    3,475,205,968    3,475,200,168         5,800            0
 82 421,022,847,911    3,505,123,152    3,505,120,168         2,984            0
 83 424,617,009,703    3,535,064,912    3,535,040,168        24,744            0
 84 428,210,572,839    3,564,982,096    3,564,960,168        21,928            0
 85 431,804,496,312    3,594,899,280    3,594,880,168        19,112            0
 86 435,407,180,838    3,624,816,464    3,624,800,168        16,296            0
 87 439,018,436,776    3,654,737,744    3,654,720,168        17,576            0
 88 442,630,340,656    3,684,654,928    3,684,640,168        14,760            0
 89 443,406,532,734    3,691,167,568    3,691,160,168         7,400            0
100.00% (3,691,160,168B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->54.55% (2,013,360,000B) 0x400CEA: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->54.55% (2,013,360,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->54.55% (2,013,360,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->54.55% (2,013,360,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->27.27% (1,006,680,000B) 0x400D76: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->27.27% (1,006,680,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->27.27% (1,006,680,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->27.27% (1,006,680,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->18.18% (671,120,000B) 0x400DFF: allocate (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| ->18.18% (671,120,000B) 0x400E4A: grow (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| | ->18.18% (671,120,000B) 0x40169E: load_csv (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |   ->18.18% (671,120,000B) 0x40138B: main (in /home/squinito/Dev/MISTIS/FMC/src/tools/neighbourhood/main)
| |     
| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->00.00% (168B) in 1+ places, all below ms_print's threshold (01.00%)


    #+END_EXAMPLE
***** Python memory usage
****** Specifying type
      #+begin_src sh :results output :exports both
        mprof run ~/Dev/MISTIS/FMC/src/tools/neighbourhood/test_load.py --file /scratch/squinito/Dev/Data/dataset.csv
      #+end_src

      #+RESULTS:
      #+begin_example
        Patient  Coord_X  Coord_Y  Coord_Z        ADC       CBV       AUC
      0      P1        0        0        0   7.866038  1.709130  1.433059
      1      P1        1        0        0   6.765295  1.429368  1.840923
      2      P1        2        0        0   7.107266  0.423097 -0.570360
      3      P1        3        0        0   7.401812 -0.138951  0.446203
      4      P1        4        0        0   9.151793  0.574290  2.350803
      5      P1        5        0        0   8.913643 -0.509734  2.030398
      6      P1        6        0        0   7.312208  0.596472  3.171836
      7      P1        7        0        0   7.629743  2.362686  2.445601
      8      P1        8        0        0   8.990711  3.471004  0.777070
      9      P1        9        0        0  10.535673 -1.175639  0.094035
      mprof: Sampling memory every 0.1s
      running as a Python program...
      #+end_example

      Loading csv with pandas consume x3 time more memory.
      #+begin_src sh :results output :exports both
        mprof plot
      #+end_src

      #+RESULTS:
      : Using last profile data.
      
      #+RESULTS:
      [[file:/home/squinito/Dev/MISTIS/Brain-MRI/org/img/memory_profiling/python/csv_read/load_csv.png]]    

****** Specifying subtype
      #+begin_src sh :results output :exports both
        mprof run ~/Dev/MISTIS/FMC/src/tools/neighbourhood/test_load.py --file /scratch/squinito/Dev/Data/dataset.csv
      #+end_src

      #+RESULTS:
      #+begin_example
        Patient  Coord_X  Coord_Y  Coord_Z        ADC       CBV       AUC
      0      P1        0        0        0   7.866038  1.709130  1.433059
      1      P1        1        0        0   6.765295  1.429368  1.840923
      2      P1        2        0        0   7.107266  0.423097 -0.570360
      3      P1        3        0        0   7.401812 -0.138951  0.446203
      4      P1        4        0        0   9.151793  0.574290  2.350803
      5      P1        5        0        0   8.913643 -0.509734  2.030398
      6      P1        6        0        0   7.312208  0.596472  3.171836
      7      P1        7        0        0   7.629743  2.362686  2.445601
      8      P1        8        0        0   8.990711  3.471004  0.777070
      9      P1        9        0        0  10.535673 -1.175639  0.094035
      mprof: Sampling memory every 0.1s
      running as a Python program...
      #+end_example

      Loading csv with pandas consume x3 time more memory.
      #+begin_src sh :results output :exports both
        mprof plot
      #+end_src

      #+RESULTS:
      : Using last profile data.
      
      #+RESULTS:
      [[file:/home/squinito/Dev/MISTIS/Brain-MRI/org/img/memory_profiling/python/csv_read/load_csv_subtype.png]]
* 2019
** January
*** 2019-01-02
**** TODO Numeric and environment MISTIS presentation
     DEADLINE: <2019-01-28 lun.>

**** TODO Add written description of the FMC code architecture
* Emacs Setup 							   :noexport:
  This document has local variables in its postembule, which should
  allow Org-mode to work seamlessly without any setup. If you're
  uncomfortable using such variables, you can safely ignore them at
  startup. Exporting may require that you copy them in your .emacs.

# Local Variables:
# eval:    (require 'org-install)
# eval:    (org-babel-do-load-languages 'org-babel-load-languages '( (sh . t) (R . t) (perl . t) (ditaa . t) ))
# eval:    (setq org-confirm-babel-evaluate nil)
# eval:    (unless (boundp 'org-latex-classes) (setq org-latex-classes nil))
# eval:    (add-to-list 'org-latex-classes '("memoir" "\\documentclass[smallextended]{memoir} \n \[NO-DEFAULT-PACKAGES]\n \[EXTRA]\n  \\usepackage{graphicx}\n  \\usepackage{hyperref}" ("\\chapter{%s}" . "\\chapter*{%s}") ("\\section{%s}" . "\\section*{%s}") ("\\subsection{%s}" . "\\subsection*{%s}")                       ("\\subsubsection{%s}" . "\\subsubsection*{%s}")                       ("\\paragraph{%s}" . "\\paragraph*{%s}")                       ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
# eval:    (add-to-list 'org-latex-classes '("acm-proc-article-sp" "\\documentclass{acm_proc_article-sp}\n \[NO-DEFAULT-PACKAGES]\n \[EXTRA]\n"  ("\\section{%s}" . "\\section*{%s}") ("\\subsection{%s}" . "\\subsection*{%s}")                       ("\\subsubsection{%s}" . "\\subsubsection*{%s}")                       ("\\paragraph{%s}" . "\\paragraph*{%s}")                       ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
# eval:    (setq org-alphabetical-lists t)
# eval:    (setq org-src-fontify-natively t)
# eval:   (setq org-export-babel-evaluate nil)
# eval:   (setq ispell-local-dictionary "english")
# eval:   (eval (flyspell-mode t))
# eval:    (setq org-latex-listings 'minted)
# eval:    (setq org-latex-minted-options '(("bgcolor" "white") ("style" "tango") ("numbers" "left") ("numbersep" "5pt")))
# End:
